{"files":[{"path":"/Users/shadow/Projects/carbon/website/content/nodejs/index.mdx","data":{"lastModified":1725311992000,"frontmatter":{"title":"Carbon's NodeJS Wrapper","index":false},"toc":[],"structuredData":{"contents":[{"heading":"","content":"This package is a helper package for Carbon, that provides a simple way to run Carbon on a port locally, as well as a function to automatically load all commands in a folder."}],"headings":[]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/index.mdx","data":{"lastModified":1725496146000,"frontmatter":{"title":"Introduction","icon":"StickyNote","index":true},"toc":[{"title":"Join the Community","url":"#join-the-community","depth":2}],"structuredData":{"contents":[{"heading":"","content":"Carbon is a powerful framework designed for building HTTP Discord bots."},{"heading":"join-the-community","content":"Join our community on Discord to connect with other developers, share your projects, and get support."},{"heading":"join-the-community","content":"Weâ€™re excited to see what you create with Carbon!"}],"headings":[{"id":"join-the-community","content":"Join the Community"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/linked-roles/index.mdx","data":{"lastModified":1725329477000,"frontmatter":{"title":"Linked Roles","index":false},"toc":[{"title":"Usage","url":"#usage","depth":2},{"title":"Installation","url":"#installation","depth":3},{"title":"Example","url":"#example","depth":3}],"structuredData":{"contents":[{"heading":"","content":"Linked Roles are a handy feature of Discord that allows you to create roles that users have to meet certain criteria in order to claim those roles."},{"heading":"","content":"You can read more about the feature from an admin standpoint here, or from a user standpoint here.."},{"heading":"usage","content":"Linked Roles are straightforward to use in Carbon, all you need is to already have an instance of the Client from Carbon."},{"heading":"usage","content":"Then, create a new instance of the LinkedRoles class, and pass it your metadata and checkers, along with some options for the base URL and client secret and your client."},{"heading":"usage","content":"[!IMPORTANT]\nYou can only have 5 metadata per application, and they apply across all guilds your app is in."},{"heading":"example","content":"Once you have your LinkedRoles instance, you need to set it on Discord so that users will use it for linked roles.\nYou can see where to add this by clicking here, and set the linked role to <BASE_URL>/connect, so for example, https://my-carbon-worker.YOURNAME.workers.dev/connect."}],"headings":[{"id":"usage","content":"Usage"},{"id":"installation","content":"Installation"},{"id":"example","content":"Example"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/request/index.mdx","data":{"lastModified":1725311992000,"frontmatter":{"title":"Carbon's RequestClient","index":false},"toc":[],"structuredData":{"contents":[{"heading":"","content":"This is the internal package that handles making requests to the Discord API.\nIt is used by Carbon, and you should not need to use it directly, but feel free to if you feel like living dangerously."}],"headings":[]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/nodejs/api/index.mdx","data":{"frontmatter":{"title":"@buape/carbon-nodejs","index":false},"toc":[{"title":"Functions","url":"#functions","depth":2}],"structuredData":{"contents":[{"heading":"functions","content":"Function"},{"heading":"functions","content":"Description"},{"heading":"functions","content":"loadCommands"},{"heading":"functions","content":"-"},{"heading":"functions","content":"serve"},{"heading":"functions","content":"-"}],"headings":[{"id":"functions","content":"Functions"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/classes/autocomplete.mdx","data":{"lastModified":1725496146000,"frontmatter":{"title":"Autocomplete","index":false},"toc":[],"structuredData":{"contents":[{"heading":"","content":"Coming soon!"}],"headings":[]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/classes/commands.mdx","data":{"lastModified":1725496146000,"frontmatter":{"title":"Commands","index":false},"toc":[],"structuredData":{"contents":[{"heading":"","content":"Coming soon!"}],"headings":[]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/classes/context-menus.mdx","data":{"lastModified":1725496146000,"frontmatter":{"title":"Context Menus","index":false},"toc":[],"structuredData":{"contents":[{"heading":"","content":"Coming soon!"}],"headings":[]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/classes/index.mdx","data":{"lastModified":1725496146000,"frontmatter":{"title":"Classes","index":true},"toc":[],"structuredData":{"contents":[{"heading":"","content":"Coming soon!"}],"headings":[]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/classes/modals.mdx","data":{"lastModified":1725496146000,"frontmatter":{"title":"Modals","index":false},"toc":[],"structuredData":{"contents":[{"heading":"","content":"Coming soon!"}],"headings":[]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/api/index.mdx","data":{"frontmatter":{"title":"@buape/carbon","index":false},"toc":[{"title":"Enumerations","url":"#enumerations","depth":2},{"title":"Classes","url":"#classes","depth":2},{"title":"Type Aliases","url":"#type-aliases","depth":2},{"title":"Functions","url":"#functions","depth":2}],"structuredData":{"contents":[{"heading":"enumerations","content":"Enumeration"},{"heading":"enumerations","content":"Description"},{"heading":"enumerations","content":"ClientMode"},{"heading":"enumerations","content":"The mode that the client is running in. Different platforms have different requirements for how processes are handled."},{"heading":"classes","content":"Class"},{"heading":"classes","content":"Description"},{"heading":"classes","content":"AnySelectMenu"},{"heading":"classes","content":"-"},{"heading":"classes","content":"AnySelectMenuInteraction"},{"heading":"classes","content":"This is the base type interaction, all interaction types extend from this"},{"heading":"classes","content":"AutocompleteInteraction"},{"heading":"classes","content":"This is the base type interaction, all interaction types extend from this"},{"heading":"classes","content":"AutocompleteOptionsHandler"},{"heading":"classes","content":"This class is used to parse the options of a command, and provide errors for any missing or invalid options. It is used internally by the Command class."},{"heading":"classes","content":"BaseChannel"},{"heading":"classes","content":"-"},{"heading":"classes","content":"BaseCommand"},{"heading":"classes","content":"Represents the base data of a command that the user creates"},{"heading":"classes","content":"BaseComponent"},{"heading":"classes","content":"-"},{"heading":"classes","content":"BaseComponentInteraction"},{"heading":"classes","content":"This is the base type interaction, all interaction types extend from this"},{"heading":"classes","content":"BaseGuildChannel"},{"heading":"classes","content":"-"},{"heading":"classes","content":"BaseGuildTextChannel"},{"heading":"classes","content":"-"},{"heading":"classes","content":"BaseInteraction"},{"heading":"classes","content":"This is the base type interaction, all interaction types extend from this"},{"heading":"classes","content":"Button"},{"heading":"classes","content":"-"},{"heading":"classes","content":"ButtonInteraction"},{"heading":"classes","content":"This is the base type interaction, all interaction types extend from this"},{"heading":"classes","content":"ChannelSelectMenu"},{"heading":"classes","content":"-"},{"heading":"classes","content":"ChannelSelectMenuInteraction"},{"heading":"classes","content":"This is the base type interaction, all interaction types extend from this"},{"heading":"classes","content":"Client"},{"heading":"classes","content":"The main client used to interact with Discord"},{"heading":"classes","content":"Command"},{"heading":"classes","content":"Represents a standard command that the user creates"},{"heading":"classes","content":"CommandHandler"},{"heading":"classes","content":"-"},{"heading":"classes","content":"CommandInteraction"},{"heading":"classes","content":"Represents a command interaction"},{"heading":"classes","content":"CommandWithSubcommandGroups"},{"heading":"classes","content":"Represents a subcommand group command that the user creates. You make this instead of a Command class when you want to have subcommand groups in your options."},{"heading":"classes","content":"CommandWithSubcommands"},{"heading":"classes","content":"Represents a subcommand command that the user creates. You make this instead of a Command class when you want to have subcommands in your options."},{"heading":"classes","content":"ComponentHandler"},{"heading":"classes","content":"-"},{"heading":"classes","content":"DmChannel"},{"heading":"classes","content":"Represents a DM between two users."},{"heading":"classes","content":"GroupDmChannel"},{"heading":"classes","content":"Represents a group DM channel."},{"heading":"classes","content":"Guild"},{"heading":"classes","content":"-"},{"heading":"classes","content":"GuildAnnouncementChannel"},{"heading":"classes","content":"Represents a guild announcement channel."},{"heading":"classes","content":"GuildCategoryChannel"},{"heading":"classes","content":"Represents a guild category channel."},{"heading":"classes","content":"GuildForumChannel"},{"heading":"classes","content":"Represents a guild forum channel."},{"heading":"classes","content":"GuildMediaChannel"},{"heading":"classes","content":"Represents a guild media channel (a forum channel )"},{"heading":"classes","content":"GuildStageChannel"},{"heading":"classes","content":"-"},{"heading":"classes","content":"GuildStageOrVoiceChannel"},{"heading":"classes","content":"-"},{"heading":"classes","content":"GuildTextChannel"},{"heading":"classes","content":"-"},{"heading":"classes","content":"GuildThreadChannel"},{"heading":"classes","content":"-"},{"heading":"classes","content":"GuildThreadOnlyChannel"},{"heading":"classes","content":"-"},{"heading":"classes","content":"GuildVoiceChannel"},{"heading":"classes","content":"-"},{"heading":"classes","content":"LinkButton"},{"heading":"classes","content":"-"},{"heading":"classes","content":"MentionableSelectMenu"},{"heading":"classes","content":"-"},{"heading":"classes","content":"MentionableSelectMenuInteraction"},{"heading":"classes","content":"This is the base type interaction, all interaction types extend from this"},{"heading":"classes","content":"Message"},{"heading":"classes","content":"-"},{"heading":"classes","content":"Modal"},{"heading":"classes","content":"-"},{"heading":"classes","content":"ModalInteraction"},{"heading":"classes","content":"This is the base type interaction, all interaction types extend from this"},{"heading":"classes","content":"OptionsHandler"},{"heading":"classes","content":"This class is used to parse the options of a command, and provide errors for any missing or invalid options. It is used internally by the Command class."},{"heading":"classes","content":"PremiumButton"},{"heading":"classes","content":"-"},{"heading":"classes","content":"Role"},{"heading":"classes","content":"-"},{"heading":"classes","content":"RoleSelectMenu"},{"heading":"classes","content":"-"},{"heading":"classes","content":"RoleSelectMenuInteraction"},{"heading":"classes","content":"This is the base type interaction, all interaction types extend from this"},{"heading":"classes","content":"Row"},{"heading":"classes","content":"-"},{"heading":"classes","content":"StringSelectMenu"},{"heading":"classes","content":"-"},{"heading":"classes","content":"StringSelectMenuInteraction"},{"heading":"classes","content":"This is the base type interaction, all interaction types extend from this"},{"heading":"classes","content":"TextInput"},{"heading":"classes","content":"-"},{"heading":"classes","content":"User"},{"heading":"classes","content":"-"},{"heading":"classes","content":"UserSelectMenu"},{"heading":"classes","content":"-"},{"heading":"classes","content":"UserSelectMenuInteraction"},{"heading":"classes","content":"This is the base type interaction, all interaction types extend from this"},{"heading":"type-aliases","content":"Type alias"},{"heading":"type-aliases","content":"Description"},{"heading":"type-aliases","content":"AnySelectMenuComponentType"},{"heading":"type-aliases","content":"-"},{"heading":"type-aliases","content":"ClientOptions"},{"heading":"type-aliases","content":"The options used for initializing the client"},{"heading":"type-aliases","content":"CommandOptions"},{"heading":"type-aliases","content":"-"},{"heading":"type-aliases","content":"ComponentAdditionalData"},{"heading":"type-aliases","content":"-"},{"heading":"type-aliases","content":"InteractionFileData"},{"heading":"type-aliases","content":"The data for a file to send in an interaction"},{"heading":"type-aliases","content":"InteractionReplyData"},{"heading":"type-aliases","content":"The data to reply to an interaction"},{"heading":"type-aliases","content":"InteractionReplyOptions"},{"heading":"type-aliases","content":"Additional options for replying to an interaction"},{"heading":"type-aliases","content":"RawOptions"},{"heading":"type-aliases","content":"-"},{"heading":"functions","content":"Function"},{"heading":"functions","content":"Description"},{"heading":"functions","content":"channelFactory"},{"heading":"functions","content":"-"}],"headings":[{"id":"enumerations","content":"Enumerations"},{"id":"classes","content":"Classes"},{"id":"type-aliases","content":"Type Aliases"},{"id":"functions","content":"Functions"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/even-more/contributing.mdx","data":{"lastModified":1725496146000,"frontmatter":{"title":"Contributing","index":false},"toc":[],"structuredData":{"contents":[{"heading":"","content":"Coming soon!"}],"headings":[]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/even-more/powered-by-carbon.mdx","data":{"lastModified":1725496146000,"frontmatter":{"title":"Powered by Carbon","index":false},"toc":[],"structuredData":{"contents":[{"heading":"","content":"Coming soon!"}],"headings":[]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/getting-started/bun.mdx","data":{"lastModified":1725496146000,"frontmatter":{"title":"Bun","index":false},"toc":[],"structuredData":{"contents":[{"heading":"","content":"Coming soon!"}],"headings":[]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/getting-started/cloudflare-workers.mdx","data":{"lastModified":1725329675000,"frontmatter":{"title":"Cloudflare Workers","index":false},"toc":[{"title":"File Structure","url":"#file-structure","depth":2},{"title":"Getting Started","url":"#getting-started","depth":2},{"title":"Installation","url":"#installation","depth":3},{"title":"Setting up your Worker","url":"#setting-up-your-worker","depth":3},{"title":"Creating a Client","url":"#creating-a-client","depth":3},{"title":"Adding Commands","url":"#adding-commands","depth":3},{"title":"Deploying","url":"#deploying","depth":2}],"structuredData":{"contents":[{"heading":"","content":"Cloudflare Workers is a quick and free option for hosting your bot, and is the primary runtime that we at Buape Studios use Carbon on."},{"heading":"installation","content":"First, we need to install Carbon, as well as Wrangler to help us deploy our worker."},{"heading":"installation","content":"Let's also add @cloudflare/workers-types, so that we can use the ExecutionContext type."},{"heading":"setting-up-your-worker","content":"Let's start by creating your wrangler.toml file, which will contain the configuration for your worker."},{"heading":"setting-up-your-worker","content":"Now, you need to get your client ID, public key, and token. You can learn more about these here."},{"heading":"setting-up-your-worker","content":"Let's add these to your worker:"},{"heading":"setting-up-your-worker","content":"After each of these commands, you'l be prompted to enter the value."},{"heading":"creating-a-client","content":"Now let's start your index.ts file. It will be the entry point for your worker, and the main file that will be executed when your worker is deployed."},{"heading":"creating-a-client","content":"First, we need to import the Carbon client."},{"heading":"creating-a-client","content":"We also need to get two types: we need to create a type for our environment variables that we set in the wrangler.toml file, and we need to import the ExecutionContext type from @cloudflare/workers-types."},{"heading":"creating-a-client","content":"In Cloudflare Workers, everything is exported in one object. The fetch function is the entry point for your worker."},{"heading":"creating-a-client","content":"Now, let's add some code to actually use Carbon. First, we will create a new Carbon client."},{"heading":"adding-commands","content":"Now that we have our client, we can start adding commands to it. Let's create a new file called ping.ts in the src/commands folder."},{"heading":"adding-commands","content":"This is a basic command, you set the name and description, and then add a run function that will be called when the command is used."},{"heading":"adding-commands","content":"Now, let's add this command to our client."},{"heading":"adding-commands","content":"Finally, we need to add a way to deploy your commands to Discord. We can do this by adding a deploy route to our client.\nAdd this right above the client.router.fetch line:"},{"heading":"adding-commands","content":"And that's it! You now have a basic Carbon bot running on Cloudflare Workers.\nIf you want to add more commands, just create more classes in the src/commands folder, and add them to the client in the src/index.ts file."},{"heading":"deploying","content":"To deploy your bot, let's add some scripts to your package.json file."},{"heading":"deploying","content":"Let's also add some scripts to our package.json file."},{"heading":"deploying","content":"Then you can use these like this:"},{"heading":"deploying","content":"This will push your code to Cloudflare, and deploy your worker. You can also use the tail command to see the logs from your worker."},{"heading":"deploying","content":"Now you'll need to setup your bot on the Discord Developer Portal. Take a look at the following cards for more information."}],"headings":[{"id":"file-structure","content":"File Structure"},{"id":"getting-started","content":"Getting Started"},{"id":"installation","content":"Installation"},{"id":"setting-up-your-worker","content":"Setting up your Worker"},{"id":"creating-a-client","content":"Creating a Client"},{"id":"adding-commands","content":"Adding Commands"},{"id":"deploying","content":"Deploying"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/getting-started/index.mdx","data":{"lastModified":1725496146000,"frontmatter":{"title":"Getting Started","description":"Getting started with Carbon","index":true},"toc":[],"structuredData":{"contents":[],"headings":[]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/getting-started/nextjs.mdx","data":{"lastModified":1725496146000,"frontmatter":{"title":"Next.js","index":false},"toc":[],"structuredData":{"contents":[{"heading":"","content":"Coming soon!"}],"headings":[]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/getting-started/nodejs.mdx","data":{"lastModified":1725326932000,"frontmatter":{"title":"Node.js","index":false},"toc":[{"title":"File Structure","url":"#file-structure","depth":2},{"title":"Getting Started","url":"#getting-started","depth":2},{"title":"Installation","url":"#installation","depth":3},{"title":"Setting up your .env","url":"#setting-up-your-env","depth":3},{"title":"Creating a Client","url":"#creating-a-client","depth":3},{"title":"Adding Commands","url":"#adding-commands","depth":3},{"title":"Running","url":"#running","depth":2}],"structuredData":{"contents":[{"heading":"","content":"Node.js is a popular choice for running your bot, and has first-class support from Carbon."},{"heading":"installation","content":"First, we need to install Carbon and its NodeJS package, as well as env-cmd to help us set our environment variables, and the typings for node."},{"heading":"setting-up-your-env","content":"Let's start by creating your .env file, which will contain the secrets and tokens for your app."},{"heading":"setting-up-your-env","content":"Now, you need to get your client ID, public key, and token, and fill those out there. You can learn more about these here."},{"heading":"creating-a-client","content":"Now let's start your index.ts file. It will be the entry point for your worker, and the main file that will be executed when your worker is deployed."},{"heading":"creating-a-client","content":"First, we need to import the Carbon client."},{"heading":"creating-a-client","content":"We also need to import the NodeJS helpers from @buape/carbon-nodejs."},{"heading":"creating-a-client","content":"Now, let's make our Client."},{"heading":"creating-a-client","content":"And finally, we need to host Carbon on a port."},{"heading":"adding-commands","content":"Now that we have our client, we can start adding commands to it. Let's create a new file called ping.ts in the src/commands folder."},{"heading":"adding-commands","content":"This is a basic command, you set the name and description, and then add a run function that will be called when the command is used."},{"heading":"adding-commands","content":"Now, let's add this command to our client. We already created the __dirname variable for where our code is running earlier, so we can use that and load all the commands in that folder."},{"heading":"adding-commands","content":"And that's it! You now have a basic Carbon bot running on NodeJS.\nIf you want to add more commands, just create more classes in the src/commands folder, and add them to the client in the src/index.ts file."},{"heading":"running","content":"To run your bot, let's add some scripts to your package.json file."},{"heading":"running","content":"Let's also add some scripts to our package.json file."},{"heading":"running","content":"Then you can use this command:"},{"heading":"running","content":"This will compile your code, and run your bot with the environment variables from your .env file."},{"heading":"running","content":"Now you'll need to setup your bot on the Discord Developer Portal. Take a look at the following cards for more information."}],"headings":[{"id":"file-structure","content":"File Structure"},{"id":"getting-started","content":"Getting Started"},{"id":"installation","content":"Installation"},{"id":"setting-up-your-env","content":"Setting up your .env"},{"id":"creating-a-client","content":"Creating a Client"},{"id":"adding-commands","content":"Adding Commands"},{"id":"running","content":"Running"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/helpful-guides/custom-router.mdx","data":{"lastModified":1725496146000,"frontmatter":{"title":"Custom Router","index":false},"toc":[],"structuredData":{"contents":[{"heading":"","content":"If you want to use a custom router for your bot, you can use the handle method on the client."}],"headings":[]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/helpful-guides/index.mdx","data":{"frontmatter":{"title":"Helpful Guides","index":true},"toc":[],"structuredData":{"contents":[{"heading":"","content":"Coming soon!"}],"headings":[]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/helpful-guides/partials.mdx","data":{"lastModified":1725496146000,"frontmatter":{"title":"Partials","index":false},"toc":[],"structuredData":{"contents":[{"heading":"","content":"Coming soon!"}],"headings":[]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/helpful-guides/responses.mdx","data":{"lastModified":1725496146000,"frontmatter":{"title":"Replying vs Deferring vs Acknowledging","index":false},"toc":[],"structuredData":{"contents":[{"heading":"","content":"Coming soon!"}],"headings":[]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/helpful-guides/urls.mdx","data":{"lastModified":1725496146000,"frontmatter":{"title":"Setting URLs","index":false},"toc":[{"title":"Setting your interaction URL","url":"#setting-your-interaction-url","depth":2}],"structuredData":{"contents":[{"heading":"","content":"The Discord Developer Portal is the main place that you can manage your bot on Discord."},{"heading":"setting-your-interaction-url","content":"Once you have Carbon running, you'll want to set your interaction URL. This is the URL that Discord will send interactions to.\nUnless you've modified it, this will be at https://DOMAIN.COM/interaction, replacing DOMAIN.COM with your domain."},{"heading":"setting-your-interaction-url","content":"Go to the Information tab on the left panel for your bot, and look below the public key."},{"heading":"setting-your-interaction-url","content":"Put your interaction URL in the Interaction URL field, and click Save Changes.\nDiscord will then attempt to send a test interaction to your URL, and if it succeeds, you're good to go!\nIf not, make sure you've set the URL correctly, and make sure that Carbon is actually running."}],"headings":[{"id":"setting-your-interaction-url","content":"Setting your interaction URL"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/helpful-guides/why-classes.mdx","data":{"lastModified":1725496146000,"frontmatter":{"title":"Why Classes?","index":false},"toc":[],"structuredData":{"contents":[{"heading":"","content":"Coming soon!"}],"headings":[]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/linked-roles/api/index.mdx","data":{"frontmatter":{"title":"@buape/carbon-linked-roles","index":false},"toc":[{"title":"Enumerations","url":"#enumerations","depth":2},{"title":"Classes","url":"#classes","depth":2},{"title":"Type Aliases","url":"#type-aliases","depth":2}],"structuredData":{"contents":[{"heading":"enumerations","content":"Enumeration"},{"heading":"enumerations","content":"Description"},{"heading":"enumerations","content":"ApplicationRoleConnectionMetadataType"},{"heading":"enumerations","content":"The type of metadata that you can check for"},{"heading":"classes","content":"Class"},{"heading":"classes","content":"Description"},{"heading":"classes","content":"LinkedRoles"},{"heading":"classes","content":"This class is the main class that is used for the linked roles feature of Carbon. It handles all the additional routes and oauth."},{"heading":"type-aliases","content":"Type alias"},{"heading":"type-aliases","content":"Description"},{"heading":"type-aliases","content":"LinkedRoleCriteria"},{"heading":"type-aliases","content":"The metadata that you want to check for, and that should show to the end-user on Discord."},{"heading":"type-aliases","content":"LinkedRolesOptions"},{"heading":"type-aliases","content":"The options for the linked roles package"}],"headings":[{"id":"enumerations","content":"Enumerations"},{"id":"classes","content":"Classes"},{"id":"type-aliases","content":"Type Aliases"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/request/api/index.mdx","data":{"frontmatter":{"title":"@buape/carbon-request","index":false},"toc":[{"title":"Classes","url":"#classes","depth":2},{"title":"Interfaces","url":"#interfaces","depth":2},{"title":"Type Aliases","url":"#type-aliases","depth":2},{"title":"Functions","url":"#functions","depth":2}],"structuredData":{"contents":[{"heading":"classes","content":"Class"},{"heading":"classes","content":"Description"},{"heading":"classes","content":"BaseError"},{"heading":"classes","content":"-"},{"heading":"classes","content":"DiscordError"},{"heading":"classes","content":"-"},{"heading":"classes","content":"RateLimitError"},{"heading":"classes","content":"A RateLimitError is thrown when the bot is rate limited by Discord, and you don't have requests set to queue."},{"heading":"classes","content":"RequestClient"},{"heading":"classes","content":"This is the main class that handles making requests to the Discord API. It is used internally by Carbon, and you should not need to use it directly, but feel free to if you feel like living dangerously."},{"heading":"interfaces","content":"Interface"},{"heading":"interfaces","content":"Description"},{"heading":"interfaces","content":"TransformedError"},{"heading":"interfaces","content":"-"},{"heading":"type-aliases","content":"Type alias"},{"heading":"type-aliases","content":"Description"},{"heading":"type-aliases","content":"Attachment"},{"heading":"type-aliases","content":"-"},{"heading":"type-aliases","content":"DiscordRawError"},{"heading":"type-aliases","content":"-"},{"heading":"type-aliases","content":"QueuedRequest"},{"heading":"type-aliases","content":"-"},{"heading":"type-aliases","content":"RequestClientOptions"},{"heading":"type-aliases","content":"The options used to initialize the RequestClient"},{"heading":"type-aliases","content":"RequestData"},{"heading":"type-aliases","content":"-"},{"heading":"functions","content":"Function"},{"heading":"functions","content":"Description"},{"heading":"functions","content":"errorMapper"},{"heading":"functions","content":"-"}],"headings":[{"id":"classes","content":"Classes"},{"id":"interfaces","content":"Interfaces"},{"id":"type-aliases","content":"Type Aliases"},{"id":"functions","content":"Functions"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/nodejs/api/functions/loadCommands.mdx","data":{"frontmatter":{"title":"loadCommands","index":false},"toc":[{"title":"Parameters","url":"#parameters","depth":2},{"title":"Returns","url":"#returns","depth":2}],"structuredData":{"contents":[{"heading":"","content":"loadCommands(folderPath, dirname): Promise<BaseCommand[]>"},{"heading":"","content":"Load commands from a folder."},{"heading":"","content":"This folder should be structured as follows:"},{"heading":"","content":"In this example, command1.js and command2.js are in a parent folder, while command3.js and command4.js are in the main folder.\nThe parent folder is used to group commands together, but it is not required. If you do not want to group commands, you can put them in the main folder."},{"heading":"","content":"To load commands with this example, you would use loadCommands(\"commands\", __dirname)."},{"heading":"parameters","content":"Parameter"},{"heading":"parameters","content":"Type"},{"heading":"parameters","content":"Description"},{"heading":"parameters","content":"folderPath"},{"heading":"parameters","content":"string"},{"heading":"parameters","content":"The path to the main command folder"},{"heading":"parameters","content":"dirname"},{"heading":"parameters","content":"string"},{"heading":"parameters","content":"The name of the main directory of your application. If you are using ES Modules, this can be found with the following code: import { fileURLToPath } from \"node:url\" import { dirname } from \"node:path\" const __dirname = dirname(fileURLToPath(import.meta.url))"},{"heading":"returns","content":"Promise<BaseCommand[]>"},{"heading":"returns","content":"The loaded commands"}],"headings":[{"id":"parameters","content":"Parameters"},{"id":"returns","content":"Returns"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/nodejs/api/functions/serve.mdx","data":{"frontmatter":{"title":"serve","index":false},"toc":[{"title":"Parameters","url":"#parameters","depth":2},{"title":"Returns","url":"#returns","depth":2}],"structuredData":{"contents":[{"heading":"","content":"serve(client, options): void"},{"heading":"parameters","content":"Parameter"},{"heading":"parameters","content":"Type"},{"heading":"parameters","content":"client"},{"heading":"parameters","content":"Client"},{"heading":"parameters","content":"options"},{"heading":"parameters","content":"object"},{"heading":"parameters","content":"options.port"},{"heading":"parameters","content":"number"},{"heading":"returns","content":"void"}],"headings":[{"id":"parameters","content":"Parameters"},{"id":"returns","content":"Returns"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/classes/components/buttons.mdx","data":{"lastModified":1725496146000,"frontmatter":{"title":"Buttons","index":false},"toc":[],"structuredData":{"contents":[{"heading":"","content":"Coming soon!"}],"headings":[]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/classes/components/index.mdx","data":{"lastModified":1725496146000,"frontmatter":{"title":"Components","index":true},"toc":[],"structuredData":{"contents":[{"heading":"","content":"Coming soon!"}],"headings":[]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/classes/components/select-menus.mdx","data":{"lastModified":1725496146000,"frontmatter":{"title":"Select Menus","index":false},"toc":[],"structuredData":{"contents":[{"heading":"","content":"Coming soon!"}],"headings":[]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/classes/components/text-inputs.mdx","data":{"lastModified":1725496146000,"frontmatter":{"title":"Text Inputs","index":false},"toc":[],"structuredData":{"contents":[{"heading":"","content":"Coming soon!"}],"headings":[]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/api/classes/AnySelectMenu.mdx","data":{"frontmatter":{"title":"AnySelectMenu","index":false},"toc":[{"title":"Extends","url":"#extends","depth":2},{"title":"Extended by","url":"#extended-by","depth":2},{"title":"Constructors","url":"#constructors","depth":2},{"title":"new AnySelectMenu()","url":"#new-anyselectmenu","depth":3},{"title":"Parameters","url":"#parameters","depth":4},{"title":"Returns","url":"#returns","depth":4},{"title":"Inherited from","url":"#inherited-from","depth":4},{"title":"Properties","url":"#properties","depth":2},{"title":"Methods","url":"#methods","depth":2},{"title":"createId()","url":"#createid","depth":3},{"title":"Parameters","url":"#parameters-1","depth":4},{"title":"Returns","url":"#returns-1","depth":4},{"title":"Inherited from","url":"#inherited-from-1","depth":4},{"title":"run()","url":"#run","depth":3},{"title":"Parameters","url":"#parameters-2","depth":4},{"title":"Returns","url":"#returns-2","depth":4},{"title":"serialize()","url":"#serialize","depth":3},{"title":"Returns","url":"#returns-3","depth":4},{"title":"Overrides","url":"#overrides","depth":4},{"title":"serializeOptions()","url":"#serializeoptions","depth":3},{"title":"Returns","url":"#returns-4","depth":4}],"structuredData":{"contents":[{"heading":"extends","content":"BaseComponent"},{"heading":"extended-by","content":"ChannelSelectMenu"},{"heading":"extended-by","content":"MentionableSelectMenu"},{"heading":"extended-by","content":"RoleSelectMenu"},{"heading":"extended-by","content":"StringSelectMenu"},{"heading":"extended-by","content":"UserSelectMenu"},{"heading":"new-anyselectmenu","content":"new AnySelectMenu(data?): AnySelectMenu"},{"heading":"parameters","content":"Parameter"},{"heading":"parameters","content":"Type"},{"heading":"parameters","content":"data?"},{"heading":"parameters","content":"object"},{"heading":"parameters","content":"data.additionalData?"},{"heading":"parameters","content":"ComponentAdditionalData"},{"heading":"returns","content":"AnySelectMenu"},{"heading":"inherited-from","content":"BaseComponent.constructor"},{"heading":"properties","content":"Property"},{"heading":"properties","content":"Modifier"},{"heading":"properties","content":"Type"},{"heading":"properties","content":"Default value"},{"heading":"properties","content":"Description"},{"heading":"properties","content":"Overrides"},{"heading":"properties","content":"Inherited from"},{"heading":"properties","content":"additionalData"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | ComponentAdditionalData"},{"heading":"properties","content":"null"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseComponent.additionalData"},{"heading":"properties","content":"customId"},{"heading":"properties","content":"abstract"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The custom ID of the component"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseComponent.customId"},{"heading":"properties","content":"defer"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"false"},{"heading":"properties","content":"Whether the component response should be automatically deferred"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseComponent.defer"},{"heading":"properties","content":"disabled?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"ephemeral"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"false"},{"heading":"properties","content":"Whether the component response should be ephemeral"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseComponent.ephemeral"},{"heading":"properties","content":"maxValues?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"number"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"minValues?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"number"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"placeholder?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"type"},{"heading":"properties","content":"abstract"},{"heading":"properties","content":"AnySelectMenuComponentType"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The type of the component"},{"heading":"properties","content":"BaseComponent.type"},{"heading":"properties","content":"-"},{"heading":"createid","content":"createId(additionalData): string"},{"heading":"createid","content":"Create a custom ID to use for this component that embeds additional data that you want to be handed"},{"heading":"parameters-1","content":"Parameter"},{"heading":"parameters-1","content":"Type"},{"heading":"parameters-1","content":"Description"},{"heading":"parameters-1","content":"additionalData"},{"heading":"parameters-1","content":"null | ComponentAdditionalData"},{"heading":"parameters-1","content":"The additional data that you want to be passed in this component's custom ID"},{"heading":"returns-1","content":"string"},{"heading":"returns-1","content":"The custom ID to use"},{"heading":"inherited-from-1","content":"BaseComponent.createId"},{"heading":"run","content":"abstract run(interaction): Promise<void>"},{"heading":"parameters-2","content":"Parameter"},{"heading":"parameters-2","content":"Type"},{"heading":"parameters-2","content":"interaction"},{"heading":"parameters-2","content":"AnySelectMenuInteraction"},{"heading":"returns-2","content":"Promise<void>"},{"heading":"serialize","content":"serialize(): APISelectMenuComponent"},{"heading":"returns-3","content":"APISelectMenuComponent"},{"heading":"overrides","content":"BaseComponent.serialize"},{"heading":"serializeoptions","content":"abstract serializeOptions(): object | object | object | object | object"},{"heading":"returns-4","content":"object | object | object | object | object"}],"headings":[{"id":"extends","content":"Extends"},{"id":"extended-by","content":"Extended by"},{"id":"constructors","content":"Constructors"},{"id":"new-anyselectmenu","content":"new AnySelectMenu()"},{"id":"parameters","content":"Parameters"},{"id":"returns","content":"Returns"},{"id":"inherited-from","content":"Inherited from"},{"id":"properties","content":"Properties"},{"id":"methods","content":"Methods"},{"id":"createid","content":"createId()"},{"id":"parameters-1","content":"Parameters"},{"id":"returns-1","content":"Returns"},{"id":"inherited-from-1","content":"Inherited from"},{"id":"run","content":"run()"},{"id":"parameters-2","content":"Parameters"},{"id":"returns-2","content":"Returns"},{"id":"serialize","content":"serialize()"},{"id":"returns-3","content":"Returns"},{"id":"overrides","content":"Overrides"},{"id":"serializeoptions","content":"serializeOptions()"},{"id":"returns-4","content":"Returns"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/api/classes/AnySelectMenuInteraction.mdx","data":{"frontmatter":{"title":"AnySelectMenuInteraction","index":false},"toc":[{"title":"Extends","url":"#extends","depth":2},{"title":"Extended by","url":"#extended-by","depth":2},{"title":"Constructors","url":"#constructors","depth":2},{"title":"new AnySelectMenuInteraction()","url":"#new-anyselectmenuinteraction","depth":3},{"title":"Parameters","url":"#parameters","depth":4},{"title":"Returns","url":"#returns","depth":4},{"title":"Overrides","url":"#overrides","depth":4},{"title":"Properties","url":"#properties","depth":2},{"title":"Accessors","url":"#accessors","depth":2},{"title":"channel","url":"#channel","depth":3},{"title":"Returns","url":"#returns-1","depth":4},{"title":"Inherited from","url":"#inherited-from","depth":4},{"title":"guild","url":"#guild","depth":3},{"title":"Returns","url":"#returns-2","depth":4},{"title":"Inherited from","url":"#inherited-from-1","depth":4},{"title":"member","url":"#member","depth":3},{"title":"Returns","url":"#returns-3","depth":4},{"title":"Inherited from","url":"#inherited-from-2","depth":4},{"title":"message","url":"#message","depth":3},{"title":"Returns","url":"#returns-4","depth":4},{"title":"Inherited from","url":"#inherited-from-3","depth":4},{"title":"user","url":"#user","depth":3},{"title":"Returns","url":"#returns-5","depth":4},{"title":"Inherited from","url":"#inherited-from-4","depth":4},{"title":"values","url":"#values","depth":3},{"title":"Returns","url":"#returns-6","depth":4},{"title":"Methods","url":"#methods","depth":2},{"title":"defer()","url":"#defer","depth":3},{"title":"Returns","url":"#returns-7","depth":4},{"title":"Inherited from","url":"#inherited-from-5","depth":4},{"title":"reply()","url":"#reply","depth":3},{"title":"Parameters","url":"#parameters-1","depth":4},{"title":"Returns","url":"#returns-8","depth":4},{"title":"Inherited from","url":"#inherited-from-6","depth":4},{"title":"showModal()","url":"#showmodal","depth":3},{"title":"Parameters","url":"#parameters-2","depth":4},{"title":"Returns","url":"#returns-9","depth":4},{"title":"Inherited from","url":"#inherited-from-7","depth":4}],"structuredData":{"contents":[{"heading":"","content":"This is the base type interaction, all interaction types extend from this"},{"heading":"extends","content":"BaseComponentInteraction"},{"heading":"extended-by","content":"ChannelSelectMenuInteraction"},{"heading":"extended-by","content":"MentionableSelectMenuInteraction"},{"heading":"extended-by","content":"RoleSelectMenuInteraction"},{"heading":"extended-by","content":"StringSelectMenuInteraction"},{"heading":"extended-by","content":"UserSelectMenuInteraction"},{"heading":"new-anyselectmenuinteraction","content":"new AnySelectMenuInteraction(client, data): AnySelectMenuInteraction"},{"heading":"parameters","content":"Parameter"},{"heading":"parameters","content":"Type"},{"heading":"parameters","content":"client"},{"heading":"parameters","content":"Client"},{"heading":"parameters","content":"data"},{"heading":"parameters","content":"APIMessageComponentSelectMenuInteraction"},{"heading":"returns","content":"AnySelectMenuInteraction"},{"heading":"overrides","content":"BaseComponentInteraction.constructor"},{"heading":"properties","content":"Property"},{"heading":"properties","content":"Type"},{"heading":"properties","content":"Default value"},{"heading":"properties","content":"Description"},{"heading":"properties","content":"Overrides"},{"heading":"properties","content":"Inherited from"},{"heading":"properties","content":"_deferred"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"false"},{"heading":"properties","content":"Internal Whether the interaction is deferred already"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseComponentInteraction._deferred"},{"heading":"properties","content":"client"},{"heading":"properties","content":"Client"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseComponentInteraction.client"},{"heading":"properties","content":"componentType"},{"heading":"properties","content":"ComponentType"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseComponentInteraction.componentType"},{"heading":"properties","content":"customId"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseComponentInteraction.customId"},{"heading":"properties","content":"-"},{"heading":"properties","content":"rawData"},{"heading":"properties","content":"APIMessageComponentInteraction"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The raw data of the interaction"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseComponentInteraction.rawData"},{"heading":"properties","content":"type"},{"heading":"properties","content":"InteractionType"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The type of interaction"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseComponentInteraction.type"},{"heading":"properties","content":"userId"},{"heading":"properties","content":"undefined | string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The user who sent the interaction"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseComponentInteraction.userId"},{"heading":"channel","content":"get channel(): null | DmChannel | GuildCategoryChannel | GroupDmChannel | GuildTextChannel | GuildVoiceChannel | GuildAnnouncementChannel | GuildThreadChannel<ThreadChannelType> | GuildStageChannel | GuildForumChannel | GuildMediaChannel"},{"heading":"returns-1","content":"null | DmChannel | GuildCategoryChannel | GroupDmChannel | GuildTextChannel | GuildVoiceChannel | GuildAnnouncementChannel | GuildThreadChannel<ThreadChannelType> | GuildStageChannel | GuildForumChannel | GuildMediaChannel"},{"heading":"inherited-from","content":"BaseComponentInteraction.channel"},{"heading":"guild","content":"get guild(): null | Guild"},{"heading":"returns-2","content":"null | Guild"},{"heading":"inherited-from-1","content":"BaseComponentInteraction.guild"},{"heading":"member","content":"get member(): null | GuildMember"},{"heading":"returns-3","content":"null | GuildMember"},{"heading":"inherited-from-2","content":"BaseComponentInteraction.member"},{"heading":"message","content":"get message(): null | Message"},{"heading":"returns-4","content":"null | Message"},{"heading":"inherited-from-3","content":"BaseComponentInteraction.message"},{"heading":"user","content":"get user(): null | User"},{"heading":"returns-5","content":"null | User"},{"heading":"inherited-from-4","content":"BaseComponentInteraction.user"},{"heading":"values","content":"get values(): string[]"},{"heading":"values","content":"The raw IDs of the selected options (either role/string/channel IDs or the IDs you provided in your options)"},{"heading":"returns-6","content":"string[]"},{"heading":"defer","content":"defer(): Promise<void>"},{"heading":"defer","content":"Internal"},{"heading":"defer","content":"Defer the interaction response. This is used automatically by commands that are set to defer.\nIf the interaction is already deferred, this will do nothing."},{"heading":"returns-7","content":"Promise<void>"},{"heading":"inherited-from-5","content":"BaseComponentInteraction.defer"},{"heading":"reply","content":"reply(data, options): Promise<void>"},{"heading":"reply","content":"Reply to an interaction.\nIf the interaction is deferred, this will edit the original response."},{"heading":"parameters-1","content":"Parameter"},{"heading":"parameters-1","content":"Type"},{"heading":"parameters-1","content":"Description"},{"heading":"parameters-1","content":"data"},{"heading":"parameters-1","content":"InteractionReplyData"},{"heading":"parameters-1","content":"The response data"},{"heading":"parameters-1","content":"options"},{"heading":"parameters-1","content":"InteractionReplyOptions"},{"heading":"parameters-1","content":"-"},{"heading":"returns-8","content":"Promise<void>"},{"heading":"inherited-from-6","content":"BaseComponentInteraction.reply"},{"heading":"showmodal","content":"showModal(modal): Promise<void>"},{"heading":"parameters-2","content":"Parameter"},{"heading":"parameters-2","content":"Type"},{"heading":"parameters-2","content":"modal"},{"heading":"parameters-2","content":"Modal"},{"heading":"returns-9","content":"Promise<void>"},{"heading":"inherited-from-7","content":"BaseComponentInteraction.showModal"}],"headings":[{"id":"extends","content":"Extends"},{"id":"extended-by","content":"Extended by"},{"id":"constructors","content":"Constructors"},{"id":"new-anyselectmenuinteraction","content":"new AnySelectMenuInteraction()"},{"id":"parameters","content":"Parameters"},{"id":"returns","content":"Returns"},{"id":"overrides","content":"Overrides"},{"id":"properties","content":"Properties"},{"id":"accessors","content":"Accessors"},{"id":"channel","content":"channel"},{"id":"returns-1","content":"Returns"},{"id":"inherited-from","content":"Inherited from"},{"id":"guild","content":"guild"},{"id":"returns-2","content":"Returns"},{"id":"inherited-from-1","content":"Inherited from"},{"id":"member","content":"member"},{"id":"returns-3","content":"Returns"},{"id":"inherited-from-2","content":"Inherited from"},{"id":"message","content":"message"},{"id":"returns-4","content":"Returns"},{"id":"inherited-from-3","content":"Inherited from"},{"id":"user","content":"user"},{"id":"returns-5","content":"Returns"},{"id":"inherited-from-4","content":"Inherited from"},{"id":"values","content":"values"},{"id":"returns-6","content":"Returns"},{"id":"methods","content":"Methods"},{"id":"defer","content":"defer()"},{"id":"returns-7","content":"Returns"},{"id":"inherited-from-5","content":"Inherited from"},{"id":"reply","content":"reply()"},{"id":"parameters-1","content":"Parameters"},{"id":"returns-8","content":"Returns"},{"id":"inherited-from-6","content":"Inherited from"},{"id":"showmodal","content":"showModal()"},{"id":"parameters-2","content":"Parameters"},{"id":"returns-9","content":"Returns"},{"id":"inherited-from-7","content":"Inherited from"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/api/classes/AutocompleteInteraction.mdx","data":{"frontmatter":{"title":"AutocompleteInteraction","index":false},"toc":[{"title":"Extends","url":"#extends","depth":2},{"title":"Constructors","url":"#constructors","depth":2},{"title":"new AutocompleteInteraction()","url":"#new-autocompleteinteraction","depth":3},{"title":"Parameters","url":"#parameters","depth":4},{"title":"Returns","url":"#returns","depth":4},{"title":"Overrides","url":"#overrides","depth":4},{"title":"Properties","url":"#properties","depth":2},{"title":"Accessors","url":"#accessors","depth":2},{"title":"channel","url":"#channel","depth":3},{"title":"Returns","url":"#returns-1","depth":4},{"title":"Inherited from","url":"#inherited-from","depth":4},{"title":"guild","url":"#guild","depth":3},{"title":"Returns","url":"#returns-2","depth":4},{"title":"Inherited from","url":"#inherited-from-1","depth":4},{"title":"member","url":"#member","depth":3},{"title":"Returns","url":"#returns-3","depth":4},{"title":"Inherited from","url":"#inherited-from-2","depth":4},{"title":"message","url":"#message","depth":3},{"title":"Returns","url":"#returns-4","depth":4},{"title":"Inherited from","url":"#inherited-from-3","depth":4},{"title":"user","url":"#user","depth":3},{"title":"Returns","url":"#returns-5","depth":4},{"title":"Inherited from","url":"#inherited-from-4","depth":4},{"title":"Methods","url":"#methods","depth":2},{"title":"defer()","url":"#defer","depth":3},{"title":"Returns","url":"#returns-6","depth":4},{"title":"Overrides","url":"#overrides-1","depth":4},{"title":"reply()","url":"#reply","depth":3},{"title":"Returns","url":"#returns-7","depth":4},{"title":"Overrides","url":"#overrides-2","depth":4},{"title":"respond()","url":"#respond","depth":3},{"title":"Parameters","url":"#parameters-1","depth":4},{"title":"Returns","url":"#returns-8","depth":4},{"title":"showModal()","url":"#showmodal","depth":3},{"title":"Parameters","url":"#parameters-2","depth":4},{"title":"Returns","url":"#returns-9","depth":4},{"title":"Inherited from","url":"#inherited-from-5","depth":4}],"structuredData":{"contents":[{"heading":"","content":"This is the base type interaction, all interaction types extend from this"},{"heading":"extends","content":"BaseInteraction<APIApplicationCommandAutocompleteInteraction>"},{"heading":"new-autocompleteinteraction","content":"new AutocompleteInteraction(client, data, command?): AutocompleteInteraction"},{"heading":"parameters","content":"Parameter"},{"heading":"parameters","content":"Type"},{"heading":"parameters","content":"client"},{"heading":"parameters","content":"Client"},{"heading":"parameters","content":"data"},{"heading":"parameters","content":"APIApplicationCommandAutocompleteInteraction"},{"heading":"parameters","content":"command?"},{"heading":"parameters","content":"BaseCommand"},{"heading":"returns","content":"AutocompleteInteraction"},{"heading":"overrides","content":"BaseInteraction.constructor"},{"heading":"properties","content":"Property"},{"heading":"properties","content":"Type"},{"heading":"properties","content":"Default value"},{"heading":"properties","content":"Description"},{"heading":"properties","content":"Inherited from"},{"heading":"properties","content":"_deferred"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"false"},{"heading":"properties","content":"Internal Whether the interaction is deferred already"},{"heading":"properties","content":"BaseInteraction._deferred"},{"heading":"properties","content":"client"},{"heading":"properties","content":"Client"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseInteraction.client"},{"heading":"properties","content":"options?"},{"heading":"properties","content":"AutocompleteOptionsHandler"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"This is the options of the commands, parsed from the interaction data."},{"heading":"properties","content":"-"},{"heading":"properties","content":"rawData"},{"heading":"properties","content":"APIApplicationCommandAutocompleteInteraction"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The raw data of the interaction"},{"heading":"properties","content":"BaseInteraction.rawData"},{"heading":"properties","content":"type"},{"heading":"properties","content":"InteractionType"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The type of interaction"},{"heading":"properties","content":"BaseInteraction.type"},{"heading":"properties","content":"userId"},{"heading":"properties","content":"undefined | string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The user who sent the interaction"},{"heading":"properties","content":"BaseInteraction.userId"},{"heading":"channel","content":"get channel(): null | DmChannel | GuildCategoryChannel | GroupDmChannel | GuildTextChannel | GuildVoiceChannel | GuildAnnouncementChannel | GuildThreadChannel<ThreadChannelType> | GuildStageChannel | GuildForumChannel | GuildMediaChannel"},{"heading":"returns-1","content":"null | DmChannel | GuildCategoryChannel | GroupDmChannel | GuildTextChannel | GuildVoiceChannel | GuildAnnouncementChannel | GuildThreadChannel<ThreadChannelType> | GuildStageChannel | GuildForumChannel | GuildMediaChannel"},{"heading":"inherited-from","content":"BaseInteraction.channel"},{"heading":"guild","content":"get guild(): null | Guild"},{"heading":"returns-2","content":"null | Guild"},{"heading":"inherited-from-1","content":"BaseInteraction.guild"},{"heading":"member","content":"get member(): null | GuildMember"},{"heading":"returns-3","content":"null | GuildMember"},{"heading":"inherited-from-2","content":"BaseInteraction.member"},{"heading":"message","content":"get message(): null | Message"},{"heading":"returns-4","content":"null | Message"},{"heading":"inherited-from-3","content":"BaseInteraction.message"},{"heading":"user","content":"get user(): null | User"},{"heading":"returns-5","content":"null | User"},{"heading":"inherited-from-4","content":"BaseInteraction.user"},{"heading":"defer","content":"defer(): Promise<void>"},{"heading":"defer","content":"Internal"},{"heading":"defer","content":"Defer the interaction response. This is used automatically by commands that are set to defer.\nIf the interaction is already deferred, this will do nothing."},{"heading":"returns-6","content":"Promise<void>"},{"heading":"overrides-1","content":"BaseInteraction.defer"},{"heading":"reply","content":"reply(): Promise<void>"},{"heading":"reply","content":"Reply to an interaction.\nIf the interaction is deferred, this will edit the original response."},{"heading":"returns-7","content":"Promise<void>"},{"heading":"overrides-2","content":"BaseInteraction.reply"},{"heading":"respond","content":"respond(choices): Promise<void>"},{"heading":"respond","content":"Respond with the choices for an autocomplete interaction"},{"heading":"parameters-1","content":"Parameter"},{"heading":"parameters-1","content":"Type"},{"heading":"parameters-1","content":"choices"},{"heading":"parameters-1","content":"object[]"},{"heading":"returns-8","content":"Promise<void>"},{"heading":"showmodal","content":"showModal(modal): Promise<void>"},{"heading":"parameters-2","content":"Parameter"},{"heading":"parameters-2","content":"Type"},{"heading":"parameters-2","content":"modal"},{"heading":"parameters-2","content":"Modal"},{"heading":"returns-9","content":"Promise<void>"},{"heading":"inherited-from-5","content":"BaseInteraction.showModal"}],"headings":[{"id":"extends","content":"Extends"},{"id":"constructors","content":"Constructors"},{"id":"new-autocompleteinteraction","content":"new AutocompleteInteraction()"},{"id":"parameters","content":"Parameters"},{"id":"returns","content":"Returns"},{"id":"overrides","content":"Overrides"},{"id":"properties","content":"Properties"},{"id":"accessors","content":"Accessors"},{"id":"channel","content":"channel"},{"id":"returns-1","content":"Returns"},{"id":"inherited-from","content":"Inherited from"},{"id":"guild","content":"guild"},{"id":"returns-2","content":"Returns"},{"id":"inherited-from-1","content":"Inherited from"},{"id":"member","content":"member"},{"id":"returns-3","content":"Returns"},{"id":"inherited-from-2","content":"Inherited from"},{"id":"message","content":"message"},{"id":"returns-4","content":"Returns"},{"id":"inherited-from-3","content":"Inherited from"},{"id":"user","content":"user"},{"id":"returns-5","content":"Returns"},{"id":"inherited-from-4","content":"Inherited from"},{"id":"methods","content":"Methods"},{"id":"defer","content":"defer()"},{"id":"returns-6","content":"Returns"},{"id":"overrides-1","content":"Overrides"},{"id":"reply","content":"reply()"},{"id":"returns-7","content":"Returns"},{"id":"overrides-2","content":"Overrides"},{"id":"respond","content":"respond()"},{"id":"parameters-1","content":"Parameters"},{"id":"returns-8","content":"Returns"},{"id":"showmodal","content":"showModal()"},{"id":"parameters-2","content":"Parameters"},{"id":"returns-9","content":"Returns"},{"id":"inherited-from-5","content":"Inherited from"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/api/classes/AutocompleteOptionsHandler.mdx","data":{"frontmatter":{"title":"AutocompleteOptionsHandler","index":false},"toc":[{"title":"Extends","url":"#extends","depth":2},{"title":"Constructors","url":"#constructors","depth":2},{"title":"new AutocompleteOptionsHandler()","url":"#new-autocompleteoptionshandler","depth":3},{"title":"Parameters","url":"#parameters","depth":4},{"title":"Returns","url":"#returns","depth":4},{"title":"Inherited from","url":"#inherited-from","depth":4},{"title":"Properties","url":"#properties","depth":2},{"title":"Methods","url":"#methods","depth":2},{"title":"getBoolean()","url":"#getboolean","depth":3},{"title":"Parameters","url":"#parameters-1","depth":4},{"title":"Returns","url":"#returns-1","depth":4},{"title":"Inherited from","url":"#inherited-from-1","depth":4},{"title":"getChannel()","url":"#getchannel","depth":3},{"title":"Parameters","url":"#parameters-2","depth":4},{"title":"Returns","url":"#returns-2","depth":4},{"title":"Inherited from","url":"#inherited-from-2","depth":4},{"title":"getFocused()","url":"#getfocused","depth":3},{"title":"Returns","url":"#returns-3","depth":4},{"title":"getInteger()","url":"#getinteger","depth":3},{"title":"Parameters","url":"#parameters-3","depth":4},{"title":"Returns","url":"#returns-4","depth":4},{"title":"Inherited from","url":"#inherited-from-3","depth":4},{"title":"getMentionable()","url":"#getmentionable","depth":3},{"title":"Parameters","url":"#parameters-4","depth":4},{"title":"Returns","url":"#returns-5","depth":4},{"title":"Inherited from","url":"#inherited-from-4","depth":4},{"title":"getNumber()","url":"#getnumber","depth":3},{"title":"Parameters","url":"#parameters-5","depth":4},{"title":"Returns","url":"#returns-6","depth":4},{"title":"Inherited from","url":"#inherited-from-5","depth":4},{"title":"getRole()","url":"#getrole","depth":3},{"title":"Parameters","url":"#parameters-6","depth":4},{"title":"Returns","url":"#returns-7","depth":4},{"title":"Inherited from","url":"#inherited-from-6","depth":4},{"title":"getString()","url":"#getstring","depth":3},{"title":"Parameters","url":"#parameters-7","depth":4},{"title":"Returns","url":"#returns-8","depth":4},{"title":"Inherited from","url":"#inherited-from-7","depth":4},{"title":"getUser()","url":"#getuser","depth":3},{"title":"Parameters","url":"#parameters-8","depth":4},{"title":"Returns","url":"#returns-9","depth":4},{"title":"Inherited from","url":"#inherited-from-8","depth":4}],"structuredData":{"contents":[{"heading":"","content":"This class is used to parse the options of a command, and provide errors for any missing or invalid options.\nIt is used internally by the Command class."},{"heading":"extends","content":"OptionsHandler"},{"heading":"new-autocompleteoptionshandler","content":"new AutocompleteOptionsHandler(client, options): AutocompleteOptionsHandler"},{"heading":"parameters","content":"Parameter"},{"heading":"parameters","content":"Type"},{"heading":"parameters","content":"client"},{"heading":"parameters","content":"Client"},{"heading":"parameters","content":"options"},{"heading":"parameters","content":"APIApplicationCommandInteractionDataBasicOption[]"},{"heading":"returns","content":"AutocompleteOptionsHandler"},{"heading":"inherited-from","content":"OptionsHandler.constructor"},{"heading":"properties","content":"Property"},{"heading":"properties","content":"Modifier"},{"heading":"properties","content":"Type"},{"heading":"properties","content":"Default value"},{"heading":"properties","content":"Description"},{"heading":"properties","content":"Inherited from"},{"heading":"properties","content":"client"},{"heading":"properties","content":"public"},{"heading":"properties","content":"Client"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"OptionsHandler.client"},{"heading":"properties","content":"errors"},{"heading":"properties","content":"readonly"},{"heading":"properties","content":"string[]"},{"heading":"properties","content":"[]"},{"heading":"properties","content":"The errors that were encountered while parsing the options."},{"heading":"properties","content":"OptionsHandler.errors"},{"heading":"properties","content":"raw"},{"heading":"properties","content":"readonly"},{"heading":"properties","content":"APIApplicationCommandInteractionDataBasicOption[]"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The raw options that were in the interaction data, before they were parsed."},{"heading":"properties","content":"OptionsHandler.raw"},{"heading":"getboolean","content":"getBoolean(key): undefined | true"},{"heading":"getboolean","content":"Get the value of a boolean option."},{"heading":"parameters-1","content":"Parameter"},{"heading":"parameters-1","content":"Type"},{"heading":"parameters-1","content":"Description"},{"heading":"parameters-1","content":"key"},{"heading":"parameters-1","content":"string"},{"heading":"parameters-1","content":"The name of the option to get the value of."},{"heading":"returns-1","content":"undefined | true"},{"heading":"returns-1","content":"The value of the option, or undefined if the option was not provided."},{"heading":"inherited-from-1","content":"OptionsHandler.getBoolean"},{"heading":"getchannel","content":"getChannel(key): Promise<undefined | null | DmChannel | GuildCategoryChannel | GroupDmChannel | GuildTextChannel | GuildVoiceChannel | GuildAnnouncementChannel | GuildThreadChannel<ThreadChannelType> | GuildStageChannel | GuildForumChannel | GuildMediaChannel>"},{"heading":"getchannel","content":"Get the value of a channel option."},{"heading":"parameters-2","content":"Parameter"},{"heading":"parameters-2","content":"Type"},{"heading":"parameters-2","content":"Description"},{"heading":"parameters-2","content":"key"},{"heading":"parameters-2","content":"string"},{"heading":"parameters-2","content":"The name of the option to get the value of."},{"heading":"returns-2","content":"Promise<undefined | null | DmChannel | GuildCategoryChannel | GroupDmChannel | GuildTextChannel | GuildVoiceChannel | GuildAnnouncementChannel | GuildThreadChannel<ThreadChannelType> | GuildStageChannel | GuildForumChannel | GuildMediaChannel>"},{"heading":"returns-2","content":"The value of the option, or undefined if the option was not provided."},{"heading":"inherited-from-2","content":"OptionsHandler.getChannel"},{"heading":"getfocused","content":"getFocused(): undefined | null | string | number | true"},{"heading":"getfocused","content":"Get the focused option (the one that is being autocompleted)"},{"heading":"returns-3","content":"undefined | null | string | number | true"},{"heading":"getinteger","content":"getInteger(key): undefined | number"},{"heading":"getinteger","content":"Get the value of an integer option."},{"heading":"parameters-3","content":"Parameter"},{"heading":"parameters-3","content":"Type"},{"heading":"parameters-3","content":"Description"},{"heading":"parameters-3","content":"key"},{"heading":"parameters-3","content":"string"},{"heading":"parameters-3","content":"The name of the option to get the value of."},{"heading":"returns-4","content":"undefined | number"},{"heading":"returns-4","content":"The value of the option, or undefined if the option was not provided."},{"heading":"inherited-from-3","content":"OptionsHandler.getInteger"},{"heading":"getmentionable","content":"getMentionable(key): Promise<undefined | User | Role>"},{"heading":"getmentionable","content":"Get the value of a mentionable option."},{"heading":"parameters-4","content":"Parameter"},{"heading":"parameters-4","content":"Type"},{"heading":"parameters-4","content":"Description"},{"heading":"parameters-4","content":"key"},{"heading":"parameters-4","content":"string"},{"heading":"parameters-4","content":"The name of the option to get the value of."},{"heading":"returns-5","content":"Promise<undefined | User | Role>"},{"heading":"returns-5","content":"The value of the option, or undefined if the option was not provided."},{"heading":"inherited-from-4","content":"OptionsHandler.getMentionable"},{"heading":"getnumber","content":"getNumber(key): undefined | number"},{"heading":"getnumber","content":"Get the value of a number option."},{"heading":"parameters-5","content":"Parameter"},{"heading":"parameters-5","content":"Type"},{"heading":"parameters-5","content":"Description"},{"heading":"parameters-5","content":"key"},{"heading":"parameters-5","content":"string"},{"heading":"parameters-5","content":"The name of the option to get the value of."},{"heading":"returns-6","content":"undefined | number"},{"heading":"returns-6","content":"The value of the option, or undefined if the option was not provided."},{"heading":"inherited-from-5","content":"OptionsHandler.getNumber"},{"heading":"getrole","content":"getRole(key): undefined | Role"},{"heading":"getrole","content":"Get the value of a role option."},{"heading":"parameters-6","content":"Parameter"},{"heading":"parameters-6","content":"Type"},{"heading":"parameters-6","content":"Description"},{"heading":"parameters-6","content":"key"},{"heading":"parameters-6","content":"string"},{"heading":"parameters-6","content":"The name of the option to get the value of."},{"heading":"returns-7","content":"undefined | Role"},{"heading":"returns-7","content":"The value of the option, or undefined if the option was not provided."},{"heading":"inherited-from-6","content":"OptionsHandler.getRole"},{"heading":"getstring","content":"getString(key): undefined | string"},{"heading":"getstring","content":"Get the value of a string option."},{"heading":"parameters-7","content":"Parameter"},{"heading":"parameters-7","content":"Type"},{"heading":"parameters-7","content":"Description"},{"heading":"parameters-7","content":"key"},{"heading":"parameters-7","content":"string"},{"heading":"parameters-7","content":"The name of the option to get the value of."},{"heading":"returns-8","content":"undefined | string"},{"heading":"returns-8","content":"The value of the option, or undefined if the option was not provided."},{"heading":"inherited-from-7","content":"OptionsHandler.getString"},{"heading":"getuser","content":"getUser(key): undefined | User"},{"heading":"getuser","content":"Get the value of a user option."},{"heading":"parameters-8","content":"Parameter"},{"heading":"parameters-8","content":"Type"},{"heading":"parameters-8","content":"Description"},{"heading":"parameters-8","content":"key"},{"heading":"parameters-8","content":"string"},{"heading":"parameters-8","content":"The name of the option to get the value of."},{"heading":"returns-9","content":"undefined | User"},{"heading":"returns-9","content":"The value of the option, or undefined if the option was not provided."},{"heading":"inherited-from-8","content":"OptionsHandler.getUser"}],"headings":[{"id":"extends","content":"Extends"},{"id":"constructors","content":"Constructors"},{"id":"new-autocompleteoptionshandler","content":"new AutocompleteOptionsHandler()"},{"id":"parameters","content":"Parameters"},{"id":"returns","content":"Returns"},{"id":"inherited-from","content":"Inherited from"},{"id":"properties","content":"Properties"},{"id":"methods","content":"Methods"},{"id":"getboolean","content":"getBoolean()"},{"id":"parameters-1","content":"Parameters"},{"id":"returns-1","content":"Returns"},{"id":"inherited-from-1","content":"Inherited from"},{"id":"getchannel","content":"getChannel()"},{"id":"parameters-2","content":"Parameters"},{"id":"returns-2","content":"Returns"},{"id":"inherited-from-2","content":"Inherited from"},{"id":"getfocused","content":"getFocused()"},{"id":"returns-3","content":"Returns"},{"id":"getinteger","content":"getInteger()"},{"id":"parameters-3","content":"Parameters"},{"id":"returns-4","content":"Returns"},{"id":"inherited-from-3","content":"Inherited from"},{"id":"getmentionable","content":"getMentionable()"},{"id":"parameters-4","content":"Parameters"},{"id":"returns-5","content":"Returns"},{"id":"inherited-from-4","content":"Inherited from"},{"id":"getnumber","content":"getNumber()"},{"id":"parameters-5","content":"Parameters"},{"id":"returns-6","content":"Returns"},{"id":"inherited-from-5","content":"Inherited from"},{"id":"getrole","content":"getRole()"},{"id":"parameters-6","content":"Parameters"},{"id":"returns-7","content":"Returns"},{"id":"inherited-from-6","content":"Inherited from"},{"id":"getstring","content":"getString()"},{"id":"parameters-7","content":"Parameters"},{"id":"returns-8","content":"Returns"},{"id":"inherited-from-7","content":"Inherited from"},{"id":"getuser","content":"getUser()"},{"id":"parameters-8","content":"Parameters"},{"id":"returns-9","content":"Returns"},{"id":"inherited-from-8","content":"Inherited from"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/api/classes/BaseChannel.mdx","data":{"frontmatter":{"title":"BaseChannel","index":false},"toc":[{"title":"Extends","url":"#extends","depth":2},{"title":"Extended by","url":"#extended-by","depth":2},{"title":"Type Parameters","url":"#type-parameters","depth":2},{"title":"Constructors","url":"#constructors","depth":2},{"title":"new BaseChannel()","url":"#new-basechannel","depth":3},{"title":"Parameters","url":"#parameters","depth":4},{"title":"Returns","url":"#returns","depth":4},{"title":"Overrides","url":"#overrides","depth":4},{"title":"Properties","url":"#properties","depth":2},{"title":"Methods","url":"#methods","depth":2},{"title":"fetch()","url":"#fetch","depth":3},{"title":"Returns","url":"#returns-1","depth":4},{"title":"setData()","url":"#setdata","depth":3},{"title":"Parameters","url":"#parameters-1","depth":4},{"title":"Returns","url":"#returns-2","depth":4},{"title":"setSpecificData()","url":"#setspecificdata","depth":3},{"title":"Parameters","url":"#parameters-2","depth":4},{"title":"Returns","url":"#returns-3","depth":4}],"structuredData":{"contents":[{"heading":"extends","content":"Base"},{"heading":"extended-by","content":"BaseGuildChannel"},{"heading":"extended-by","content":"DmChannel"},{"heading":"extended-by","content":"GroupDmChannel"},{"heading":"type-parameters","content":"Type Parameter"},{"heading":"type-parameters","content":"Type extends ChannelType"},{"heading":"new-basechannel","content":"new BaseChannel<Type>(client, rawDataOrId): BaseChannel<Type>"},{"heading":"parameters","content":"Parameter"},{"heading":"parameters","content":"Type"},{"heading":"parameters","content":"client"},{"heading":"parameters","content":"Client"},{"heading":"parameters","content":"rawDataOrId"},{"heading":"parameters","content":"string | Extract<APIDMChannel, object> | Extract<APIGroupDMChannel, object> | Extract<APIGuildCategoryChannel, object> | Extract<APIGuildForumChannel, object> | Extract<APIGuildMediaChannel, object> | Extract<APIGuildStageVoiceChannel, object> | Extract<APIGuildVoiceChannel, object> | Extract<APINewsChannel, object> | Extract<APITextChannel, object> | Extract<APIThreadChannel, object>"},{"heading":"returns","content":"BaseChannel<Type>"},{"heading":"overrides","content":"Base.constructor"},{"heading":"properties","content":"Property"},{"heading":"properties","content":"Modifier"},{"heading":"properties","content":"Type"},{"heading":"properties","content":"Default value"},{"heading":"properties","content":"Description"},{"heading":"properties","content":"Inherited from"},{"heading":"properties","content":"client"},{"heading":"properties","content":"public"},{"heading":"properties","content":"Client"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"Base.client"},{"heading":"properties","content":"flags?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | number"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The flags of the channel in a bitfield. See https://discord.com/developers/docs/resources/channel#channel-object-channel-flags"},{"heading":"properties","content":"-"},{"heading":"properties","content":"id"},{"heading":"properties","content":"public"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The id of the channel."},{"heading":"properties","content":"-"},{"heading":"properties","content":"partial"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"Whether the channel is a partial channel (meaning it does not have all the data). If this is true, you should use BaseChannel.fetch to get the full data of the channel."},{"heading":"properties","content":"-"},{"heading":"properties","content":"rawData"},{"heading":"properties","content":"protected"},{"heading":"properties","content":"null | Extract<APIDMChannel, object> | Extract<APIGroupDMChannel, object> | Extract<APIGuildCategoryChannel, object> | Extract<APIGuildForumChannel, object> | Extract<APIGuildMediaChannel, object> | Extract<APIGuildStageVoiceChannel, object> | Extract<APIGuildVoiceChannel, object> | Extract<APINewsChannel, object> | Extract<APITextChannel, object> | Extract<APIThreadChannel, object>"},{"heading":"properties","content":"null"},{"heading":"properties","content":"The raw data of the channel."},{"heading":"properties","content":"-"},{"heading":"properties","content":"type?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"Type"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The type of the channel."},{"heading":"properties","content":"-"},{"heading":"fetch","content":"fetch(): Promise<void>"},{"heading":"fetch","content":"Fetches the channel from the API."},{"heading":"returns-1","content":"Promise<void>"},{"heading":"returns-1","content":"The channel data."},{"heading":"setdata","content":"protected setData(data): void"},{"heading":"parameters-1","content":"Parameter"},{"heading":"parameters-1","content":"Type"},{"heading":"parameters-1","content":"data"},{"heading":"parameters-1","content":"Extract<APIDMChannel, object> | Extract<APIGroupDMChannel, object> | Extract<APIGuildCategoryChannel, object> | Extract<APIGuildForumChannel, object> | Extract<APIGuildMediaChannel, object> | Extract<APIGuildStageVoiceChannel, object> | Extract<APIGuildVoiceChannel, object> | Extract<APINewsChannel, object> | Extract<APITextChannel, object> | Extract<APIThreadChannel, object>"},{"heading":"returns-2","content":"void"},{"heading":"setspecificdata","content":"abstract protected setSpecificData(data): void"},{"heading":"parameters-2","content":"Parameter"},{"heading":"parameters-2","content":"Type"},{"heading":"parameters-2","content":"data"},{"heading":"parameters-2","content":"Extract<APIDMChannel, object> | Extract<APIGroupDMChannel, object> | Extract<APIGuildCategoryChannel, object> | Extract<APIGuildForumChannel, object> | Extract<APIGuildMediaChannel, object> | Extract<APIGuildStageVoiceChannel, object> | Extract<APIGuildVoiceChannel, object> | Extract<APINewsChannel, object> | Extract<APITextChannel, object> | Extract<APIThreadChannel, object>"},{"heading":"returns-3","content":"void"}],"headings":[{"id":"extends","content":"Extends"},{"id":"extended-by","content":"Extended by"},{"id":"type-parameters","content":"Type Parameters"},{"id":"constructors","content":"Constructors"},{"id":"new-basechannel","content":"new BaseChannel()"},{"id":"parameters","content":"Parameters"},{"id":"returns","content":"Returns"},{"id":"overrides","content":"Overrides"},{"id":"properties","content":"Properties"},{"id":"methods","content":"Methods"},{"id":"fetch","content":"fetch()"},{"id":"returns-1","content":"Returns"},{"id":"setdata","content":"setData()"},{"id":"parameters-1","content":"Parameters"},{"id":"returns-2","content":"Returns"},{"id":"setspecificdata","content":"setSpecificData()"},{"id":"parameters-2","content":"Parameters"},{"id":"returns-3","content":"Returns"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/api/classes/BaseCommand.mdx","data":{"frontmatter":{"title":"BaseCommand","index":false},"toc":[{"title":"Extended by","url":"#extended-by","depth":2},{"title":"Constructors","url":"#constructors","depth":2},{"title":"new BaseCommand()","url":"#new-basecommand","depth":3},{"title":"Returns","url":"#returns","depth":4},{"title":"Properties","url":"#properties","depth":2},{"title":"Methods","url":"#methods","depth":2},{"title":"serialize()","url":"#serialize","depth":3},{"title":"Returns","url":"#returns-1","depth":4},{"title":"serializeOptions()","url":"#serializeoptions","depth":3},{"title":"Returns","url":"#returns-2","depth":4}],"structuredData":{"contents":[{"heading":"","content":"Represents the base data of a command that the user creates"},{"heading":"extended-by","content":"Command"},{"heading":"extended-by","content":"CommandWithSubcommands"},{"heading":"new-basecommand","content":"new BaseCommand(): BaseCommand"},{"heading":"returns","content":"BaseCommand"},{"heading":"properties","content":"Property"},{"heading":"properties","content":"Modifier"},{"heading":"properties","content":"Type"},{"heading":"properties","content":"Default value"},{"heading":"properties","content":"Description"},{"heading":"properties","content":"contexts"},{"heading":"properties","content":"public"},{"heading":"properties","content":"InteractionContextType[]"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"Beta The contexts this command can be used in API types are not finalized"},{"heading":"properties","content":"defer"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"false"},{"heading":"properties","content":"Whether the command response should be automatically deferred"},{"heading":"properties","content":"description"},{"heading":"properties","content":"abstract"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"A description of the command"},{"heading":"properties","content":"ephemeral"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"false"},{"heading":"properties","content":"Whether the command response should be ephemeral"},{"heading":"properties","content":"integrationTypes"},{"heading":"properties","content":"public"},{"heading":"properties","content":"ApplicationIntegrationType[]"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"Beta The places this command can be used in API types are not finalized"},{"heading":"properties","content":"name"},{"heading":"properties","content":"abstract"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The name of the command (e.g. \"ping\" for /ping)"},{"heading":"properties","content":"type"},{"heading":"properties","content":"abstract"},{"heading":"properties","content":"ApplicationCommandType"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The type of the command"},{"heading":"serialize","content":"serialize(): RESTPostAPIChatInputApplicationCommandsJSONBody | RESTPostAPIContextMenuApplicationCommandsJSONBody"},{"heading":"serialize","content":"Internal"},{"heading":"serialize","content":"Serializes the command into a JSON object that can be sent to Discord"},{"heading":"returns-1","content":"RESTPostAPIChatInputApplicationCommandsJSONBody | RESTPostAPIContextMenuApplicationCommandsJSONBody"},{"heading":"serializeoptions","content":"abstract serializeOptions(): AddUndefinedToPossiblyUndefinedPropertiesOfInterface<undefined | APIApplicationCommandOption[]>"},{"heading":"serializeoptions","content":"Internal"},{"heading":"serializeoptions","content":"Serializes the options of the command into a JSON object that can be sent to Discord"},{"heading":"returns-2","content":"AddUndefinedToPossiblyUndefinedPropertiesOfInterface<undefined | APIApplicationCommandOption[]>"}],"headings":[{"id":"extended-by","content":"Extended by"},{"id":"constructors","content":"Constructors"},{"id":"new-basecommand","content":"new BaseCommand()"},{"id":"returns","content":"Returns"},{"id":"properties","content":"Properties"},{"id":"methods","content":"Methods"},{"id":"serialize","content":"serialize()"},{"id":"returns-1","content":"Returns"},{"id":"serializeoptions","content":"serializeOptions()"},{"id":"returns-2","content":"Returns"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/api/classes/BaseComponent.mdx","data":{"frontmatter":{"title":"BaseComponent","index":false},"toc":[{"title":"Extended by","url":"#extended-by","depth":2},{"title":"Constructors","url":"#constructors","depth":2},{"title":"new BaseComponent()","url":"#new-basecomponent","depth":3},{"title":"Parameters","url":"#parameters","depth":4},{"title":"Returns","url":"#returns","depth":4},{"title":"Properties","url":"#properties","depth":2},{"title":"Methods","url":"#methods","depth":2},{"title":"createId()","url":"#createid","depth":3},{"title":"Parameters","url":"#parameters-1","depth":4},{"title":"Returns","url":"#returns-1","depth":4}],"structuredData":{"contents":[{"heading":"extended-by","content":"AnySelectMenu"},{"heading":"extended-by","content":"TextInput"},{"heading":"new-basecomponent","content":"new BaseComponent(data?): BaseComponent"},{"heading":"parameters","content":"Parameter"},{"heading":"parameters","content":"Type"},{"heading":"parameters","content":"data?"},{"heading":"parameters","content":"object"},{"heading":"parameters","content":"data.additionalData?"},{"heading":"parameters","content":"ComponentAdditionalData"},{"heading":"returns","content":"BaseComponent"},{"heading":"properties","content":"Property"},{"heading":"properties","content":"Modifier"},{"heading":"properties","content":"Type"},{"heading":"properties","content":"Default value"},{"heading":"properties","content":"Description"},{"heading":"properties","content":"additionalData"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | ComponentAdditionalData"},{"heading":"properties","content":"null"},{"heading":"properties","content":"-"},{"heading":"properties","content":"customId"},{"heading":"properties","content":"abstract"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The custom ID of the component"},{"heading":"properties","content":"defer"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"false"},{"heading":"properties","content":"Whether the component response should be automatically deferred"},{"heading":"properties","content":"ephemeral"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"false"},{"heading":"properties","content":"Whether the component response should be ephemeral"},{"heading":"properties","content":"serialize"},{"heading":"properties","content":"abstract"},{"heading":"properties","content":"() => APIBaseComponent<ComponentType>"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"type"},{"heading":"properties","content":"abstract"},{"heading":"properties","content":"ComponentType"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The type of the component"},{"heading":"createid","content":"createId(additionalData): string"},{"heading":"createid","content":"Create a custom ID to use for this component that embeds additional data that you want to be handed"},{"heading":"parameters-1","content":"Parameter"},{"heading":"parameters-1","content":"Type"},{"heading":"parameters-1","content":"Description"},{"heading":"parameters-1","content":"additionalData"},{"heading":"parameters-1","content":"null | ComponentAdditionalData"},{"heading":"parameters-1","content":"The additional data that you want to be passed in this component's custom ID"},{"heading":"returns-1","content":"string"},{"heading":"returns-1","content":"The custom ID to use"}],"headings":[{"id":"extended-by","content":"Extended by"},{"id":"constructors","content":"Constructors"},{"id":"new-basecomponent","content":"new BaseComponent()"},{"id":"parameters","content":"Parameters"},{"id":"returns","content":"Returns"},{"id":"properties","content":"Properties"},{"id":"methods","content":"Methods"},{"id":"createid","content":"createId()"},{"id":"parameters-1","content":"Parameters"},{"id":"returns-1","content":"Returns"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/api/classes/BaseComponentInteraction.mdx","data":{"frontmatter":{"title":"BaseComponentInteraction","index":false},"toc":[{"title":"Extends","url":"#extends","depth":2},{"title":"Extended by","url":"#extended-by","depth":2},{"title":"Constructors","url":"#constructors","depth":2},{"title":"new BaseComponentInteraction()","url":"#new-basecomponentinteraction","depth":3},{"title":"Parameters","url":"#parameters","depth":4},{"title":"Returns","url":"#returns","depth":4},{"title":"Overrides","url":"#overrides","depth":4},{"title":"Properties","url":"#properties","depth":2},{"title":"Accessors","url":"#accessors","depth":2},{"title":"channel","url":"#channel","depth":3},{"title":"Returns","url":"#returns-1","depth":4},{"title":"Inherited from","url":"#inherited-from","depth":4},{"title":"guild","url":"#guild","depth":3},{"title":"Returns","url":"#returns-2","depth":4},{"title":"Inherited from","url":"#inherited-from-1","depth":4},{"title":"member","url":"#member","depth":3},{"title":"Returns","url":"#returns-3","depth":4},{"title":"Inherited from","url":"#inherited-from-2","depth":4},{"title":"message","url":"#message","depth":3},{"title":"Returns","url":"#returns-4","depth":4},{"title":"Inherited from","url":"#inherited-from-3","depth":4},{"title":"user","url":"#user","depth":3},{"title":"Returns","url":"#returns-5","depth":4},{"title":"Inherited from","url":"#inherited-from-4","depth":4},{"title":"Methods","url":"#methods","depth":2},{"title":"defer()","url":"#defer","depth":3},{"title":"Returns","url":"#returns-6","depth":4},{"title":"Inherited from","url":"#inherited-from-5","depth":4},{"title":"reply()","url":"#reply","depth":3},{"title":"Parameters","url":"#parameters-1","depth":4},{"title":"Returns","url":"#returns-7","depth":4},{"title":"Inherited from","url":"#inherited-from-6","depth":4},{"title":"showModal()","url":"#showmodal","depth":3},{"title":"Parameters","url":"#parameters-2","depth":4},{"title":"Returns","url":"#returns-8","depth":4},{"title":"Inherited from","url":"#inherited-from-7","depth":4}],"structuredData":{"contents":[{"heading":"","content":"This is the base type interaction, all interaction types extend from this"},{"heading":"extends","content":"BaseInteraction<APIMessageComponentInteraction>"},{"heading":"extended-by","content":"AnySelectMenuInteraction"},{"heading":"extended-by","content":"ButtonInteraction"},{"heading":"new-basecomponentinteraction","content":"new BaseComponentInteraction(client, data): BaseComponentInteraction"},{"heading":"parameters","content":"Parameter"},{"heading":"parameters","content":"Type"},{"heading":"parameters","content":"client"},{"heading":"parameters","content":"Client"},{"heading":"parameters","content":"data"},{"heading":"parameters","content":"APIMessageComponentInteraction"},{"heading":"returns","content":"BaseComponentInteraction"},{"heading":"overrides","content":"BaseInteraction.constructor"},{"heading":"properties","content":"Property"},{"heading":"properties","content":"Type"},{"heading":"properties","content":"Default value"},{"heading":"properties","content":"Description"},{"heading":"properties","content":"Inherited from"},{"heading":"properties","content":"_deferred"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"false"},{"heading":"properties","content":"Internal Whether the interaction is deferred already"},{"heading":"properties","content":"BaseInteraction._deferred"},{"heading":"properties","content":"client"},{"heading":"properties","content":"Client"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseInteraction.client"},{"heading":"properties","content":"componentType"},{"heading":"properties","content":"ComponentType"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"customId"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"rawData"},{"heading":"properties","content":"APIMessageComponentInteraction"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The raw data of the interaction"},{"heading":"properties","content":"BaseInteraction.rawData"},{"heading":"properties","content":"type"},{"heading":"properties","content":"InteractionType"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The type of interaction"},{"heading":"properties","content":"BaseInteraction.type"},{"heading":"properties","content":"userId"},{"heading":"properties","content":"undefined | string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The user who sent the interaction"},{"heading":"properties","content":"BaseInteraction.userId"},{"heading":"channel","content":"get channel(): null | DmChannel | GuildCategoryChannel | GroupDmChannel | GuildTextChannel | GuildVoiceChannel | GuildAnnouncementChannel | GuildThreadChannel<ThreadChannelType> | GuildStageChannel | GuildForumChannel | GuildMediaChannel"},{"heading":"returns-1","content":"null | DmChannel | GuildCategoryChannel | GroupDmChannel | GuildTextChannel | GuildVoiceChannel | GuildAnnouncementChannel | GuildThreadChannel<ThreadChannelType> | GuildStageChannel | GuildForumChannel | GuildMediaChannel"},{"heading":"inherited-from","content":"BaseInteraction.channel"},{"heading":"guild","content":"get guild(): null | Guild"},{"heading":"returns-2","content":"null | Guild"},{"heading":"inherited-from-1","content":"BaseInteraction.guild"},{"heading":"member","content":"get member(): null | GuildMember"},{"heading":"returns-3","content":"null | GuildMember"},{"heading":"inherited-from-2","content":"BaseInteraction.member"},{"heading":"message","content":"get message(): null | Message"},{"heading":"returns-4","content":"null | Message"},{"heading":"inherited-from-3","content":"BaseInteraction.message"},{"heading":"user","content":"get user(): null | User"},{"heading":"returns-5","content":"null | User"},{"heading":"inherited-from-4","content":"BaseInteraction.user"},{"heading":"defer","content":"defer(): Promise<void>"},{"heading":"defer","content":"Internal"},{"heading":"defer","content":"Defer the interaction response. This is used automatically by commands that are set to defer.\nIf the interaction is already deferred, this will do nothing."},{"heading":"returns-6","content":"Promise<void>"},{"heading":"inherited-from-5","content":"BaseInteraction.defer"},{"heading":"reply","content":"reply(data, options): Promise<void>"},{"heading":"reply","content":"Reply to an interaction.\nIf the interaction is deferred, this will edit the original response."},{"heading":"parameters-1","content":"Parameter"},{"heading":"parameters-1","content":"Type"},{"heading":"parameters-1","content":"Description"},{"heading":"parameters-1","content":"data"},{"heading":"parameters-1","content":"InteractionReplyData"},{"heading":"parameters-1","content":"The response data"},{"heading":"parameters-1","content":"options"},{"heading":"parameters-1","content":"InteractionReplyOptions"},{"heading":"parameters-1","content":"-"},{"heading":"returns-7","content":"Promise<void>"},{"heading":"inherited-from-6","content":"BaseInteraction.reply"},{"heading":"showmodal","content":"showModal(modal): Promise<void>"},{"heading":"parameters-2","content":"Parameter"},{"heading":"parameters-2","content":"Type"},{"heading":"parameters-2","content":"modal"},{"heading":"parameters-2","content":"Modal"},{"heading":"returns-8","content":"Promise<void>"},{"heading":"inherited-from-7","content":"BaseInteraction.showModal"}],"headings":[{"id":"extends","content":"Extends"},{"id":"extended-by","content":"Extended by"},{"id":"constructors","content":"Constructors"},{"id":"new-basecomponentinteraction","content":"new BaseComponentInteraction()"},{"id":"parameters","content":"Parameters"},{"id":"returns","content":"Returns"},{"id":"overrides","content":"Overrides"},{"id":"properties","content":"Properties"},{"id":"accessors","content":"Accessors"},{"id":"channel","content":"channel"},{"id":"returns-1","content":"Returns"},{"id":"inherited-from","content":"Inherited from"},{"id":"guild","content":"guild"},{"id":"returns-2","content":"Returns"},{"id":"inherited-from-1","content":"Inherited from"},{"id":"member","content":"member"},{"id":"returns-3","content":"Returns"},{"id":"inherited-from-2","content":"Inherited from"},{"id":"message","content":"message"},{"id":"returns-4","content":"Returns"},{"id":"inherited-from-3","content":"Inherited from"},{"id":"user","content":"user"},{"id":"returns-5","content":"Returns"},{"id":"inherited-from-4","content":"Inherited from"},{"id":"methods","content":"Methods"},{"id":"defer","content":"defer()"},{"id":"returns-6","content":"Returns"},{"id":"inherited-from-5","content":"Inherited from"},{"id":"reply","content":"reply()"},{"id":"parameters-1","content":"Parameters"},{"id":"returns-7","content":"Returns"},{"id":"inherited-from-6","content":"Inherited from"},{"id":"showmodal","content":"showModal()"},{"id":"parameters-2","content":"Parameters"},{"id":"returns-8","content":"Returns"},{"id":"inherited-from-7","content":"Inherited from"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/api/classes/BaseGuildChannel.mdx","data":{"frontmatter":{"title":"BaseGuildChannel","index":false},"toc":[{"title":"Extends","url":"#extends","depth":2},{"title":"Extended by","url":"#extended-by","depth":2},{"title":"Type Parameters","url":"#type-parameters","depth":2},{"title":"Constructors","url":"#constructors","depth":2},{"title":"new BaseGuildChannel()","url":"#new-baseguildchannel","depth":3},{"title":"Parameters","url":"#parameters","depth":4},{"title":"Returns","url":"#returns","depth":4},{"title":"Inherited from","url":"#inherited-from","depth":4},{"title":"Properties","url":"#properties","depth":2},{"title":"Accessors","url":"#accessors","depth":2},{"title":"guild","url":"#guild","depth":3},{"title":"Returns","url":"#returns-1","depth":4},{"title":"Methods","url":"#methods","depth":2},{"title":"createInvite()","url":"#createinvite","depth":3},{"title":"Parameters","url":"#parameters-1","depth":4},{"title":"Returns","url":"#returns-2","depth":4},{"title":"fetch()","url":"#fetch","depth":3},{"title":"Returns","url":"#returns-3","depth":4},{"title":"Inherited from","url":"#inherited-from-1","depth":4},{"title":"getInvites()","url":"#getinvites","depth":3},{"title":"Returns","url":"#returns-4","depth":4},{"title":"send()","url":"#send","depth":3},{"title":"Parameters","url":"#parameters-2","depth":4},{"title":"Returns","url":"#returns-5","depth":4},{"title":"setData()","url":"#setdata","depth":3},{"title":"Parameters","url":"#parameters-3","depth":4},{"title":"Returns","url":"#returns-6","depth":4},{"title":"Overrides","url":"#overrides","depth":4},{"title":"setName()","url":"#setname","depth":3},{"title":"Parameters","url":"#parameters-4","depth":4},{"title":"Returns","url":"#returns-7","depth":4},{"title":"setNsfw()","url":"#setnsfw","depth":3},{"title":"Parameters","url":"#parameters-5","depth":4},{"title":"Returns","url":"#returns-8","depth":4},{"title":"setParent()","url":"#setparent","depth":3},{"title":"Parameters","url":"#parameters-6","depth":4},{"title":"Returns","url":"#returns-9","depth":4},{"title":"setPosition()","url":"#setposition","depth":3},{"title":"Parameters","url":"#parameters-7","depth":4},{"title":"Returns","url":"#returns-10","depth":4},{"title":"setSpecificData()","url":"#setspecificdata","depth":3},{"title":"Parameters","url":"#parameters-8","depth":4},{"title":"Returns","url":"#returns-11","depth":4},{"title":"Inherited from","url":"#inherited-from-2","depth":4},{"title":"triggerTyping()","url":"#triggertyping","depth":3},{"title":"Returns","url":"#returns-12","depth":4}],"structuredData":{"contents":[{"heading":"extends","content":"BaseChannel<Type>"},{"heading":"extended-by","content":"BaseGuildTextChannel"},{"heading":"extended-by","content":"GuildThreadOnlyChannel"},{"heading":"extended-by","content":"GuildCategoryChannel"},{"heading":"extended-by","content":"GuildStageOrVoiceChannel"},{"heading":"extended-by","content":"GuildStageChannel"},{"heading":"extended-by","content":"GuildVoiceChannel"},{"heading":"extended-by","content":"GuildThreadChannel"},{"heading":"type-parameters","content":"Type Parameter"},{"heading":"type-parameters","content":"Type extends GuildChannelType"},{"heading":"new-baseguildchannel","content":"new BaseGuildChannel<Type>(client, rawDataOrId): BaseGuildChannel<Type>"},{"heading":"parameters","content":"Parameter"},{"heading":"parameters","content":"Type"},{"heading":"parameters","content":"client"},{"heading":"parameters","content":"Client"},{"heading":"parameters","content":"rawDataOrId"},{"heading":"parameters","content":"string | Extract<APIDMChannel, object> | Extract<APIGroupDMChannel, object> | Extract<APIGuildCategoryChannel, object> | Extract<APIGuildForumChannel, object> | Extract<APIGuildMediaChannel, object> | Extract<APIGuildStageVoiceChannel, object> | Extract<APIGuildVoiceChannel, object> | Extract<APINewsChannel, object> | Extract<APITextChannel, object> | Extract<APIThreadChannel, object>"},{"heading":"returns","content":"BaseGuildChannel<Type>"},{"heading":"inherited-from","content":"BaseChannel.constructor"},{"heading":"properties","content":"Property"},{"heading":"properties","content":"Modifier"},{"heading":"properties","content":"Type"},{"heading":"properties","content":"Default value"},{"heading":"properties","content":"Description"},{"heading":"properties","content":"Inherited from"},{"heading":"properties","content":"client"},{"heading":"properties","content":"public"},{"heading":"properties","content":"Client"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseChannel.client"},{"heading":"properties","content":"flags?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | number"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The flags of the channel in a bitfield. See https://discord.com/developers/docs/resources/channel#channel-object-channel-flags"},{"heading":"properties","content":"BaseChannel.flags"},{"heading":"properties","content":"guildId?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The ID of the guild this channel is in"},{"heading":"properties","content":"-"},{"heading":"properties","content":"id"},{"heading":"properties","content":"public"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The id of the channel."},{"heading":"properties","content":"BaseChannel.id"},{"heading":"properties","content":"name?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The name of the channel."},{"heading":"properties","content":"-"},{"heading":"properties","content":"nsfw?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"Whether the channel is marked as nsfw."},{"heading":"properties","content":"-"},{"heading":"properties","content":"parentId?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The ID of the parent category for the channel."},{"heading":"properties","content":"-"},{"heading":"properties","content":"partial"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"Whether the channel is a partial channel (meaning it does not have all the data). If this is true, you should use BaseChannel.fetch to get the full data of the channel."},{"heading":"properties","content":"BaseChannel.partial"},{"heading":"properties","content":"position?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"number"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The position of the channel in the channel list."},{"heading":"properties","content":"-"},{"heading":"properties","content":"rawData"},{"heading":"properties","content":"protected"},{"heading":"properties","content":"null | Extract<APIDMChannel, object> | Extract<APIGroupDMChannel, object> | Extract<APIGuildCategoryChannel, object> | Extract<APIGuildForumChannel, object> | Extract<APIGuildMediaChannel, object> | Extract<APIGuildStageVoiceChannel, object> | Extract<APIGuildVoiceChannel, object> | Extract<APINewsChannel, object> | Extract<APITextChannel, object> | Extract<APIThreadChannel, object>"},{"heading":"properties","content":"null"},{"heading":"properties","content":"The raw data of the channel."},{"heading":"properties","content":"BaseChannel.rawData"},{"heading":"properties","content":"type?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"Type"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The type of the channel."},{"heading":"properties","content":"BaseChannel.type"},{"heading":"guild","content":"get guild(): Guild"},{"heading":"guild","content":"The guild this channel is in"},{"heading":"returns-1","content":"Guild"},{"heading":"createinvite","content":"createInvite(options?): Promise<APIExtendedInvite>"},{"heading":"createinvite","content":"Create an invite for the channel"},{"heading":"parameters-1","content":"Parameter"},{"heading":"parameters-1","content":"Type"},{"heading":"parameters-1","content":"options?"},{"heading":"parameters-1","content":"RESTPostAPIChannelInviteJSONBody"},{"heading":"returns-2","content":"Promise<APIExtendedInvite>"},{"heading":"fetch","content":"fetch(): Promise<void>"},{"heading":"fetch","content":"Fetches the channel from the API."},{"heading":"returns-3","content":"Promise<void>"},{"heading":"returns-3","content":"The channel data."},{"heading":"inherited-from-1","content":"BaseChannel.fetch"},{"heading":"getinvites","content":"getInvites(): Promise<RESTGetAPIGuildInvitesResult>"},{"heading":"getinvites","content":"Get the invites for the channel"},{"heading":"returns-4","content":"Promise<RESTGetAPIGuildInvitesResult>"},{"heading":"send","content":"send(message): Promise<void>"},{"heading":"send","content":"Send a message to the channel"},{"heading":"parameters-2","content":"Parameter"},{"heading":"parameters-2","content":"Type"},{"heading":"parameters-2","content":"message"},{"heading":"parameters-2","content":"APIMessage"},{"heading":"returns-5","content":"Promise<void>"},{"heading":"setdata","content":"protected setData(data): void"},{"heading":"parameters-3","content":"Parameter"},{"heading":"parameters-3","content":"Type"},{"heading":"parameters-3","content":"data"},{"heading":"parameters-3","content":"APIGuildChannel<Type>"},{"heading":"returns-6","content":"void"},{"heading":"overrides","content":"BaseChannel.setData"},{"heading":"setname","content":"setName(name): Promise<void>"},{"heading":"setname","content":"Set the name of the channel"},{"heading":"parameters-4","content":"Parameter"},{"heading":"parameters-4","content":"Type"},{"heading":"parameters-4","content":"Description"},{"heading":"parameters-4","content":"name"},{"heading":"parameters-4","content":"string"},{"heading":"parameters-4","content":"The new name of the channel"},{"heading":"returns-7","content":"Promise<void>"},{"heading":"setnsfw","content":"setNsfw(nsfw): Promise<void>"},{"heading":"setnsfw","content":"Set whether the channel is nsfw"},{"heading":"parameters-5","content":"Parameter"},{"heading":"parameters-5","content":"Type"},{"heading":"parameters-5","content":"Description"},{"heading":"parameters-5","content":"nsfw"},{"heading":"parameters-5","content":"boolean"},{"heading":"parameters-5","content":"The new nsfw status of the channel"},{"heading":"returns-8","content":"Promise<void>"},{"heading":"setparent","content":"setParent(parent): Promise<void>"},{"heading":"setparent","content":"Set the parent ID of the channel"},{"heading":"parameters-6","content":"Parameter"},{"heading":"parameters-6","content":"Type"},{"heading":"parameters-6","content":"Description"},{"heading":"parameters-6","content":"parent"},{"heading":"parameters-6","content":"string | GuildCategoryChannel"},{"heading":"parameters-6","content":"The new category channel or ID to set"},{"heading":"returns-9","content":"Promise<void>"},{"heading":"setposition","content":"setPosition(position): Promise<void>"},{"heading":"setposition","content":"Set the position of the channel"},{"heading":"parameters-7","content":"Parameter"},{"heading":"parameters-7","content":"Type"},{"heading":"parameters-7","content":"Description"},{"heading":"parameters-7","content":"position"},{"heading":"parameters-7","content":"number"},{"heading":"parameters-7","content":"The new position of the channel"},{"heading":"returns-10","content":"Promise<void>"},{"heading":"setspecificdata","content":"abstract protected setSpecificData(data): void"},{"heading":"parameters-8","content":"Parameter"},{"heading":"parameters-8","content":"Type"},{"heading":"parameters-8","content":"data"},{"heading":"parameters-8","content":"Extract<APIDMChannel, object> | Extract<APIGroupDMChannel, object> | Extract<APIGuildCategoryChannel, object> | Extract<APIGuildForumChannel, object> | Extract<APIGuildMediaChannel, object> | Extract<APIGuildStageVoiceChannel, object> | Extract<APIGuildVoiceChannel, object> | Extract<APINewsChannel, object> | Extract<APITextChannel, object> | Extract<APIThreadChannel, object>"},{"heading":"returns-11","content":"void"},{"heading":"inherited-from-2","content":"BaseChannel.setSpecificData"},{"heading":"triggertyping","content":"triggerTyping(): Promise<void>"},{"heading":"triggertyping","content":"Trigger a typing indicator in the channel (this will expire after 10 seconds)"},{"heading":"returns-12","content":"Promise<void>"}],"headings":[{"id":"extends","content":"Extends"},{"id":"extended-by","content":"Extended by"},{"id":"type-parameters","content":"Type Parameters"},{"id":"constructors","content":"Constructors"},{"id":"new-baseguildchannel","content":"new BaseGuildChannel()"},{"id":"parameters","content":"Parameters"},{"id":"returns","content":"Returns"},{"id":"inherited-from","content":"Inherited from"},{"id":"properties","content":"Properties"},{"id":"accessors","content":"Accessors"},{"id":"guild","content":"guild"},{"id":"returns-1","content":"Returns"},{"id":"methods","content":"Methods"},{"id":"createinvite","content":"createInvite()"},{"id":"parameters-1","content":"Parameters"},{"id":"returns-2","content":"Returns"},{"id":"fetch","content":"fetch()"},{"id":"returns-3","content":"Returns"},{"id":"inherited-from-1","content":"Inherited from"},{"id":"getinvites","content":"getInvites()"},{"id":"returns-4","content":"Returns"},{"id":"send","content":"send()"},{"id":"parameters-2","content":"Parameters"},{"id":"returns-5","content":"Returns"},{"id":"setdata","content":"setData()"},{"id":"parameters-3","content":"Parameters"},{"id":"returns-6","content":"Returns"},{"id":"overrides","content":"Overrides"},{"id":"setname","content":"setName()"},{"id":"parameters-4","content":"Parameters"},{"id":"returns-7","content":"Returns"},{"id":"setnsfw","content":"setNsfw()"},{"id":"parameters-5","content":"Parameters"},{"id":"returns-8","content":"Returns"},{"id":"setparent","content":"setParent()"},{"id":"parameters-6","content":"Parameters"},{"id":"returns-9","content":"Returns"},{"id":"setposition","content":"setPosition()"},{"id":"parameters-7","content":"Parameters"},{"id":"returns-10","content":"Returns"},{"id":"setspecificdata","content":"setSpecificData()"},{"id":"parameters-8","content":"Parameters"},{"id":"returns-11","content":"Returns"},{"id":"inherited-from-2","content":"Inherited from"},{"id":"triggertyping","content":"triggerTyping()"},{"id":"returns-12","content":"Returns"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/api/classes/BaseGuildTextChannel.mdx","data":{"frontmatter":{"title":"BaseGuildTextChannel","index":false},"toc":[{"title":"Extends","url":"#extends","depth":2},{"title":"Extended by","url":"#extended-by","depth":2},{"title":"Type Parameters","url":"#type-parameters","depth":2},{"title":"Constructors","url":"#constructors","depth":2},{"title":"new BaseGuildTextChannel()","url":"#new-baseguildtextchannel","depth":3},{"title":"Parameters","url":"#parameters","depth":4},{"title":"Returns","url":"#returns","depth":4},{"title":"Inherited from","url":"#inherited-from","depth":4},{"title":"Properties","url":"#properties","depth":2},{"title":"Accessors","url":"#accessors","depth":2},{"title":"guild","url":"#guild","depth":3},{"title":"Returns","url":"#returns-1","depth":4},{"title":"Inherited from","url":"#inherited-from-1","depth":4},{"title":"lastMessage","url":"#lastmessage","depth":3},{"title":"Remarks","url":"#remarks","depth":4},{"title":"Returns","url":"#returns-2","depth":4},{"title":"Methods","url":"#methods","depth":2},{"title":"createInvite()","url":"#createinvite","depth":3},{"title":"Parameters","url":"#parameters-1","depth":4},{"title":"Returns","url":"#returns-3","depth":4},{"title":"Inherited from","url":"#inherited-from-2","depth":4},{"title":"fetch()","url":"#fetch","depth":3},{"title":"Returns","url":"#returns-4","depth":4},{"title":"Inherited from","url":"#inherited-from-3","depth":4},{"title":"getInvites()","url":"#getinvites","depth":3},{"title":"Returns","url":"#returns-5","depth":4},{"title":"Inherited from","url":"#inherited-from-4","depth":4},{"title":"getPinnedMessages()","url":"#getpinnedmessages","depth":3},{"title":"Returns","url":"#returns-6","depth":4},{"title":"send()","url":"#send","depth":3},{"title":"Parameters","url":"#parameters-2","depth":4},{"title":"Returns","url":"#returns-7","depth":4},{"title":"Inherited from","url":"#inherited-from-5","depth":4},{"title":"setData()","url":"#setdata","depth":3},{"title":"Parameters","url":"#parameters-3","depth":4},{"title":"Returns","url":"#returns-8","depth":4},{"title":"Inherited from","url":"#inherited-from-6","depth":4},{"title":"setMoreSpecificData()","url":"#setmorespecificdata","depth":3},{"title":"Parameters","url":"#parameters-4","depth":4},{"title":"Returns","url":"#returns-9","depth":4},{"title":"setName()","url":"#setname","depth":3},{"title":"Parameters","url":"#parameters-5","depth":4},{"title":"Returns","url":"#returns-10","depth":4},{"title":"Inherited from","url":"#inherited-from-7","depth":4},{"title":"setNsfw()","url":"#setnsfw","depth":3},{"title":"Parameters","url":"#parameters-6","depth":4},{"title":"Returns","url":"#returns-11","depth":4},{"title":"Inherited from","url":"#inherited-from-8","depth":4},{"title":"setParent()","url":"#setparent","depth":3},{"title":"Parameters","url":"#parameters-7","depth":4},{"title":"Returns","url":"#returns-12","depth":4},{"title":"Inherited from","url":"#inherited-from-9","depth":4},{"title":"setPosition()","url":"#setposition","depth":3},{"title":"Parameters","url":"#parameters-8","depth":4},{"title":"Returns","url":"#returns-13","depth":4},{"title":"Inherited from","url":"#inherited-from-10","depth":4},{"title":"setSpecificData()","url":"#setspecificdata","depth":3},{"title":"Parameters","url":"#parameters-9","depth":4},{"title":"Returns","url":"#returns-14","depth":4},{"title":"Overrides","url":"#overrides","depth":4},{"title":"startThread()","url":"#startthread","depth":3},{"title":"Parameters","url":"#parameters-10","depth":4},{"title":"Returns","url":"#returns-15","depth":4},{"title":"triggerTyping()","url":"#triggertyping","depth":3},{"title":"Returns","url":"#returns-16","depth":4},{"title":"Inherited from","url":"#inherited-from-11","depth":4}],"structuredData":{"contents":[{"heading":"extends","content":"BaseGuildChannel<Type>"},{"heading":"extended-by","content":"GuildAnnouncementChannel"},{"heading":"extended-by","content":"GuildTextChannel"},{"heading":"type-parameters","content":"Type Parameter"},{"heading":"type-parameters","content":"Type extends GuildTextChannelType"},{"heading":"new-baseguildtextchannel","content":"new BaseGuildTextChannel<Type>(client, rawDataOrId): BaseGuildTextChannel<Type>"},{"heading":"parameters","content":"Parameter"},{"heading":"parameters","content":"Type"},{"heading":"parameters","content":"client"},{"heading":"parameters","content":"Client"},{"heading":"parameters","content":"rawDataOrId"},{"heading":"parameters","content":"string | Extract<APIDMChannel, object> | Extract<APIGroupDMChannel, object> | Extract<APIGuildCategoryChannel, object> | Extract<APIGuildForumChannel, object> | Extract<APIGuildMediaChannel, object> | Extract<APIGuildStageVoiceChannel, object> | Extract<APIGuildVoiceChannel, object> | Extract<APINewsChannel, object> | Extract<APITextChannel, object> | Extract<APIThreadChannel, object>"},{"heading":"returns","content":"BaseGuildTextChannel<Type>"},{"heading":"inherited-from","content":"BaseGuildChannel.constructor"},{"heading":"properties","content":"Property"},{"heading":"properties","content":"Modifier"},{"heading":"properties","content":"Type"},{"heading":"properties","content":"Default value"},{"heading":"properties","content":"Description"},{"heading":"properties","content":"Inherited from"},{"heading":"properties","content":"client"},{"heading":"properties","content":"public"},{"heading":"properties","content":"Client"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseGuildChannel.client"},{"heading":"properties","content":"flags?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | number"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The flags of the channel in a bitfield. See https://discord.com/developers/docs/resources/channel#channel-object-channel-flags"},{"heading":"properties","content":"BaseGuildChannel.flags"},{"heading":"properties","content":"guildId?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The ID of the guild this channel is in"},{"heading":"properties","content":"BaseGuildChannel.guildId"},{"heading":"properties","content":"id"},{"heading":"properties","content":"public"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The id of the channel."},{"heading":"properties","content":"BaseGuildChannel.id"},{"heading":"properties","content":"lastMessageId?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The ID of the last message sent in the channel. Remarks This might not always resolve to a message. The ID still stays a part of the channel's data, even if the message is deleted."},{"heading":"properties","content":"-"},{"heading":"properties","content":"lastPinTimestamp?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The timestamp of the last pin in the channel."},{"heading":"properties","content":"-"},{"heading":"properties","content":"name?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The name of the channel."},{"heading":"properties","content":"BaseGuildChannel.name"},{"heading":"properties","content":"nsfw?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"Whether the channel is marked as nsfw."},{"heading":"properties","content":"BaseGuildChannel.nsfw"},{"heading":"properties","content":"parentId?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The ID of the parent category for the channel."},{"heading":"properties","content":"BaseGuildChannel.parentId"},{"heading":"properties","content":"partial"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"Whether the channel is a partial channel (meaning it does not have all the data). If this is true, you should use BaseChannel.fetch to get the full data of the channel."},{"heading":"properties","content":"BaseGuildChannel.partial"},{"heading":"properties","content":"position?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"number"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The position of the channel in the channel list."},{"heading":"properties","content":"BaseGuildChannel.position"},{"heading":"properties","content":"rateLimitPerUser?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | number"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The rate limit per user for the channel, in seconds."},{"heading":"properties","content":"-"},{"heading":"properties","content":"rawData"},{"heading":"properties","content":"protected"},{"heading":"properties","content":"null | Extract<APIDMChannel, object> | Extract<APIGroupDMChannel, object> | Extract<APIGuildCategoryChannel, object> | Extract<APIGuildForumChannel, object> | Extract<APIGuildMediaChannel, object> | Extract<APIGuildStageVoiceChannel, object> | Extract<APIGuildVoiceChannel, object> | Extract<APINewsChannel, object> | Extract<APITextChannel, object> | Extract<APIThreadChannel, object>"},{"heading":"properties","content":"null"},{"heading":"properties","content":"The raw data of the channel."},{"heading":"properties","content":"BaseGuildChannel.rawData"},{"heading":"properties","content":"type?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"Type"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The type of the channel."},{"heading":"properties","content":"BaseGuildChannel.type"},{"heading":"guild","content":"get guild(): Guild"},{"heading":"guild","content":"The guild this channel is in"},{"heading":"returns-1","content":"Guild"},{"heading":"inherited-from-1","content":"BaseGuildChannel.guild"},{"heading":"lastmessage","content":"get lastMessage(): null | Message"},{"heading":"lastmessage","content":"The last message sent in the channel."},{"heading":"remarks","content":"This might not always resolve to a message. The ID still stays a part of the channel's data, even if the message is deleted.\nThis will always return a partial message, so you can use Message.fetch to get the full message data."},{"heading":"returns-2","content":"null | Message"},{"heading":"createinvite","content":"createInvite(options?): Promise<APIExtendedInvite>"},{"heading":"createinvite","content":"Create an invite for the channel"},{"heading":"parameters-1","content":"Parameter"},{"heading":"parameters-1","content":"Type"},{"heading":"parameters-1","content":"options?"},{"heading":"parameters-1","content":"RESTPostAPIChannelInviteJSONBody"},{"heading":"returns-3","content":"Promise<APIExtendedInvite>"},{"heading":"inherited-from-2","content":"BaseGuildChannel.createInvite"},{"heading":"fetch","content":"fetch(): Promise<void>"},{"heading":"fetch","content":"Fetches the channel from the API."},{"heading":"returns-4","content":"Promise<void>"},{"heading":"returns-4","content":"The channel data."},{"heading":"inherited-from-3","content":"BaseGuildChannel.fetch"},{"heading":"getinvites","content":"getInvites(): Promise<RESTGetAPIGuildInvitesResult>"},{"heading":"getinvites","content":"Get the invites for the channel"},{"heading":"returns-5","content":"Promise<RESTGetAPIGuildInvitesResult>"},{"heading":"inherited-from-4","content":"BaseGuildChannel.getInvites"},{"heading":"getpinnedmessages","content":"getPinnedMessages(): Promise<Message[]>"},{"heading":"getpinnedmessages","content":"Get the pinned messages in the channel"},{"heading":"returns-6","content":"Promise<Message[]>"},{"heading":"send","content":"send(message): Promise<void>"},{"heading":"send","content":"Send a message to the channel"},{"heading":"parameters-2","content":"Parameter"},{"heading":"parameters-2","content":"Type"},{"heading":"parameters-2","content":"message"},{"heading":"parameters-2","content":"APIMessage"},{"heading":"returns-7","content":"Promise<void>"},{"heading":"inherited-from-5","content":"BaseGuildChannel.send"},{"heading":"setdata","content":"protected setData(data): void"},{"heading":"parameters-3","content":"Parameter"},{"heading":"parameters-3","content":"Type"},{"heading":"parameters-3","content":"data"},{"heading":"parameters-3","content":"APIGuildChannel<Type>"},{"heading":"returns-8","content":"void"},{"heading":"inherited-from-6","content":"BaseGuildChannel.setData"},{"heading":"setmorespecificdata","content":"abstract protected setMoreSpecificData(data): void"},{"heading":"parameters-4","content":"Parameter"},{"heading":"parameters-4","content":"Type"},{"heading":"parameters-4","content":"data"},{"heading":"parameters-4","content":"APIGuildTextChannel<Type>"},{"heading":"returns-9","content":"void"},{"heading":"setname","content":"setName(name): Promise<void>"},{"heading":"setname","content":"Set the name of the channel"},{"heading":"parameters-5","content":"Parameter"},{"heading":"parameters-5","content":"Type"},{"heading":"parameters-5","content":"Description"},{"heading":"parameters-5","content":"name"},{"heading":"parameters-5","content":"string"},{"heading":"parameters-5","content":"The new name of the channel"},{"heading":"returns-10","content":"Promise<void>"},{"heading":"inherited-from-7","content":"BaseGuildChannel.setName"},{"heading":"setnsfw","content":"setNsfw(nsfw): Promise<void>"},{"heading":"setnsfw","content":"Set whether the channel is nsfw"},{"heading":"parameters-6","content":"Parameter"},{"heading":"parameters-6","content":"Type"},{"heading":"parameters-6","content":"Description"},{"heading":"parameters-6","content":"nsfw"},{"heading":"parameters-6","content":"boolean"},{"heading":"parameters-6","content":"The new nsfw status of the channel"},{"heading":"returns-11","content":"Promise<void>"},{"heading":"inherited-from-8","content":"BaseGuildChannel.setNsfw"},{"heading":"setparent","content":"setParent(parent): Promise<void>"},{"heading":"setparent","content":"Set the parent ID of the channel"},{"heading":"parameters-7","content":"Parameter"},{"heading":"parameters-7","content":"Type"},{"heading":"parameters-7","content":"Description"},{"heading":"parameters-7","content":"parent"},{"heading":"parameters-7","content":"string | GuildCategoryChannel"},{"heading":"parameters-7","content":"The new category channel or ID to set"},{"heading":"returns-12","content":"Promise<void>"},{"heading":"inherited-from-9","content":"BaseGuildChannel.setParent"},{"heading":"setposition","content":"setPosition(position): Promise<void>"},{"heading":"setposition","content":"Set the position of the channel"},{"heading":"parameters-8","content":"Parameter"},{"heading":"parameters-8","content":"Type"},{"heading":"parameters-8","content":"Description"},{"heading":"parameters-8","content":"position"},{"heading":"parameters-8","content":"number"},{"heading":"parameters-8","content":"The new position of the channel"},{"heading":"returns-13","content":"Promise<void>"},{"heading":"inherited-from-10","content":"BaseGuildChannel.setPosition"},{"heading":"setspecificdata","content":"protected setSpecificData(data): void"},{"heading":"parameters-9","content":"Parameter"},{"heading":"parameters-9","content":"Type"},{"heading":"parameters-9","content":"data"},{"heading":"parameters-9","content":"APIGuildTextChannel<Type>"},{"heading":"returns-14","content":"void"},{"heading":"overrides","content":"BaseGuildChannel.setSpecificData"},{"heading":"startthread","content":"startThread(data): Promise<GuildThreadChannel<ThreadChannelType>>"},{"heading":"startthread","content":"Start a thread without an associated start message.\nIf you want to start a thread with a start message, use Message.startThread"},{"heading":"parameters-10","content":"Parameter"},{"heading":"parameters-10","content":"Type"},{"heading":"parameters-10","content":"data"},{"heading":"parameters-10","content":"RESTPostAPIChannelThreadsJSONBody"},{"heading":"returns-15","content":"Promise<GuildThreadChannel<ThreadChannelType>>"},{"heading":"triggertyping","content":"triggerTyping(): Promise<void>"},{"heading":"triggertyping","content":"Trigger a typing indicator in the channel (this will expire after 10 seconds)"},{"heading":"returns-16","content":"Promise<void>"},{"heading":"inherited-from-11","content":"BaseGuildChannel.triggerTyping"}],"headings":[{"id":"extends","content":"Extends"},{"id":"extended-by","content":"Extended by"},{"id":"type-parameters","content":"Type Parameters"},{"id":"constructors","content":"Constructors"},{"id":"new-baseguildtextchannel","content":"new BaseGuildTextChannel()"},{"id":"parameters","content":"Parameters"},{"id":"returns","content":"Returns"},{"id":"inherited-from","content":"Inherited from"},{"id":"properties","content":"Properties"},{"id":"accessors","content":"Accessors"},{"id":"guild","content":"guild"},{"id":"returns-1","content":"Returns"},{"id":"inherited-from-1","content":"Inherited from"},{"id":"lastmessage","content":"lastMessage"},{"id":"remarks","content":"Remarks"},{"id":"returns-2","content":"Returns"},{"id":"methods","content":"Methods"},{"id":"createinvite","content":"createInvite()"},{"id":"parameters-1","content":"Parameters"},{"id":"returns-3","content":"Returns"},{"id":"inherited-from-2","content":"Inherited from"},{"id":"fetch","content":"fetch()"},{"id":"returns-4","content":"Returns"},{"id":"inherited-from-3","content":"Inherited from"},{"id":"getinvites","content":"getInvites()"},{"id":"returns-5","content":"Returns"},{"id":"inherited-from-4","content":"Inherited from"},{"id":"getpinnedmessages","content":"getPinnedMessages()"},{"id":"returns-6","content":"Returns"},{"id":"send","content":"send()"},{"id":"parameters-2","content":"Parameters"},{"id":"returns-7","content":"Returns"},{"id":"inherited-from-5","content":"Inherited from"},{"id":"setdata","content":"setData()"},{"id":"parameters-3","content":"Parameters"},{"id":"returns-8","content":"Returns"},{"id":"inherited-from-6","content":"Inherited from"},{"id":"setmorespecificdata","content":"setMoreSpecificData()"},{"id":"parameters-4","content":"Parameters"},{"id":"returns-9","content":"Returns"},{"id":"setname","content":"setName()"},{"id":"parameters-5","content":"Parameters"},{"id":"returns-10","content":"Returns"},{"id":"inherited-from-7","content":"Inherited from"},{"id":"setnsfw","content":"setNsfw()"},{"id":"parameters-6","content":"Parameters"},{"id":"returns-11","content":"Returns"},{"id":"inherited-from-8","content":"Inherited from"},{"id":"setparent","content":"setParent()"},{"id":"parameters-7","content":"Parameters"},{"id":"returns-12","content":"Returns"},{"id":"inherited-from-9","content":"Inherited from"},{"id":"setposition","content":"setPosition()"},{"id":"parameters-8","content":"Parameters"},{"id":"returns-13","content":"Returns"},{"id":"inherited-from-10","content":"Inherited from"},{"id":"setspecificdata","content":"setSpecificData()"},{"id":"parameters-9","content":"Parameters"},{"id":"returns-14","content":"Returns"},{"id":"overrides","content":"Overrides"},{"id":"startthread","content":"startThread()"},{"id":"parameters-10","content":"Parameters"},{"id":"returns-15","content":"Returns"},{"id":"triggertyping","content":"triggerTyping()"},{"id":"returns-16","content":"Returns"},{"id":"inherited-from-11","content":"Inherited from"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/api/classes/BaseInteraction.mdx","data":{"frontmatter":{"title":"BaseInteraction","index":false},"toc":[{"title":"Extends","url":"#extends","depth":2},{"title":"Extended by","url":"#extended-by","depth":2},{"title":"Type Parameters","url":"#type-parameters","depth":2},{"title":"Constructors","url":"#constructors","depth":2},{"title":"new BaseInteraction()","url":"#new-baseinteraction","depth":3},{"title":"Parameters","url":"#parameters","depth":4},{"title":"Returns","url":"#returns","depth":4},{"title":"Overrides","url":"#overrides","depth":4},{"title":"Properties","url":"#properties","depth":2},{"title":"Accessors","url":"#accessors","depth":2},{"title":"channel","url":"#channel","depth":3},{"title":"Returns","url":"#returns-1","depth":4},{"title":"guild","url":"#guild","depth":3},{"title":"Returns","url":"#returns-2","depth":4},{"title":"member","url":"#member","depth":3},{"title":"Returns","url":"#returns-3","depth":4},{"title":"message","url":"#message","depth":3},{"title":"Returns","url":"#returns-4","depth":4},{"title":"user","url":"#user","depth":3},{"title":"Returns","url":"#returns-5","depth":4},{"title":"Methods","url":"#methods","depth":2},{"title":"defer()","url":"#defer","depth":3},{"title":"Returns","url":"#returns-6","depth":4},{"title":"reply()","url":"#reply","depth":3},{"title":"Parameters","url":"#parameters-1","depth":4},{"title":"Returns","url":"#returns-7","depth":4},{"title":"showModal()","url":"#showmodal","depth":3},{"title":"Parameters","url":"#parameters-2","depth":4},{"title":"Returns","url":"#returns-8","depth":4}],"structuredData":{"contents":[{"heading":"","content":"This is the base type interaction, all interaction types extend from this"},{"heading":"extends","content":"Base"},{"heading":"extended-by","content":"BaseComponentInteraction"},{"heading":"extended-by","content":"AutocompleteInteraction"},{"heading":"extended-by","content":"CommandInteraction"},{"heading":"extended-by","content":"ModalInteraction"},{"heading":"type-parameters","content":"Type Parameter"},{"heading":"type-parameters","content":"T extends APIInteraction"},{"heading":"new-baseinteraction","content":"new BaseInteraction<T>(client, data, defaults): BaseInteraction<T>"},{"heading":"parameters","content":"Parameter"},{"heading":"parameters","content":"Type"},{"heading":"parameters","content":"client"},{"heading":"parameters","content":"Client"},{"heading":"parameters","content":"data"},{"heading":"parameters","content":"T"},{"heading":"parameters","content":"defaults"},{"heading":"parameters","content":"object"},{"heading":"parameters","content":"defaults.ephemeral?"},{"heading":"parameters","content":"boolean"},{"heading":"returns","content":"BaseInteraction<T>"},{"heading":"overrides","content":"Base.constructor"},{"heading":"properties","content":"Property"},{"heading":"properties","content":"Type"},{"heading":"properties","content":"Default value"},{"heading":"properties","content":"Description"},{"heading":"properties","content":"Inherited from"},{"heading":"properties","content":"_deferred"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"false"},{"heading":"properties","content":"Internal Whether the interaction is deferred already"},{"heading":"properties","content":"-"},{"heading":"properties","content":"client"},{"heading":"properties","content":"Client"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"Base.client"},{"heading":"properties","content":"rawData"},{"heading":"properties","content":"T"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The raw data of the interaction"},{"heading":"properties","content":"-"},{"heading":"properties","content":"type"},{"heading":"properties","content":"InteractionType"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The type of interaction"},{"heading":"properties","content":"-"},{"heading":"properties","content":"userId"},{"heading":"properties","content":"undefined | string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The user who sent the interaction"},{"heading":"properties","content":"-"},{"heading":"channel","content":"get channel(): null | DmChannel | GuildCategoryChannel | GroupDmChannel | GuildTextChannel | GuildVoiceChannel | GuildAnnouncementChannel | GuildThreadChannel<ThreadChannelType> | GuildStageChannel | GuildForumChannel | GuildMediaChannel"},{"heading":"returns-1","content":"null | DmChannel | GuildCategoryChannel | GroupDmChannel | GuildTextChannel | GuildVoiceChannel | GuildAnnouncementChannel | GuildThreadChannel<ThreadChannelType> | GuildStageChannel | GuildForumChannel | GuildMediaChannel"},{"heading":"guild","content":"get guild(): null | Guild"},{"heading":"returns-2","content":"null | Guild"},{"heading":"member","content":"get member(): null | GuildMember"},{"heading":"returns-3","content":"null | GuildMember"},{"heading":"message","content":"get message(): null | Message"},{"heading":"returns-4","content":"null | Message"},{"heading":"user","content":"get user(): null | User"},{"heading":"returns-5","content":"null | User"},{"heading":"defer","content":"defer(): Promise<void>"},{"heading":"defer","content":"Internal"},{"heading":"defer","content":"Defer the interaction response. This is used automatically by commands that are set to defer.\nIf the interaction is already deferred, this will do nothing."},{"heading":"returns-6","content":"Promise<void>"},{"heading":"reply","content":"reply(data, options): Promise<void>"},{"heading":"reply","content":"Reply to an interaction.\nIf the interaction is deferred, this will edit the original response."},{"heading":"parameters-1","content":"Parameter"},{"heading":"parameters-1","content":"Type"},{"heading":"parameters-1","content":"Description"},{"heading":"parameters-1","content":"data"},{"heading":"parameters-1","content":"InteractionReplyData"},{"heading":"parameters-1","content":"The response data"},{"heading":"parameters-1","content":"options"},{"heading":"parameters-1","content":"InteractionReplyOptions"},{"heading":"parameters-1","content":"-"},{"heading":"returns-7","content":"Promise<void>"},{"heading":"showmodal","content":"showModal(modal): Promise<void>"},{"heading":"parameters-2","content":"Parameter"},{"heading":"parameters-2","content":"Type"},{"heading":"parameters-2","content":"modal"},{"heading":"parameters-2","content":"Modal"},{"heading":"returns-8","content":"Promise<void>"}],"headings":[{"id":"extends","content":"Extends"},{"id":"extended-by","content":"Extended by"},{"id":"type-parameters","content":"Type Parameters"},{"id":"constructors","content":"Constructors"},{"id":"new-baseinteraction","content":"new BaseInteraction()"},{"id":"parameters","content":"Parameters"},{"id":"returns","content":"Returns"},{"id":"overrides","content":"Overrides"},{"id":"properties","content":"Properties"},{"id":"accessors","content":"Accessors"},{"id":"channel","content":"channel"},{"id":"returns-1","content":"Returns"},{"id":"guild","content":"guild"},{"id":"returns-2","content":"Returns"},{"id":"member","content":"member"},{"id":"returns-3","content":"Returns"},{"id":"message","content":"message"},{"id":"returns-4","content":"Returns"},{"id":"user","content":"user"},{"id":"returns-5","content":"Returns"},{"id":"methods","content":"Methods"},{"id":"defer","content":"defer()"},{"id":"returns-6","content":"Returns"},{"id":"reply","content":"reply()"},{"id":"parameters-1","content":"Parameters"},{"id":"returns-7","content":"Returns"},{"id":"showmodal","content":"showModal()"},{"id":"parameters-2","content":"Parameters"},{"id":"returns-8","content":"Returns"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/api/classes/Button.mdx","data":{"frontmatter":{"title":"Button","index":false},"toc":[{"title":"Extends","url":"#extends","depth":2},{"title":"Constructors","url":"#constructors","depth":2},{"title":"new Button()","url":"#new-button","depth":3},{"title":"Parameters","url":"#parameters","depth":4},{"title":"Returns","url":"#returns","depth":4},{"title":"Inherited from","url":"#inherited-from","depth":4},{"title":"Properties","url":"#properties","depth":2},{"title":"Methods","url":"#methods","depth":2},{"title":"createId()","url":"#createid","depth":3},{"title":"Parameters","url":"#parameters-1","depth":4},{"title":"Returns","url":"#returns-1","depth":4},{"title":"Inherited from","url":"#inherited-from-1","depth":4},{"title":"run()","url":"#run","depth":3},{"title":"Parameters","url":"#parameters-2","depth":4},{"title":"Returns","url":"#returns-2","depth":4},{"title":"serialize()","url":"#serialize","depth":3},{"title":"Returns","url":"#returns-3","depth":4},{"title":"Overrides","url":"#overrides","depth":4}],"structuredData":{"contents":[{"heading":"extends","content":"BaseButton"},{"heading":"new-button","content":"new Button(data?): Button"},{"heading":"parameters","content":"Parameter"},{"heading":"parameters","content":"Type"},{"heading":"parameters","content":"data?"},{"heading":"parameters","content":"object"},{"heading":"parameters","content":"data.additionalData?"},{"heading":"parameters","content":"ComponentAdditionalData"},{"heading":"returns","content":"Button"},{"heading":"inherited-from","content":"BaseButton.constructor"},{"heading":"properties","content":"Property"},{"heading":"properties","content":"Modifier"},{"heading":"properties","content":"Type"},{"heading":"properties","content":"Default value"},{"heading":"properties","content":"Description"},{"heading":"properties","content":"Overrides"},{"heading":"properties","content":"Inherited from"},{"heading":"properties","content":"additionalData"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | ComponentAdditionalData"},{"heading":"properties","content":"null"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseButton.additionalData"},{"heading":"properties","content":"customId"},{"heading":"properties","content":"abstract"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The custom ID of the component"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseButton.customId"},{"heading":"properties","content":"defer"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"false"},{"heading":"properties","content":"Whether the component response should be automatically deferred"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseButton.defer"},{"heading":"properties","content":"disabled"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"false"},{"heading":"properties","content":"The disabled state of the button"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseButton.disabled"},{"heading":"properties","content":"emoji?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"object"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The emoji of the button"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseButton.emoji"},{"heading":"properties","content":"emoji.animated?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"emoji.id?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"emoji.name"},{"heading":"properties","content":"public"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"ephemeral"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"false"},{"heading":"properties","content":"Whether the component response should be ephemeral"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseButton.ephemeral"},{"heading":"properties","content":"label"},{"heading":"properties","content":"abstract"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The label of the button"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseButton.label"},{"heading":"properties","content":"style"},{"heading":"properties","content":"abstract"},{"heading":"properties","content":"Primary | Secondary | Success | Danger"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The style of the button"},{"heading":"properties","content":"BaseButton.style"},{"heading":"properties","content":"-"},{"heading":"properties","content":"type"},{"heading":"properties","content":"public"},{"heading":"properties","content":"ComponentType"},{"heading":"properties","content":"ComponentType.Button"},{"heading":"properties","content":"The type of the component"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseButton.type"},{"heading":"createid","content":"createId(additionalData): string"},{"heading":"createid","content":"Create a custom ID to use for this component that embeds additional data that you want to be handed"},{"heading":"parameters-1","content":"Parameter"},{"heading":"parameters-1","content":"Type"},{"heading":"parameters-1","content":"Description"},{"heading":"parameters-1","content":"additionalData"},{"heading":"parameters-1","content":"null | ComponentAdditionalData"},{"heading":"parameters-1","content":"The additional data that you want to be passed in this component's custom ID"},{"heading":"returns-1","content":"string"},{"heading":"returns-1","content":"The custom ID to use"},{"heading":"inherited-from-1","content":"BaseButton.createId"},{"heading":"run","content":"abstract run(interaction): Promise<void>"},{"heading":"parameters-2","content":"Parameter"},{"heading":"parameters-2","content":"Type"},{"heading":"parameters-2","content":"interaction"},{"heading":"parameters-2","content":"ButtonInteraction"},{"heading":"returns-2","content":"Promise<void>"},{"heading":"serialize","content":"serialize(): APIButtonComponent"},{"heading":"returns-3","content":"APIButtonComponent"},{"heading":"overrides","content":"BaseButton.serialize"}],"headings":[{"id":"extends","content":"Extends"},{"id":"constructors","content":"Constructors"},{"id":"new-button","content":"new Button()"},{"id":"parameters","content":"Parameters"},{"id":"returns","content":"Returns"},{"id":"inherited-from","content":"Inherited from"},{"id":"properties","content":"Properties"},{"id":"methods","content":"Methods"},{"id":"createid","content":"createId()"},{"id":"parameters-1","content":"Parameters"},{"id":"returns-1","content":"Returns"},{"id":"inherited-from-1","content":"Inherited from"},{"id":"run","content":"run()"},{"id":"parameters-2","content":"Parameters"},{"id":"returns-2","content":"Returns"},{"id":"serialize","content":"serialize()"},{"id":"returns-3","content":"Returns"},{"id":"overrides","content":"Overrides"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/api/classes/ButtonInteraction.mdx","data":{"frontmatter":{"title":"ButtonInteraction","index":false},"toc":[{"title":"Extends","url":"#extends","depth":2},{"title":"Constructors","url":"#constructors","depth":2},{"title":"new ButtonInteraction()","url":"#new-buttoninteraction","depth":3},{"title":"Parameters","url":"#parameters","depth":4},{"title":"Returns","url":"#returns","depth":4},{"title":"Overrides","url":"#overrides","depth":4},{"title":"Properties","url":"#properties","depth":2},{"title":"Accessors","url":"#accessors","depth":2},{"title":"channel","url":"#channel","depth":3},{"title":"Returns","url":"#returns-1","depth":4},{"title":"Inherited from","url":"#inherited-from","depth":4},{"title":"guild","url":"#guild","depth":3},{"title":"Returns","url":"#returns-2","depth":4},{"title":"Inherited from","url":"#inherited-from-1","depth":4},{"title":"member","url":"#member","depth":3},{"title":"Returns","url":"#returns-3","depth":4},{"title":"Inherited from","url":"#inherited-from-2","depth":4},{"title":"message","url":"#message","depth":3},{"title":"Returns","url":"#returns-4","depth":4},{"title":"Inherited from","url":"#inherited-from-3","depth":4},{"title":"user","url":"#user","depth":3},{"title":"Returns","url":"#returns-5","depth":4},{"title":"Inherited from","url":"#inherited-from-4","depth":4},{"title":"Methods","url":"#methods","depth":2},{"title":"defer()","url":"#defer","depth":3},{"title":"Returns","url":"#returns-6","depth":4},{"title":"Inherited from","url":"#inherited-from-5","depth":4},{"title":"reply()","url":"#reply","depth":3},{"title":"Parameters","url":"#parameters-1","depth":4},{"title":"Returns","url":"#returns-7","depth":4},{"title":"Inherited from","url":"#inherited-from-6","depth":4},{"title":"showModal()","url":"#showmodal","depth":3},{"title":"Parameters","url":"#parameters-2","depth":4},{"title":"Returns","url":"#returns-8","depth":4},{"title":"Inherited from","url":"#inherited-from-7","depth":4}],"structuredData":{"contents":[{"heading":"","content":"This is the base type interaction, all interaction types extend from this"},{"heading":"extends","content":"BaseComponentInteraction"},{"heading":"new-buttoninteraction","content":"new ButtonInteraction(client, data): ButtonInteraction"},{"heading":"parameters","content":"Parameter"},{"heading":"parameters","content":"Type"},{"heading":"parameters","content":"client"},{"heading":"parameters","content":"Client"},{"heading":"parameters","content":"data"},{"heading":"parameters","content":"APIMessageComponentButtonInteraction"},{"heading":"returns","content":"ButtonInteraction"},{"heading":"overrides","content":"BaseComponentInteraction.constructor"},{"heading":"properties","content":"Property"},{"heading":"properties","content":"Type"},{"heading":"properties","content":"Default value"},{"heading":"properties","content":"Description"},{"heading":"properties","content":"Overrides"},{"heading":"properties","content":"Inherited from"},{"heading":"properties","content":"_deferred"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"false"},{"heading":"properties","content":"Internal Whether the interaction is deferred already"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseComponentInteraction._deferred"},{"heading":"properties","content":"client"},{"heading":"properties","content":"Client"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseComponentInteraction.client"},{"heading":"properties","content":"componentType"},{"heading":"properties","content":"ComponentType"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseComponentInteraction.componentType"},{"heading":"properties","content":"customId"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseComponentInteraction.customId"},{"heading":"properties","content":"-"},{"heading":"properties","content":"rawData"},{"heading":"properties","content":"APIMessageComponentInteraction"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The raw data of the interaction"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseComponentInteraction.rawData"},{"heading":"properties","content":"type"},{"heading":"properties","content":"InteractionType"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The type of interaction"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseComponentInteraction.type"},{"heading":"properties","content":"userId"},{"heading":"properties","content":"undefined | string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The user who sent the interaction"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseComponentInteraction.userId"},{"heading":"channel","content":"get channel(): null | DmChannel | GuildCategoryChannel | GroupDmChannel | GuildTextChannel | GuildVoiceChannel | GuildAnnouncementChannel | GuildThreadChannel<ThreadChannelType> | GuildStageChannel | GuildForumChannel | GuildMediaChannel"},{"heading":"returns-1","content":"null | DmChannel | GuildCategoryChannel | GroupDmChannel | GuildTextChannel | GuildVoiceChannel | GuildAnnouncementChannel | GuildThreadChannel<ThreadChannelType> | GuildStageChannel | GuildForumChannel | GuildMediaChannel"},{"heading":"inherited-from","content":"BaseComponentInteraction.channel"},{"heading":"guild","content":"get guild(): null | Guild"},{"heading":"returns-2","content":"null | Guild"},{"heading":"inherited-from-1","content":"BaseComponentInteraction.guild"},{"heading":"member","content":"get member(): null | GuildMember"},{"heading":"returns-3","content":"null | GuildMember"},{"heading":"inherited-from-2","content":"BaseComponentInteraction.member"},{"heading":"message","content":"get message(): null | Message"},{"heading":"returns-4","content":"null | Message"},{"heading":"inherited-from-3","content":"BaseComponentInteraction.message"},{"heading":"user","content":"get user(): null | User"},{"heading":"returns-5","content":"null | User"},{"heading":"inherited-from-4","content":"BaseComponentInteraction.user"},{"heading":"defer","content":"defer(): Promise<void>"},{"heading":"defer","content":"Internal"},{"heading":"defer","content":"Defer the interaction response. This is used automatically by commands that are set to defer.\nIf the interaction is already deferred, this will do nothing."},{"heading":"returns-6","content":"Promise<void>"},{"heading":"inherited-from-5","content":"BaseComponentInteraction.defer"},{"heading":"reply","content":"reply(data, options): Promise<void>"},{"heading":"reply","content":"Reply to an interaction.\nIf the interaction is deferred, this will edit the original response."},{"heading":"parameters-1","content":"Parameter"},{"heading":"parameters-1","content":"Type"},{"heading":"parameters-1","content":"Description"},{"heading":"parameters-1","content":"data"},{"heading":"parameters-1","content":"InteractionReplyData"},{"heading":"parameters-1","content":"The response data"},{"heading":"parameters-1","content":"options"},{"heading":"parameters-1","content":"InteractionReplyOptions"},{"heading":"parameters-1","content":"-"},{"heading":"returns-7","content":"Promise<void>"},{"heading":"inherited-from-6","content":"BaseComponentInteraction.reply"},{"heading":"showmodal","content":"showModal(modal): Promise<void>"},{"heading":"parameters-2","content":"Parameter"},{"heading":"parameters-2","content":"Type"},{"heading":"parameters-2","content":"modal"},{"heading":"parameters-2","content":"Modal"},{"heading":"returns-8","content":"Promise<void>"},{"heading":"inherited-from-7","content":"BaseComponentInteraction.showModal"}],"headings":[{"id":"extends","content":"Extends"},{"id":"constructors","content":"Constructors"},{"id":"new-buttoninteraction","content":"new ButtonInteraction()"},{"id":"parameters","content":"Parameters"},{"id":"returns","content":"Returns"},{"id":"overrides","content":"Overrides"},{"id":"properties","content":"Properties"},{"id":"accessors","content":"Accessors"},{"id":"channel","content":"channel"},{"id":"returns-1","content":"Returns"},{"id":"inherited-from","content":"Inherited from"},{"id":"guild","content":"guild"},{"id":"returns-2","content":"Returns"},{"id":"inherited-from-1","content":"Inherited from"},{"id":"member","content":"member"},{"id":"returns-3","content":"Returns"},{"id":"inherited-from-2","content":"Inherited from"},{"id":"message","content":"message"},{"id":"returns-4","content":"Returns"},{"id":"inherited-from-3","content":"Inherited from"},{"id":"user","content":"user"},{"id":"returns-5","content":"Returns"},{"id":"inherited-from-4","content":"Inherited from"},{"id":"methods","content":"Methods"},{"id":"defer","content":"defer()"},{"id":"returns-6","content":"Returns"},{"id":"inherited-from-5","content":"Inherited from"},{"id":"reply","content":"reply()"},{"id":"parameters-1","content":"Parameters"},{"id":"returns-7","content":"Returns"},{"id":"inherited-from-6","content":"Inherited from"},{"id":"showmodal","content":"showModal()"},{"id":"parameters-2","content":"Parameters"},{"id":"returns-8","content":"Returns"},{"id":"inherited-from-7","content":"Inherited from"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/api/classes/ChannelSelectMenu.mdx","data":{"frontmatter":{"title":"ChannelSelectMenu","index":false},"toc":[{"title":"Extends","url":"#extends","depth":2},{"title":"Constructors","url":"#constructors","depth":2},{"title":"new ChannelSelectMenu()","url":"#new-channelselectmenu","depth":3},{"title":"Parameters","url":"#parameters","depth":4},{"title":"Returns","url":"#returns","depth":4},{"title":"Inherited from","url":"#inherited-from","depth":4},{"title":"Properties","url":"#properties","depth":2},{"title":"Methods","url":"#methods","depth":2},{"title":"createId()","url":"#createid","depth":3},{"title":"Parameters","url":"#parameters-1","depth":4},{"title":"Returns","url":"#returns-1","depth":4},{"title":"Inherited from","url":"#inherited-from-1","depth":4},{"title":"run()","url":"#run","depth":3},{"title":"Parameters","url":"#parameters-2","depth":4},{"title":"Returns","url":"#returns-2","depth":4},{"title":"Overrides","url":"#overrides","depth":4},{"title":"serialize()","url":"#serialize","depth":3},{"title":"Returns","url":"#returns-3","depth":4},{"title":"Inherited from","url":"#inherited-from-2","depth":4},{"title":"serializeOptions()","url":"#serializeoptions","depth":3},{"title":"Returns","url":"#returns-4","depth":4},{"title":"Overrides","url":"#overrides-1","depth":4}],"structuredData":{"contents":[{"heading":"extends","content":"AnySelectMenu"},{"heading":"new-channelselectmenu","content":"new ChannelSelectMenu(data?): ChannelSelectMenu"},{"heading":"parameters","content":"Parameter"},{"heading":"parameters","content":"Type"},{"heading":"parameters","content":"data?"},{"heading":"parameters","content":"object"},{"heading":"parameters","content":"data.additionalData?"},{"heading":"parameters","content":"ComponentAdditionalData"},{"heading":"returns","content":"ChannelSelectMenu"},{"heading":"inherited-from","content":"AnySelectMenu.constructor"},{"heading":"properties","content":"Property"},{"heading":"properties","content":"Modifier"},{"heading":"properties","content":"Type"},{"heading":"properties","content":"Default value"},{"heading":"properties","content":"Description"},{"heading":"properties","content":"Overrides"},{"heading":"properties","content":"Inherited from"},{"heading":"properties","content":"additionalData"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | ComponentAdditionalData"},{"heading":"properties","content":"null"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"AnySelectMenu.additionalData"},{"heading":"properties","content":"channelTypes?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"ChannelType[]"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"customId"},{"heading":"properties","content":"abstract"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The custom ID of the component"},{"heading":"properties","content":"-"},{"heading":"properties","content":"AnySelectMenu.customId"},{"heading":"properties","content":"defaultValues?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"APISelectMenuDefaultValue<Channel>[]"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"defer"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"false"},{"heading":"properties","content":"Whether the component response should be automatically deferred"},{"heading":"properties","content":"-"},{"heading":"properties","content":"AnySelectMenu.defer"},{"heading":"properties","content":"disabled?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"AnySelectMenu.disabled"},{"heading":"properties","content":"ephemeral"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"false"},{"heading":"properties","content":"Whether the component response should be ephemeral"},{"heading":"properties","content":"-"},{"heading":"properties","content":"AnySelectMenu.ephemeral"},{"heading":"properties","content":"maxValues?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"number"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"AnySelectMenu.maxValues"},{"heading":"properties","content":"minValues?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"number"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"AnySelectMenu.minValues"},{"heading":"properties","content":"placeholder?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"AnySelectMenu.placeholder"},{"heading":"properties","content":"type"},{"heading":"properties","content":"public"},{"heading":"properties","content":"ChannelSelect"},{"heading":"properties","content":"ComponentType.ChannelSelect"},{"heading":"properties","content":"The type of the component"},{"heading":"properties","content":"AnySelectMenu.type"},{"heading":"properties","content":"-"},{"heading":"createid","content":"createId(additionalData): string"},{"heading":"createid","content":"Create a custom ID to use for this component that embeds additional data that you want to be handed"},{"heading":"parameters-1","content":"Parameter"},{"heading":"parameters-1","content":"Type"},{"heading":"parameters-1","content":"Description"},{"heading":"parameters-1","content":"additionalData"},{"heading":"parameters-1","content":"null | ComponentAdditionalData"},{"heading":"parameters-1","content":"The additional data that you want to be passed in this component's custom ID"},{"heading":"returns-1","content":"string"},{"heading":"returns-1","content":"The custom ID to use"},{"heading":"inherited-from-1","content":"AnySelectMenu.createId"},{"heading":"run","content":"abstract run(interaction): Promise<void>"},{"heading":"parameters-2","content":"Parameter"},{"heading":"parameters-2","content":"Type"},{"heading":"parameters-2","content":"interaction"},{"heading":"parameters-2","content":"ChannelSelectMenuInteraction"},{"heading":"returns-2","content":"Promise<void>"},{"heading":"overrides","content":"AnySelectMenu.run"},{"heading":"serialize","content":"serialize(): APISelectMenuComponent"},{"heading":"returns-3","content":"APISelectMenuComponent"},{"heading":"inherited-from-2","content":"AnySelectMenu.serialize"},{"heading":"serializeoptions","content":"serializeOptions(): object"},{"heading":"returns-4","content":"object"},{"heading":"returns-4","content":"Name"},{"heading":"returns-4","content":"Type"},{"heading":"returns-4","content":"channel_types"},{"heading":"returns-4","content":"undefined | ChannelType[]"},{"heading":"returns-4","content":"default_values"},{"heading":"returns-4","content":"undefined | APISelectMenuDefaultValue<Channel>[]"},{"heading":"returns-4","content":"type"},{"heading":"returns-4","content":"ChannelSelect"},{"heading":"overrides-1","content":"AnySelectMenu.serializeOptions"}],"headings":[{"id":"extends","content":"Extends"},{"id":"constructors","content":"Constructors"},{"id":"new-channelselectmenu","content":"new ChannelSelectMenu()"},{"id":"parameters","content":"Parameters"},{"id":"returns","content":"Returns"},{"id":"inherited-from","content":"Inherited from"},{"id":"properties","content":"Properties"},{"id":"methods","content":"Methods"},{"id":"createid","content":"createId()"},{"id":"parameters-1","content":"Parameters"},{"id":"returns-1","content":"Returns"},{"id":"inherited-from-1","content":"Inherited from"},{"id":"run","content":"run()"},{"id":"parameters-2","content":"Parameters"},{"id":"returns-2","content":"Returns"},{"id":"overrides","content":"Overrides"},{"id":"serialize","content":"serialize()"},{"id":"returns-3","content":"Returns"},{"id":"inherited-from-2","content":"Inherited from"},{"id":"serializeoptions","content":"serializeOptions()"},{"id":"returns-4","content":"Returns"},{"id":"overrides-1","content":"Overrides"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/api/classes/ChannelSelectMenuInteraction.mdx","data":{"frontmatter":{"title":"ChannelSelectMenuInteraction","index":false},"toc":[{"title":"Extends","url":"#extends","depth":2},{"title":"Constructors","url":"#constructors","depth":2},{"title":"new ChannelSelectMenuInteraction()","url":"#new-channelselectmenuinteraction","depth":3},{"title":"Parameters","url":"#parameters","depth":4},{"title":"Returns","url":"#returns","depth":4},{"title":"Overrides","url":"#overrides","depth":4},{"title":"Properties","url":"#properties","depth":2},{"title":"Accessors","url":"#accessors","depth":2},{"title":"channel","url":"#channel","depth":3},{"title":"Returns","url":"#returns-1","depth":4},{"title":"Inherited from","url":"#inherited-from","depth":4},{"title":"guild","url":"#guild","depth":3},{"title":"Returns","url":"#returns-2","depth":4},{"title":"Inherited from","url":"#inherited-from-1","depth":4},{"title":"member","url":"#member","depth":3},{"title":"Returns","url":"#returns-3","depth":4},{"title":"Inherited from","url":"#inherited-from-2","depth":4},{"title":"message","url":"#message","depth":3},{"title":"Returns","url":"#returns-4","depth":4},{"title":"Inherited from","url":"#inherited-from-3","depth":4},{"title":"user","url":"#user","depth":3},{"title":"Returns","url":"#returns-5","depth":4},{"title":"Inherited from","url":"#inherited-from-4","depth":4},{"title":"values","url":"#values","depth":3},{"title":"Returns","url":"#returns-6","depth":4},{"title":"Inherited from","url":"#inherited-from-5","depth":4},{"title":"Methods","url":"#methods","depth":2},{"title":"defer()","url":"#defer","depth":3},{"title":"Returns","url":"#returns-7","depth":4},{"title":"Inherited from","url":"#inherited-from-6","depth":4},{"title":"reply()","url":"#reply","depth":3},{"title":"Parameters","url":"#parameters-1","depth":4},{"title":"Returns","url":"#returns-8","depth":4},{"title":"Inherited from","url":"#inherited-from-7","depth":4},{"title":"showModal()","url":"#showmodal","depth":3},{"title":"Parameters","url":"#parameters-2","depth":4},{"title":"Returns","url":"#returns-9","depth":4},{"title":"Inherited from","url":"#inherited-from-8","depth":4}],"structuredData":{"contents":[{"heading":"","content":"This is the base type interaction, all interaction types extend from this"},{"heading":"extends","content":"AnySelectMenuInteraction"},{"heading":"new-channelselectmenuinteraction","content":"new ChannelSelectMenuInteraction(client, data): ChannelSelectMenuInteraction"},{"heading":"parameters","content":"Parameter"},{"heading":"parameters","content":"Type"},{"heading":"parameters","content":"client"},{"heading":"parameters","content":"Client"},{"heading":"parameters","content":"data"},{"heading":"parameters","content":"APIMessageComponentSelectMenuInteraction"},{"heading":"returns","content":"ChannelSelectMenuInteraction"},{"heading":"overrides","content":"AnySelectMenuInteraction.constructor"},{"heading":"properties","content":"Property"},{"heading":"properties","content":"Type"},{"heading":"properties","content":"Default value"},{"heading":"properties","content":"Description"},{"heading":"properties","content":"Inherited from"},{"heading":"properties","content":"_deferred"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"false"},{"heading":"properties","content":"Internal Whether the interaction is deferred already"},{"heading":"properties","content":"AnySelectMenuInteraction._deferred"},{"heading":"properties","content":"client"},{"heading":"properties","content":"Client"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"AnySelectMenuInteraction.client"},{"heading":"properties","content":"componentType"},{"heading":"properties","content":"ComponentType"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"AnySelectMenuInteraction.componentType"},{"heading":"properties","content":"customId"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"AnySelectMenuInteraction.customId"},{"heading":"properties","content":"rawData"},{"heading":"properties","content":"APIMessageComponentInteraction"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The raw data of the interaction"},{"heading":"properties","content":"AnySelectMenuInteraction.rawData"},{"heading":"properties","content":"type"},{"heading":"properties","content":"InteractionType"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The type of interaction"},{"heading":"properties","content":"AnySelectMenuInteraction.type"},{"heading":"properties","content":"userId"},{"heading":"properties","content":"undefined | string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The user who sent the interaction"},{"heading":"properties","content":"AnySelectMenuInteraction.userId"},{"heading":"channel","content":"get channel(): null | DmChannel | GuildCategoryChannel | GroupDmChannel | GuildTextChannel | GuildVoiceChannel | GuildAnnouncementChannel | GuildThreadChannel<ThreadChannelType> | GuildStageChannel | GuildForumChannel | GuildMediaChannel"},{"heading":"returns-1","content":"null | DmChannel | GuildCategoryChannel | GroupDmChannel | GuildTextChannel | GuildVoiceChannel | GuildAnnouncementChannel | GuildThreadChannel<ThreadChannelType> | GuildStageChannel | GuildForumChannel | GuildMediaChannel"},{"heading":"inherited-from","content":"AnySelectMenuInteraction.channel"},{"heading":"guild","content":"get guild(): null | Guild"},{"heading":"returns-2","content":"null | Guild"},{"heading":"inherited-from-1","content":"AnySelectMenuInteraction.guild"},{"heading":"member","content":"get member(): null | GuildMember"},{"heading":"returns-3","content":"null | GuildMember"},{"heading":"inherited-from-2","content":"AnySelectMenuInteraction.member"},{"heading":"message","content":"get message(): null | Message"},{"heading":"returns-4","content":"null | Message"},{"heading":"inherited-from-3","content":"AnySelectMenuInteraction.message"},{"heading":"user","content":"get user(): null | User"},{"heading":"returns-5","content":"null | User"},{"heading":"inherited-from-4","content":"AnySelectMenuInteraction.user"},{"heading":"values","content":"get values(): string[]"},{"heading":"values","content":"The raw IDs of the selected options (either role/string/channel IDs or the IDs you provided in your options)"},{"heading":"returns-6","content":"string[]"},{"heading":"inherited-from-5","content":"AnySelectMenuInteraction.values"},{"heading":"defer","content":"defer(): Promise<void>"},{"heading":"defer","content":"Internal"},{"heading":"defer","content":"Defer the interaction response. This is used automatically by commands that are set to defer.\nIf the interaction is already deferred, this will do nothing."},{"heading":"returns-7","content":"Promise<void>"},{"heading":"inherited-from-6","content":"AnySelectMenuInteraction.defer"},{"heading":"reply","content":"reply(data, options): Promise<void>"},{"heading":"reply","content":"Reply to an interaction.\nIf the interaction is deferred, this will edit the original response."},{"heading":"parameters-1","content":"Parameter"},{"heading":"parameters-1","content":"Type"},{"heading":"parameters-1","content":"Description"},{"heading":"parameters-1","content":"data"},{"heading":"parameters-1","content":"InteractionReplyData"},{"heading":"parameters-1","content":"The response data"},{"heading":"parameters-1","content":"options"},{"heading":"parameters-1","content":"InteractionReplyOptions"},{"heading":"parameters-1","content":"-"},{"heading":"returns-8","content":"Promise<void>"},{"heading":"inherited-from-7","content":"AnySelectMenuInteraction.reply"},{"heading":"showmodal","content":"showModal(modal): Promise<void>"},{"heading":"parameters-2","content":"Parameter"},{"heading":"parameters-2","content":"Type"},{"heading":"parameters-2","content":"modal"},{"heading":"parameters-2","content":"Modal"},{"heading":"returns-9","content":"Promise<void>"},{"heading":"inherited-from-8","content":"AnySelectMenuInteraction.showModal"}],"headings":[{"id":"extends","content":"Extends"},{"id":"constructors","content":"Constructors"},{"id":"new-channelselectmenuinteraction","content":"new ChannelSelectMenuInteraction()"},{"id":"parameters","content":"Parameters"},{"id":"returns","content":"Returns"},{"id":"overrides","content":"Overrides"},{"id":"properties","content":"Properties"},{"id":"accessors","content":"Accessors"},{"id":"channel","content":"channel"},{"id":"returns-1","content":"Returns"},{"id":"inherited-from","content":"Inherited from"},{"id":"guild","content":"guild"},{"id":"returns-2","content":"Returns"},{"id":"inherited-from-1","content":"Inherited from"},{"id":"member","content":"member"},{"id":"returns-3","content":"Returns"},{"id":"inherited-from-2","content":"Inherited from"},{"id":"message","content":"message"},{"id":"returns-4","content":"Returns"},{"id":"inherited-from-3","content":"Inherited from"},{"id":"user","content":"user"},{"id":"returns-5","content":"Returns"},{"id":"inherited-from-4","content":"Inherited from"},{"id":"values","content":"values"},{"id":"returns-6","content":"Returns"},{"id":"inherited-from-5","content":"Inherited from"},{"id":"methods","content":"Methods"},{"id":"defer","content":"defer()"},{"id":"returns-7","content":"Returns"},{"id":"inherited-from-6","content":"Inherited from"},{"id":"reply","content":"reply()"},{"id":"parameters-1","content":"Parameters"},{"id":"returns-8","content":"Returns"},{"id":"inherited-from-7","content":"Inherited from"},{"id":"showmodal","content":"showModal()"},{"id":"parameters-2","content":"Parameters"},{"id":"returns-9","content":"Returns"},{"id":"inherited-from-8","content":"Inherited from"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/api/classes/Client.mdx","data":{"frontmatter":{"title":"Client","index":false},"toc":[{"title":"Constructors","url":"#constructors","depth":2},{"title":"new Client()","url":"#new-client","depth":3},{"title":"Parameters","url":"#parameters","depth":4},{"title":"Returns","url":"#returns","depth":4},{"title":"Properties","url":"#properties","depth":2},{"title":"Methods","url":"#methods","depth":2},{"title":"deployCommands()","url":"#deploycommands","depth":3},{"title":"Returns","url":"#returns-1","depth":4},{"title":"handle()","url":"#handle","depth":3},{"title":"Parameters","url":"#parameters-1","depth":4},{"title":"Returns","url":"#returns-2","depth":4}],"structuredData":{"contents":[{"heading":"","content":"The main client used to interact with Discord"},{"heading":"new-client","content":"new Client(options, commands): Client"},{"heading":"new-client","content":"Creates a new client"},{"heading":"parameters","content":"Parameter"},{"heading":"parameters","content":"Type"},{"heading":"parameters","content":"Description"},{"heading":"parameters","content":"options"},{"heading":"parameters","content":"ClientOptions"},{"heading":"parameters","content":"The options used to initialize the client"},{"heading":"parameters","content":"commands"},{"heading":"parameters","content":"BaseCommand[]"},{"heading":"parameters","content":"The commands that the client has registered"},{"heading":"returns","content":"Client"},{"heading":"properties","content":"Property"},{"heading":"properties","content":"Type"},{"heading":"properties","content":"Description"},{"heading":"properties","content":"commandHandler"},{"heading":"properties","content":"CommandHandler"},{"heading":"properties","content":"Internal The handler for the modal interactions sent from Discord"},{"heading":"properties","content":"commands"},{"heading":"properties","content":"BaseCommand[]"},{"heading":"properties","content":"The commands that the client has registered"},{"heading":"properties","content":"componentHandler"},{"heading":"properties","content":"ComponentHandler"},{"heading":"properties","content":"Internal The handler for the component interactions sent from Discord"},{"heading":"properties","content":"modalHandler"},{"heading":"properties","content":"ModalHandler"},{"heading":"properties","content":"Internal The handler for the modal interactions sent from Discord"},{"heading":"properties","content":"options"},{"heading":"properties","content":"ClientOptions"},{"heading":"properties","content":"The options used to initialize the client"},{"heading":"properties","content":"rest"},{"heading":"properties","content":"RequestClient"},{"heading":"properties","content":"The rest client used to interact with the Discord API"},{"heading":"properties","content":"router"},{"heading":"properties","content":"AutoRouterType<IRequestStrict, any[], any>"},{"heading":"properties","content":"The router used to handle requests"},{"heading":"deploycommands","content":"deployCommands(): Promise<void>"},{"heading":"deploycommands","content":"Deploy the commands registered to Discord.\nThis is automatically called when running in NodeJS mode."},{"heading":"returns-1","content":"Promise<void>"},{"heading":"handle","content":"handle(req, ctx?): Promise<Response>"},{"heading":"handle","content":"If you want use a custom handler for HTTP requests instead of Carbon's router, you can use this method."},{"heading":"parameters-1","content":"Parameter"},{"heading":"parameters-1","content":"Type"},{"heading":"parameters-1","content":"Description"},{"heading":"parameters-1","content":"req"},{"heading":"parameters-1","content":"Request"},{"heading":"parameters-1","content":"The request to handle"},{"heading":"parameters-1","content":"ctx?"},{"heading":"parameters-1","content":"ExecutionContext"},{"heading":"parameters-1","content":"Cloudflare Workers only. The execution context of the request, provided in the fetch handler from CF."},{"heading":"returns-2","content":"Promise<Response>"},{"heading":"returns-2","content":"A response to send back to the client."}],"headings":[{"id":"constructors","content":"Constructors"},{"id":"new-client","content":"new Client()"},{"id":"parameters","content":"Parameters"},{"id":"returns","content":"Returns"},{"id":"properties","content":"Properties"},{"id":"methods","content":"Methods"},{"id":"deploycommands","content":"deployCommands()"},{"id":"returns-1","content":"Returns"},{"id":"handle","content":"handle()"},{"id":"parameters-1","content":"Parameters"},{"id":"returns-2","content":"Returns"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/api/classes/Command.mdx","data":{"frontmatter":{"title":"Command","index":false},"toc":[{"title":"Extends","url":"#extends","depth":2},{"title":"Constructors","url":"#constructors","depth":2},{"title":"new Command()","url":"#new-command","depth":3},{"title":"Returns","url":"#returns","depth":4},{"title":"Inherited from","url":"#inherited-from","depth":4},{"title":"Properties","url":"#properties","depth":2},{"title":"Methods","url":"#methods","depth":2},{"title":"autocomplete()","url":"#autocomplete","depth":3},{"title":"Parameters","url":"#parameters","depth":4},{"title":"Returns","url":"#returns-1","depth":4},{"title":"Remarks","url":"#remarks","depth":4},{"title":"run()","url":"#run","depth":3},{"title":"Parameters","url":"#parameters-1","depth":4},{"title":"Returns","url":"#returns-2","depth":4},{"title":"serialize()","url":"#serialize","depth":3},{"title":"Returns","url":"#returns-3","depth":4},{"title":"Inherited from","url":"#inherited-from-1","depth":4},{"title":"serializeOptions()","url":"#serializeoptions","depth":3},{"title":"Returns","url":"#returns-4","depth":4},{"title":"Overrides","url":"#overrides","depth":4}],"structuredData":{"contents":[{"heading":"","content":"Represents a standard command that the user creates"},{"heading":"extends","content":"BaseCommand"},{"heading":"new-command","content":"new Command(): Command"},{"heading":"returns","content":"Command"},{"heading":"inherited-from","content":"BaseCommand.constructor"},{"heading":"properties","content":"Property"},{"heading":"properties","content":"Modifier"},{"heading":"properties","content":"Type"},{"heading":"properties","content":"Default value"},{"heading":"properties","content":"Description"},{"heading":"properties","content":"Overrides"},{"heading":"properties","content":"Inherited from"},{"heading":"properties","content":"contexts"},{"heading":"properties","content":"public"},{"heading":"properties","content":"InteractionContextType[]"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"Beta The contexts this command can be used in API types are not finalized"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseCommand.contexts"},{"heading":"properties","content":"defer"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"false"},{"heading":"properties","content":"Whether the command response should be automatically deferred"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseCommand.defer"},{"heading":"properties","content":"description"},{"heading":"properties","content":"abstract"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"A description of the command"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseCommand.description"},{"heading":"properties","content":"ephemeral"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"false"},{"heading":"properties","content":"Whether the command response should be ephemeral"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseCommand.ephemeral"},{"heading":"properties","content":"integrationTypes"},{"heading":"properties","content":"public"},{"heading":"properties","content":"ApplicationIntegrationType[]"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"Beta The places this command can be used in API types are not finalized"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseCommand.integrationTypes"},{"heading":"properties","content":"name"},{"heading":"properties","content":"abstract"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The name of the command (e.g. \"ping\" for /ping)"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseCommand.name"},{"heading":"properties","content":"options?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"CommandOptions"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The options that the user passes along with the command in Discord"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"type"},{"heading":"properties","content":"public"},{"heading":"properties","content":"ApplicationCommandType"},{"heading":"properties","content":"ApplicationCommandType.ChatInput"},{"heading":"properties","content":"The type of command, either ChatInput, User, or Message. User and Message are context menu commands. Default ChatInput"},{"heading":"properties","content":"BaseCommand.type"},{"heading":"properties","content":"-"},{"heading":"autocomplete","content":"autocomplete(interaction): Promise<void>"},{"heading":"autocomplete","content":"The function that is called when the command's autocomplete is triggered."},{"heading":"parameters","content":"Parameter"},{"heading":"parameters","content":"Type"},{"heading":"parameters","content":"Description"},{"heading":"parameters","content":"interaction"},{"heading":"parameters","content":"AutocompleteInteraction"},{"heading":"parameters","content":"The interaction that triggered the autocomplete"},{"heading":"returns-1","content":"Promise<void>"},{"heading":"remarks","content":"You are expected to override this function to provide your own autocomplete functionality."},{"heading":"run","content":"abstract run(interaction): Promise<void>"},{"heading":"run","content":"The function that is called when the command is ran"},{"heading":"parameters-1","content":"Parameter"},{"heading":"parameters-1","content":"Type"},{"heading":"parameters-1","content":"Description"},{"heading":"parameters-1","content":"interaction"},{"heading":"parameters-1","content":"CommandInteraction"},{"heading":"parameters-1","content":"The interaction that triggered the command"},{"heading":"returns-2","content":"Promise<void>"},{"heading":"serialize","content":"serialize(): RESTPostAPIChatInputApplicationCommandsJSONBody | RESTPostAPIContextMenuApplicationCommandsJSONBody"},{"heading":"serialize","content":"Internal"},{"heading":"serialize","content":"Serializes the command into a JSON object that can be sent to Discord"},{"heading":"returns-3","content":"RESTPostAPIChatInputApplicationCommandsJSONBody | RESTPostAPIContextMenuApplicationCommandsJSONBody"},{"heading":"inherited-from-1","content":"BaseCommand.serialize"},{"heading":"serializeoptions","content":"serializeOptions(): undefined | CommandOptions"},{"heading":"serializeoptions","content":"Internal"},{"heading":"returns-4","content":"undefined | CommandOptions"},{"heading":"overrides","content":"BaseCommand.serializeOptions"}],"headings":[{"id":"extends","content":"Extends"},{"id":"constructors","content":"Constructors"},{"id":"new-command","content":"new Command()"},{"id":"returns","content":"Returns"},{"id":"inherited-from","content":"Inherited from"},{"id":"properties","content":"Properties"},{"id":"methods","content":"Methods"},{"id":"autocomplete","content":"autocomplete()"},{"id":"parameters","content":"Parameters"},{"id":"returns-1","content":"Returns"},{"id":"remarks","content":"Remarks"},{"id":"run","content":"run()"},{"id":"parameters-1","content":"Parameters"},{"id":"returns-2","content":"Returns"},{"id":"serialize","content":"serialize()"},{"id":"returns-3","content":"Returns"},{"id":"inherited-from-1","content":"Inherited from"},{"id":"serializeoptions","content":"serializeOptions()"},{"id":"returns-4","content":"Returns"},{"id":"overrides","content":"Overrides"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/api/classes/CommandHandler.mdx","data":{"frontmatter":{"title":"CommandHandler","index":false},"toc":[{"title":"Extends","url":"#extends","depth":2},{"title":"Constructors","url":"#constructors","depth":2},{"title":"new CommandHandler()","url":"#new-commandhandler","depth":3},{"title":"Parameters","url":"#parameters","depth":4},{"title":"Returns","url":"#returns","depth":4},{"title":"Inherited from","url":"#inherited-from","depth":4},{"title":"Properties","url":"#properties","depth":2},{"title":"Methods","url":"#methods","depth":2},{"title":"handleAutocompleteInteraction()","url":"#handleautocompleteinteraction","depth":3},{"title":"Parameters","url":"#parameters-1","depth":4},{"title":"Returns","url":"#returns-1","depth":4},{"title":"handleCommandInteraction()","url":"#handlecommandinteraction","depth":3},{"title":"Parameters","url":"#parameters-2","depth":4},{"title":"Returns","url":"#returns-2","depth":4}],"structuredData":{"contents":[{"heading":"extends","content":"Base"},{"heading":"new-commandhandler","content":"new CommandHandler(client): CommandHandler"},{"heading":"parameters","content":"Parameter"},{"heading":"parameters","content":"Type"},{"heading":"parameters","content":"client"},{"heading":"parameters","content":"Client"},{"heading":"returns","content":"CommandHandler"},{"heading":"inherited-from","content":"Base.constructor"},{"heading":"properties","content":"Property"},{"heading":"properties","content":"Type"},{"heading":"properties","content":"Inherited from"},{"heading":"properties","content":"client"},{"heading":"properties","content":"Client"},{"heading":"properties","content":"Base.client"},{"heading":"handleautocompleteinteraction","content":"handleAutocompleteInteraction(rawInteraction): Promise<false | void>"},{"heading":"parameters-1","content":"Parameter"},{"heading":"parameters-1","content":"Type"},{"heading":"parameters-1","content":"rawInteraction"},{"heading":"parameters-1","content":"APIApplicationCommandAutocompleteInteraction"},{"heading":"returns-1","content":"Promise<false | void>"},{"heading":"handlecommandinteraction","content":"handleCommandInteraction(rawInteraction): Promise<false | void>"},{"heading":"handlecommandinteraction","content":"Internal"},{"heading":"handlecommandinteraction","content":"Handle a command interaction"},{"heading":"parameters-2","content":"Parameter"},{"heading":"parameters-2","content":"Type"},{"heading":"parameters-2","content":"rawInteraction"},{"heading":"parameters-2","content":"APIApplicationCommandInteraction"},{"heading":"returns-2","content":"Promise<false | void>"}],"headings":[{"id":"extends","content":"Extends"},{"id":"constructors","content":"Constructors"},{"id":"new-commandhandler","content":"new CommandHandler()"},{"id":"parameters","content":"Parameters"},{"id":"returns","content":"Returns"},{"id":"inherited-from","content":"Inherited from"},{"id":"properties","content":"Properties"},{"id":"methods","content":"Methods"},{"id":"handleautocompleteinteraction","content":"handleAutocompleteInteraction()"},{"id":"parameters-1","content":"Parameters"},{"id":"returns-1","content":"Returns"},{"id":"handlecommandinteraction","content":"handleCommandInteraction()"},{"id":"parameters-2","content":"Parameters"},{"id":"returns-2","content":"Returns"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/api/classes/CommandInteraction.mdx","data":{"frontmatter":{"title":"CommandInteraction","index":false},"toc":[{"title":"Extends","url":"#extends","depth":2},{"title":"Constructors","url":"#constructors","depth":2},{"title":"new CommandInteraction()","url":"#new-commandinteraction","depth":3},{"title":"Parameters","url":"#parameters","depth":4},{"title":"Returns","url":"#returns","depth":4},{"title":"Overrides","url":"#overrides","depth":4},{"title":"Properties","url":"#properties","depth":2},{"title":"Accessors","url":"#accessors","depth":2},{"title":"channel","url":"#channel","depth":3},{"title":"Returns","url":"#returns-1","depth":4},{"title":"Inherited from","url":"#inherited-from","depth":4},{"title":"guild","url":"#guild","depth":3},{"title":"Returns","url":"#returns-2","depth":4},{"title":"Inherited from","url":"#inherited-from-1","depth":4},{"title":"member","url":"#member","depth":3},{"title":"Returns","url":"#returns-3","depth":4},{"title":"Inherited from","url":"#inherited-from-2","depth":4},{"title":"message","url":"#message","depth":3},{"title":"Returns","url":"#returns-4","depth":4},{"title":"Inherited from","url":"#inherited-from-3","depth":4},{"title":"user","url":"#user","depth":3},{"title":"Returns","url":"#returns-5","depth":4},{"title":"Inherited from","url":"#inherited-from-4","depth":4},{"title":"Methods","url":"#methods","depth":2},{"title":"defer()","url":"#defer","depth":3},{"title":"Returns","url":"#returns-6","depth":4},{"title":"Inherited from","url":"#inherited-from-5","depth":4},{"title":"reply()","url":"#reply","depth":3},{"title":"Parameters","url":"#parameters-1","depth":4},{"title":"Returns","url":"#returns-7","depth":4},{"title":"Inherited from","url":"#inherited-from-6","depth":4},{"title":"showModal()","url":"#showmodal","depth":3},{"title":"Parameters","url":"#parameters-2","depth":4},{"title":"Returns","url":"#returns-8","depth":4},{"title":"Inherited from","url":"#inherited-from-7","depth":4}],"structuredData":{"contents":[{"heading":"","content":"Represents a command interaction"},{"heading":"extends","content":"BaseInteraction<APIApplicationCommandInteraction>"},{"heading":"new-commandinteraction","content":"new CommandInteraction(client, data, command?): CommandInteraction"},{"heading":"parameters","content":"Parameter"},{"heading":"parameters","content":"Type"},{"heading":"parameters","content":"client"},{"heading":"parameters","content":"Client"},{"heading":"parameters","content":"data"},{"heading":"parameters","content":"APIApplicationCommandInteraction"},{"heading":"parameters","content":"command?"},{"heading":"parameters","content":"BaseCommand"},{"heading":"returns","content":"CommandInteraction"},{"heading":"overrides","content":"BaseInteraction.constructor"},{"heading":"properties","content":"Property"},{"heading":"properties","content":"Type"},{"heading":"properties","content":"Default value"},{"heading":"properties","content":"Description"},{"heading":"properties","content":"Inherited from"},{"heading":"properties","content":"_deferred"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"false"},{"heading":"properties","content":"Internal Whether the interaction is deferred already"},{"heading":"properties","content":"BaseInteraction._deferred"},{"heading":"properties","content":"client"},{"heading":"properties","content":"Client"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseInteraction.client"},{"heading":"properties","content":"options?"},{"heading":"properties","content":"OptionsHandler"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"This is the options of the commands, parsed from the interaction data. It is only available if the command is a Command class, and the command is a ChatInput command."},{"heading":"properties","content":"-"},{"heading":"properties","content":"rawData"},{"heading":"properties","content":"APIApplicationCommandInteraction"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The raw data of the interaction"},{"heading":"properties","content":"BaseInteraction.rawData"},{"heading":"properties","content":"type"},{"heading":"properties","content":"InteractionType"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The type of interaction"},{"heading":"properties","content":"BaseInteraction.type"},{"heading":"properties","content":"userId"},{"heading":"properties","content":"undefined | string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The user who sent the interaction"},{"heading":"properties","content":"BaseInteraction.userId"},{"heading":"channel","content":"get channel(): null | DmChannel | GuildCategoryChannel | GroupDmChannel | GuildTextChannel | GuildVoiceChannel | GuildAnnouncementChannel | GuildThreadChannel<ThreadChannelType> | GuildStageChannel | GuildForumChannel | GuildMediaChannel"},{"heading":"returns-1","content":"null | DmChannel | GuildCategoryChannel | GroupDmChannel | GuildTextChannel | GuildVoiceChannel | GuildAnnouncementChannel | GuildThreadChannel<ThreadChannelType> | GuildStageChannel | GuildForumChannel | GuildMediaChannel"},{"heading":"inherited-from","content":"BaseInteraction.channel"},{"heading":"guild","content":"get guild(): null | Guild"},{"heading":"returns-2","content":"null | Guild"},{"heading":"inherited-from-1","content":"BaseInteraction.guild"},{"heading":"member","content":"get member(): null | GuildMember"},{"heading":"returns-3","content":"null | GuildMember"},{"heading":"inherited-from-2","content":"BaseInteraction.member"},{"heading":"message","content":"get message(): null | Message"},{"heading":"returns-4","content":"null | Message"},{"heading":"inherited-from-3","content":"BaseInteraction.message"},{"heading":"user","content":"get user(): null | User"},{"heading":"returns-5","content":"null | User"},{"heading":"inherited-from-4","content":"BaseInteraction.user"},{"heading":"defer","content":"defer(): Promise<void>"},{"heading":"defer","content":"Internal"},{"heading":"defer","content":"Defer the interaction response. This is used automatically by commands that are set to defer.\nIf the interaction is already deferred, this will do nothing."},{"heading":"returns-6","content":"Promise<void>"},{"heading":"inherited-from-5","content":"BaseInteraction.defer"},{"heading":"reply","content":"reply(data, options): Promise<void>"},{"heading":"reply","content":"Reply to an interaction.\nIf the interaction is deferred, this will edit the original response."},{"heading":"parameters-1","content":"Parameter"},{"heading":"parameters-1","content":"Type"},{"heading":"parameters-1","content":"Description"},{"heading":"parameters-1","content":"data"},{"heading":"parameters-1","content":"InteractionReplyData"},{"heading":"parameters-1","content":"The response data"},{"heading":"parameters-1","content":"options"},{"heading":"parameters-1","content":"InteractionReplyOptions"},{"heading":"parameters-1","content":"-"},{"heading":"returns-7","content":"Promise<void>"},{"heading":"inherited-from-6","content":"BaseInteraction.reply"},{"heading":"showmodal","content":"showModal(modal): Promise<void>"},{"heading":"parameters-2","content":"Parameter"},{"heading":"parameters-2","content":"Type"},{"heading":"parameters-2","content":"modal"},{"heading":"parameters-2","content":"Modal"},{"heading":"returns-8","content":"Promise<void>"},{"heading":"inherited-from-7","content":"BaseInteraction.showModal"}],"headings":[{"id":"extends","content":"Extends"},{"id":"constructors","content":"Constructors"},{"id":"new-commandinteraction","content":"new CommandInteraction()"},{"id":"parameters","content":"Parameters"},{"id":"returns","content":"Returns"},{"id":"overrides","content":"Overrides"},{"id":"properties","content":"Properties"},{"id":"accessors","content":"Accessors"},{"id":"channel","content":"channel"},{"id":"returns-1","content":"Returns"},{"id":"inherited-from","content":"Inherited from"},{"id":"guild","content":"guild"},{"id":"returns-2","content":"Returns"},{"id":"inherited-from-1","content":"Inherited from"},{"id":"member","content":"member"},{"id":"returns-3","content":"Returns"},{"id":"inherited-from-2","content":"Inherited from"},{"id":"message","content":"message"},{"id":"returns-4","content":"Returns"},{"id":"inherited-from-3","content":"Inherited from"},{"id":"user","content":"user"},{"id":"returns-5","content":"Returns"},{"id":"inherited-from-4","content":"Inherited from"},{"id":"methods","content":"Methods"},{"id":"defer","content":"defer()"},{"id":"returns-6","content":"Returns"},{"id":"inherited-from-5","content":"Inherited from"},{"id":"reply","content":"reply()"},{"id":"parameters-1","content":"Parameters"},{"id":"returns-7","content":"Returns"},{"id":"inherited-from-6","content":"Inherited from"},{"id":"showmodal","content":"showModal()"},{"id":"parameters-2","content":"Parameters"},{"id":"returns-8","content":"Returns"},{"id":"inherited-from-7","content":"Inherited from"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/api/classes/CommandWithSubcommandGroups.mdx","data":{"frontmatter":{"title":"CommandWithSubcommandGroups","index":false},"toc":[{"title":"Extends","url":"#extends","depth":2},{"title":"Constructors","url":"#constructors","depth":2},{"title":"new CommandWithSubcommandGroups()","url":"#new-commandwithsubcommandgroups","depth":3},{"title":"Returns","url":"#returns","depth":4},{"title":"Inherited from","url":"#inherited-from","depth":4},{"title":"Properties","url":"#properties","depth":2},{"title":"Methods","url":"#methods","depth":2},{"title":"serialize()","url":"#serialize","depth":3},{"title":"Returns","url":"#returns-1","depth":4},{"title":"Inherited from","url":"#inherited-from-1","depth":4},{"title":"serializeOptions()","url":"#serializeoptions","depth":3},{"title":"Returns","url":"#returns-2","depth":4},{"title":"Overrides","url":"#overrides","depth":4}],"structuredData":{"contents":[{"heading":"","content":"Represents a subcommand group command that the user creates.\nYou make this instead of a Command class when you want to have subcommand groups in your options."},{"heading":"extends","content":"CommandWithSubcommands"},{"heading":"new-commandwithsubcommandgroups","content":"new CommandWithSubcommandGroups(): CommandWithSubcommandGroups"},{"heading":"returns","content":"CommandWithSubcommandGroups"},{"heading":"inherited-from","content":"CommandWithSubcommands.constructor"},{"heading":"properties","content":"Property"},{"heading":"properties","content":"Modifier"},{"heading":"properties","content":"Type"},{"heading":"properties","content":"Default value"},{"heading":"properties","content":"Description"},{"heading":"properties","content":"Overrides"},{"heading":"properties","content":"Inherited from"},{"heading":"properties","content":"contexts"},{"heading":"properties","content":"public"},{"heading":"properties","content":"InteractionContextType[]"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"Beta The contexts this command can be used in API types are not finalized"},{"heading":"properties","content":"-"},{"heading":"properties","content":"CommandWithSubcommands.contexts"},{"heading":"properties","content":"defer"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"false"},{"heading":"properties","content":"Whether the command response should be automatically deferred"},{"heading":"properties","content":"-"},{"heading":"properties","content":"CommandWithSubcommands.defer"},{"heading":"properties","content":"description"},{"heading":"properties","content":"abstract"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"A description of the command"},{"heading":"properties","content":"-"},{"heading":"properties","content":"CommandWithSubcommands.description"},{"heading":"properties","content":"ephemeral"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"false"},{"heading":"properties","content":"Whether the command response should be ephemeral"},{"heading":"properties","content":"-"},{"heading":"properties","content":"CommandWithSubcommands.ephemeral"},{"heading":"properties","content":"integrationTypes"},{"heading":"properties","content":"public"},{"heading":"properties","content":"ApplicationIntegrationType[]"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"Beta The places this command can be used in API types are not finalized"},{"heading":"properties","content":"-"},{"heading":"properties","content":"CommandWithSubcommands.integrationTypes"},{"heading":"properties","content":"name"},{"heading":"properties","content":"abstract"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The name of the command (e.g. \"ping\" for /ping)"},{"heading":"properties","content":"-"},{"heading":"properties","content":"CommandWithSubcommands.name"},{"heading":"properties","content":"subcommandGroups"},{"heading":"properties","content":"abstract"},{"heading":"properties","content":"CommandWithSubcommands[]"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The subcommands that the user can use"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"subcommands"},{"heading":"properties","content":"public"},{"heading":"properties","content":"Command[]"},{"heading":"properties","content":"[]"},{"heading":"properties","content":"The subcommands that the user can use"},{"heading":"properties","content":"CommandWithSubcommands.subcommands"},{"heading":"properties","content":"-"},{"heading":"properties","content":"type"},{"heading":"properties","content":"public"},{"heading":"properties","content":"ApplicationCommandType"},{"heading":"properties","content":"ApplicationCommandType.ChatInput"},{"heading":"properties","content":"The type of the command"},{"heading":"properties","content":"-"},{"heading":"properties","content":"CommandWithSubcommands.type"},{"heading":"serialize","content":"serialize(): RESTPostAPIChatInputApplicationCommandsJSONBody | RESTPostAPIContextMenuApplicationCommandsJSONBody"},{"heading":"serialize","content":"Internal"},{"heading":"serialize","content":"Serializes the command into a JSON object that can be sent to Discord"},{"heading":"returns-1","content":"RESTPostAPIChatInputApplicationCommandsJSONBody | RESTPostAPIContextMenuApplicationCommandsJSONBody"},{"heading":"inherited-from-1","content":"CommandWithSubcommands.serialize"},{"heading":"serializeoptions","content":"serializeOptions(): (APIApplicationCommandSubcommandGroupOption | APIApplicationCommandSubcommandOption)[]"},{"heading":"serializeoptions","content":"Internal"},{"heading":"returns-2","content":"(APIApplicationCommandSubcommandGroupOption | APIApplicationCommandSubcommandOption)[]"},{"heading":"overrides","content":"CommandWithSubcommands.serializeOptions"}],"headings":[{"id":"extends","content":"Extends"},{"id":"constructors","content":"Constructors"},{"id":"new-commandwithsubcommandgroups","content":"new CommandWithSubcommandGroups()"},{"id":"returns","content":"Returns"},{"id":"inherited-from","content":"Inherited from"},{"id":"properties","content":"Properties"},{"id":"methods","content":"Methods"},{"id":"serialize","content":"serialize()"},{"id":"returns-1","content":"Returns"},{"id":"inherited-from-1","content":"Inherited from"},{"id":"serializeoptions","content":"serializeOptions()"},{"id":"returns-2","content":"Returns"},{"id":"overrides","content":"Overrides"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/api/classes/CommandWithSubcommands.mdx","data":{"frontmatter":{"title":"CommandWithSubcommands","index":false},"toc":[{"title":"Extends","url":"#extends","depth":2},{"title":"Extended by","url":"#extended-by","depth":2},{"title":"Constructors","url":"#constructors","depth":2},{"title":"new CommandWithSubcommands()","url":"#new-commandwithsubcommands","depth":3},{"title":"Returns","url":"#returns","depth":4},{"title":"Inherited from","url":"#inherited-from","depth":4},{"title":"Properties","url":"#properties","depth":2},{"title":"Methods","url":"#methods","depth":2},{"title":"serialize()","url":"#serialize","depth":3},{"title":"Returns","url":"#returns-1","depth":4},{"title":"Inherited from","url":"#inherited-from-1","depth":4},{"title":"serializeOptions()","url":"#serializeoptions","depth":3},{"title":"Returns","url":"#returns-2","depth":4},{"title":"Overrides","url":"#overrides","depth":4}],"structuredData":{"contents":[{"heading":"","content":"Represents a subcommand command that the user creates.\nYou make this instead of a Command class when you want to have subcommands in your options."},{"heading":"extends","content":"BaseCommand"},{"heading":"extended-by","content":"CommandWithSubcommandGroups"},{"heading":"new-commandwithsubcommands","content":"new CommandWithSubcommands(): CommandWithSubcommands"},{"heading":"returns","content":"CommandWithSubcommands"},{"heading":"inherited-from","content":"BaseCommand.constructor"},{"heading":"properties","content":"Property"},{"heading":"properties","content":"Modifier"},{"heading":"properties","content":"Type"},{"heading":"properties","content":"Default value"},{"heading":"properties","content":"Description"},{"heading":"properties","content":"Overrides"},{"heading":"properties","content":"Inherited from"},{"heading":"properties","content":"contexts"},{"heading":"properties","content":"public"},{"heading":"properties","content":"InteractionContextType[]"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"Beta The contexts this command can be used in API types are not finalized"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseCommand.contexts"},{"heading":"properties","content":"defer"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"false"},{"heading":"properties","content":"Whether the command response should be automatically deferred"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseCommand.defer"},{"heading":"properties","content":"description"},{"heading":"properties","content":"abstract"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"A description of the command"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseCommand.description"},{"heading":"properties","content":"ephemeral"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"false"},{"heading":"properties","content":"Whether the command response should be ephemeral"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseCommand.ephemeral"},{"heading":"properties","content":"integrationTypes"},{"heading":"properties","content":"public"},{"heading":"properties","content":"ApplicationIntegrationType[]"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"Beta The places this command can be used in API types are not finalized"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseCommand.integrationTypes"},{"heading":"properties","content":"name"},{"heading":"properties","content":"abstract"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The name of the command (e.g. \"ping\" for /ping)"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseCommand.name"},{"heading":"properties","content":"subcommands"},{"heading":"properties","content":"abstract"},{"heading":"properties","content":"Command[]"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The subcommands that the user can use"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"type"},{"heading":"properties","content":"public"},{"heading":"properties","content":"ApplicationCommandType"},{"heading":"properties","content":"ApplicationCommandType.ChatInput"},{"heading":"properties","content":"The type of the command"},{"heading":"properties","content":"BaseCommand.type"},{"heading":"properties","content":"-"},{"heading":"serialize","content":"serialize(): RESTPostAPIChatInputApplicationCommandsJSONBody | RESTPostAPIContextMenuApplicationCommandsJSONBody"},{"heading":"serialize","content":"Internal"},{"heading":"serialize","content":"Serializes the command into a JSON object that can be sent to Discord"},{"heading":"returns-1","content":"RESTPostAPIChatInputApplicationCommandsJSONBody | RESTPostAPIContextMenuApplicationCommandsJSONBody"},{"heading":"inherited-from-1","content":"BaseCommand.serialize"},{"heading":"serializeoptions","content":"serializeOptions(): AddUndefinedToPossiblyUndefinedPropertiesOfInterface<undefined | APIApplicationCommandOption[]>"},{"heading":"serializeoptions","content":"Internal"},{"heading":"returns-2","content":"AddUndefinedToPossiblyUndefinedPropertiesOfInterface<undefined | APIApplicationCommandOption[]>"},{"heading":"overrides","content":"BaseCommand.serializeOptions"}],"headings":[{"id":"extends","content":"Extends"},{"id":"extended-by","content":"Extended by"},{"id":"constructors","content":"Constructors"},{"id":"new-commandwithsubcommands","content":"new CommandWithSubcommands()"},{"id":"returns","content":"Returns"},{"id":"inherited-from","content":"Inherited from"},{"id":"properties","content":"Properties"},{"id":"methods","content":"Methods"},{"id":"serialize","content":"serialize()"},{"id":"returns-1","content":"Returns"},{"id":"inherited-from-1","content":"Inherited from"},{"id":"serializeoptions","content":"serializeOptions()"},{"id":"returns-2","content":"Returns"},{"id":"overrides","content":"Overrides"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/api/classes/ComponentHandler.mdx","data":{"frontmatter":{"title":"ComponentHandler","index":false},"toc":[{"title":"Extends","url":"#extends","depth":2},{"title":"Constructors","url":"#constructors","depth":2},{"title":"new ComponentHandler()","url":"#new-componenthandler","depth":3},{"title":"Parameters","url":"#parameters","depth":4},{"title":"Returns","url":"#returns","depth":4},{"title":"Inherited from","url":"#inherited-from","depth":4},{"title":"Properties","url":"#properties","depth":2},{"title":"Methods","url":"#methods","depth":2},{"title":"handleInteraction()","url":"#handleinteraction","depth":3},{"title":"Parameters","url":"#parameters-1","depth":4},{"title":"Returns","url":"#returns-1","depth":4},{"title":"registerComponent()","url":"#registercomponent","depth":3},{"title":"Parameters","url":"#parameters-2","depth":4},{"title":"Returns","url":"#returns-2","depth":4}],"structuredData":{"contents":[{"heading":"extends","content":"Base"},{"heading":"new-componenthandler","content":"new ComponentHandler(client): ComponentHandler"},{"heading":"parameters","content":"Parameter"},{"heading":"parameters","content":"Type"},{"heading":"parameters","content":"client"},{"heading":"parameters","content":"Client"},{"heading":"returns","content":"ComponentHandler"},{"heading":"inherited-from","content":"Base.constructor"},{"heading":"properties","content":"Property"},{"heading":"properties","content":"Type"},{"heading":"properties","content":"Default value"},{"heading":"properties","content":"Inherited from"},{"heading":"properties","content":"client"},{"heading":"properties","content":"Client"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"Base.client"},{"heading":"properties","content":"components"},{"heading":"properties","content":"BaseComponent[]"},{"heading":"properties","content":"[]"},{"heading":"properties","content":"-"},{"heading":"handleinteraction","content":"handleInteraction(data): Promise<undefined | false>"},{"heading":"handleinteraction","content":"Internal"},{"heading":"handleinteraction","content":"Handle an interaction"},{"heading":"parameters-1","content":"Parameter"},{"heading":"parameters-1","content":"Type"},{"heading":"parameters-1","content":"data"},{"heading":"parameters-1","content":"APIMessageComponentInteraction"},{"heading":"returns-1","content":"Promise<undefined | false>"},{"heading":"registercomponent","content":"registerComponent(component): void"},{"heading":"registercomponent","content":"Internal"},{"heading":"registercomponent","content":"Register a component with the handler"},{"heading":"parameters-2","content":"Parameter"},{"heading":"parameters-2","content":"Type"},{"heading":"parameters-2","content":"component"},{"heading":"parameters-2","content":"BaseComponent"},{"heading":"returns-2","content":"void"}],"headings":[{"id":"extends","content":"Extends"},{"id":"constructors","content":"Constructors"},{"id":"new-componenthandler","content":"new ComponentHandler()"},{"id":"parameters","content":"Parameters"},{"id":"returns","content":"Returns"},{"id":"inherited-from","content":"Inherited from"},{"id":"properties","content":"Properties"},{"id":"methods","content":"Methods"},{"id":"handleinteraction","content":"handleInteraction()"},{"id":"parameters-1","content":"Parameters"},{"id":"returns-1","content":"Returns"},{"id":"registercomponent","content":"registerComponent()"},{"id":"parameters-2","content":"Parameters"},{"id":"returns-2","content":"Returns"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/api/classes/DmChannel.mdx","data":{"frontmatter":{"title":"DmChannel","index":false},"toc":[{"title":"Extends","url":"#extends","depth":2},{"title":"Constructors","url":"#constructors","depth":2},{"title":"new DmChannel()","url":"#new-dmchannel","depth":3},{"title":"Parameters","url":"#parameters","depth":4},{"title":"Returns","url":"#returns","depth":4},{"title":"Inherited from","url":"#inherited-from","depth":4},{"title":"Properties","url":"#properties","depth":2},{"title":"Methods","url":"#methods","depth":2},{"title":"fetch()","url":"#fetch","depth":3},{"title":"Returns","url":"#returns-1","depth":4},{"title":"Inherited from","url":"#inherited-from-1","depth":4},{"title":"send()","url":"#send","depth":3},{"title":"Parameters","url":"#parameters-1","depth":4},{"title":"Returns","url":"#returns-2","depth":4},{"title":"setData()","url":"#setdata","depth":3},{"title":"Parameters","url":"#parameters-2","depth":4},{"title":"Returns","url":"#returns-3","depth":4},{"title":"Inherited from","url":"#inherited-from-2","depth":4},{"title":"setSpecificData()","url":"#setspecificdata","depth":3},{"title":"Parameters","url":"#parameters-3","depth":4},{"title":"Returns","url":"#returns-4","depth":4},{"title":"Overrides","url":"#overrides","depth":4}],"structuredData":{"contents":[{"heading":"","content":"Represents a DM between two users."},{"heading":"extends","content":"BaseChannel<ChannelType.DM>"},{"heading":"new-dmchannel","content":"new DmChannel(client, rawDataOrId): DmChannel"},{"heading":"parameters","content":"Parameter"},{"heading":"parameters","content":"Type"},{"heading":"parameters","content":"client"},{"heading":"parameters","content":"Client"},{"heading":"parameters","content":"rawDataOrId"},{"heading":"parameters","content":"string | APIDMChannel"},{"heading":"returns","content":"DmChannel"},{"heading":"inherited-from","content":"BaseChannel.constructor"},{"heading":"properties","content":"Property"},{"heading":"properties","content":"Modifier"},{"heading":"properties","content":"Type"},{"heading":"properties","content":"Default value"},{"heading":"properties","content":"Description"},{"heading":"properties","content":"Overrides"},{"heading":"properties","content":"Inherited from"},{"heading":"properties","content":"client"},{"heading":"properties","content":"public"},{"heading":"properties","content":"Client"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseChannel.client"},{"heading":"properties","content":"flags?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | number"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The flags of the channel in a bitfield. See https://discord.com/developers/docs/resources/channel#channel-object-channel-flags"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseChannel.flags"},{"heading":"properties","content":"id"},{"heading":"properties","content":"public"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The id of the channel."},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseChannel.id"},{"heading":"properties","content":"name?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null"},{"heading":"properties","content":"null"},{"heading":"properties","content":"The name of the channel. This is always null for DM channels."},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"partial"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"Whether the channel is a partial channel (meaning it does not have all the data). If this is true, you should use BaseChannel.fetch to get the full data of the channel."},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseChannel.partial"},{"heading":"properties","content":"rawData"},{"heading":"properties","content":"protected"},{"heading":"properties","content":"null | APIDMChannel"},{"heading":"properties","content":"null"},{"heading":"properties","content":"The raw data of the channel."},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseChannel.rawData"},{"heading":"properties","content":"type"},{"heading":"properties","content":"public"},{"heading":"properties","content":"DM"},{"heading":"properties","content":"ChannelType.DM"},{"heading":"properties","content":"The type of the channel."},{"heading":"properties","content":"BaseChannel.type"},{"heading":"properties","content":"-"},{"heading":"fetch","content":"fetch(): Promise<void>"},{"heading":"fetch","content":"Fetches the channel from the API."},{"heading":"returns-1","content":"Promise<void>"},{"heading":"returns-1","content":"The channel data."},{"heading":"inherited-from-1","content":"BaseChannel.fetch"},{"heading":"send","content":"send(message): Promise<void>"},{"heading":"send","content":"Send a message to the channel"},{"heading":"parameters-1","content":"Parameter"},{"heading":"parameters-1","content":"Type"},{"heading":"parameters-1","content":"message"},{"heading":"parameters-1","content":"APIMessage"},{"heading":"returns-2","content":"Promise<void>"},{"heading":"setdata","content":"protected setData(data): void"},{"heading":"parameters-2","content":"Parameter"},{"heading":"parameters-2","content":"Type"},{"heading":"parameters-2","content":"data"},{"heading":"parameters-2","content":"APIDMChannel"},{"heading":"returns-3","content":"void"},{"heading":"inherited-from-2","content":"BaseChannel.setData"},{"heading":"setspecificdata","content":"protected setSpecificData(data): void"},{"heading":"parameters-3","content":"Parameter"},{"heading":"parameters-3","content":"Type"},{"heading":"parameters-3","content":"data"},{"heading":"parameters-3","content":"APIDMChannel"},{"heading":"returns-4","content":"void"},{"heading":"overrides","content":"BaseChannel.setSpecificData"}],"headings":[{"id":"extends","content":"Extends"},{"id":"constructors","content":"Constructors"},{"id":"new-dmchannel","content":"new DmChannel()"},{"id":"parameters","content":"Parameters"},{"id":"returns","content":"Returns"},{"id":"inherited-from","content":"Inherited from"},{"id":"properties","content":"Properties"},{"id":"methods","content":"Methods"},{"id":"fetch","content":"fetch()"},{"id":"returns-1","content":"Returns"},{"id":"inherited-from-1","content":"Inherited from"},{"id":"send","content":"send()"},{"id":"parameters-1","content":"Parameters"},{"id":"returns-2","content":"Returns"},{"id":"setdata","content":"setData()"},{"id":"parameters-2","content":"Parameters"},{"id":"returns-3","content":"Returns"},{"id":"inherited-from-2","content":"Inherited from"},{"id":"setspecificdata","content":"setSpecificData()"},{"id":"parameters-3","content":"Parameters"},{"id":"returns-4","content":"Returns"},{"id":"overrides","content":"Overrides"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/api/classes/GroupDmChannel.mdx","data":{"frontmatter":{"title":"GroupDmChannel","index":false},"toc":[{"title":"Extends","url":"#extends","depth":2},{"title":"Constructors","url":"#constructors","depth":2},{"title":"new GroupDmChannel()","url":"#new-groupdmchannel","depth":3},{"title":"Parameters","url":"#parameters","depth":4},{"title":"Returns","url":"#returns","depth":4},{"title":"Inherited from","url":"#inherited-from","depth":4},{"title":"Properties","url":"#properties","depth":2},{"title":"Accessors","url":"#accessors","depth":2},{"title":"iconUrl","url":"#iconurl","depth":3},{"title":"Returns","url":"#returns-1","depth":4},{"title":"lastMessage","url":"#lastmessage","depth":3},{"title":"Remarks","url":"#remarks","depth":4},{"title":"Returns","url":"#returns-2","depth":4},{"title":"owner","url":"#owner","depth":3},{"title":"Returns","url":"#returns-3","depth":4},{"title":"Methods","url":"#methods","depth":2},{"title":"addRecipient()","url":"#addrecipient","depth":3},{"title":"Parameters","url":"#parameters-1","depth":4},{"title":"Returns","url":"#returns-4","depth":4},{"title":"fetch()","url":"#fetch","depth":3},{"title":"Returns","url":"#returns-5","depth":4},{"title":"Inherited from","url":"#inherited-from-1","depth":4},{"title":"removeRecipient()","url":"#removerecipient","depth":3},{"title":"Parameters","url":"#parameters-2","depth":4},{"title":"Returns","url":"#returns-6","depth":4},{"title":"setData()","url":"#setdata","depth":3},{"title":"Parameters","url":"#parameters-3","depth":4},{"title":"Returns","url":"#returns-7","depth":4},{"title":"Inherited from","url":"#inherited-from-2","depth":4},{"title":"setName()","url":"#setname","depth":3},{"title":"Parameters","url":"#parameters-4","depth":4},{"title":"Returns","url":"#returns-8","depth":4},{"title":"setSpecificData()","url":"#setspecificdata","depth":3},{"title":"Parameters","url":"#parameters-5","depth":4},{"title":"Returns","url":"#returns-9","depth":4},{"title":"Overrides","url":"#overrides","depth":4}],"structuredData":{"contents":[{"heading":"","content":"Represents a group DM channel."},{"heading":"extends","content":"BaseChannel<ChannelType.GroupDM>"},{"heading":"new-groupdmchannel","content":"new GroupDmChannel(client, rawDataOrId): GroupDmChannel"},{"heading":"parameters","content":"Parameter"},{"heading":"parameters","content":"Type"},{"heading":"parameters","content":"client"},{"heading":"parameters","content":"Client"},{"heading":"parameters","content":"rawDataOrId"},{"heading":"parameters","content":"string | APIGroupDMChannel"},{"heading":"returns","content":"GroupDmChannel"},{"heading":"inherited-from","content":"BaseChannel.constructor"},{"heading":"properties","content":"Property"},{"heading":"properties","content":"Modifier"},{"heading":"properties","content":"Type"},{"heading":"properties","content":"Default value"},{"heading":"properties","content":"Description"},{"heading":"properties","content":"Overrides"},{"heading":"properties","content":"Inherited from"},{"heading":"properties","content":"applicationId?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The ID of the application that created the channel, if it was created by a bot."},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"client"},{"heading":"properties","content":"public"},{"heading":"properties","content":"Client"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseChannel.client"},{"heading":"properties","content":"flags?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | number"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The flags of the channel in a bitfield. See https://discord.com/developers/docs/resources/channel#channel-object-channel-flags"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseChannel.flags"},{"heading":"properties","content":"icon?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The icon hash of the channel."},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"id"},{"heading":"properties","content":"public"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The id of the channel."},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseChannel.id"},{"heading":"properties","content":"lastMessageId?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The ID of the last message sent in the channel. Remarks This might not always resolve to a message. The ID still stays a part of the channel's data, even if the message is deleted."},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"managed?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | boolean"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"Whether the channel is managed by an Oauth2 application."},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"name?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The name of the channel."},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"ownerId?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The ID of the user who created the channel."},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"partial"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"Whether the channel is a partial channel (meaning it does not have all the data). If this is true, you should use BaseChannel.fetch to get the full data of the channel."},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseChannel.partial"},{"heading":"properties","content":"rawData"},{"heading":"properties","content":"protected"},{"heading":"properties","content":"null | APIGroupDMChannel"},{"heading":"properties","content":"null"},{"heading":"properties","content":"The raw data of the channel."},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseChannel.rawData"},{"heading":"properties","content":"recipients?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"User[]"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The recipients of the channel."},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"type"},{"heading":"properties","content":"public"},{"heading":"properties","content":"GroupDM"},{"heading":"properties","content":"ChannelType.GroupDM"},{"heading":"properties","content":"The type of the channel."},{"heading":"properties","content":"BaseChannel.type"},{"heading":"properties","content":"-"},{"heading":"iconurl","content":"get iconUrl(): null | string"},{"heading":"iconurl","content":"Get the URL of the channel's icon."},{"heading":"returns-1","content":"null | string"},{"heading":"lastmessage","content":"get lastMessage(): null | Message"},{"heading":"lastmessage","content":"The last message sent in the channel."},{"heading":"remarks","content":"This might not always resolve to a message. The ID still stays a part of the channel's data, even if the message is deleted.\nThis will always return a partial message, so you can use Message.fetch to get the full message data."},{"heading":"returns-2","content":"null | Message"},{"heading":"owner","content":"get owner(): User"},{"heading":"owner","content":"Get the owner of the channel."},{"heading":"returns-3","content":"User"},{"heading":"addrecipient","content":"addRecipient(user): Promise<void>"},{"heading":"parameters-1","content":"Parameter"},{"heading":"parameters-1","content":"Type"},{"heading":"parameters-1","content":"user"},{"heading":"parameters-1","content":"string | User"},{"heading":"returns-4","content":"Promise<void>"},{"heading":"fetch","content":"fetch(): Promise<void>"},{"heading":"fetch","content":"Fetches the channel from the API."},{"heading":"returns-5","content":"Promise<void>"},{"heading":"returns-5","content":"The channel data."},{"heading":"inherited-from-1","content":"BaseChannel.fetch"},{"heading":"removerecipient","content":"removeRecipient(user): Promise<void>"},{"heading":"parameters-2","content":"Parameter"},{"heading":"parameters-2","content":"Type"},{"heading":"parameters-2","content":"user"},{"heading":"parameters-2","content":"string | User"},{"heading":"returns-6","content":"Promise<void>"},{"heading":"setdata","content":"protected setData(data): void"},{"heading":"parameters-3","content":"Parameter"},{"heading":"parameters-3","content":"Type"},{"heading":"parameters-3","content":"data"},{"heading":"parameters-3","content":"APIGroupDMChannel"},{"heading":"returns-7","content":"void"},{"heading":"inherited-from-2","content":"BaseChannel.setData"},{"heading":"setname","content":"setName(name): Promise<void>"},{"heading":"setname","content":"Set the name of the channel"},{"heading":"parameters-4","content":"Parameter"},{"heading":"parameters-4","content":"Type"},{"heading":"parameters-4","content":"Description"},{"heading":"parameters-4","content":"name"},{"heading":"parameters-4","content":"string"},{"heading":"parameters-4","content":"The new name of the channel"},{"heading":"returns-8","content":"Promise<void>"},{"heading":"setspecificdata","content":"protected setSpecificData(data): void"},{"heading":"parameters-5","content":"Parameter"},{"heading":"parameters-5","content":"Type"},{"heading":"parameters-5","content":"data"},{"heading":"parameters-5","content":"APIGroupDMChannel"},{"heading":"returns-9","content":"void"},{"heading":"overrides","content":"BaseChannel.setSpecificData"}],"headings":[{"id":"extends","content":"Extends"},{"id":"constructors","content":"Constructors"},{"id":"new-groupdmchannel","content":"new GroupDmChannel()"},{"id":"parameters","content":"Parameters"},{"id":"returns","content":"Returns"},{"id":"inherited-from","content":"Inherited from"},{"id":"properties","content":"Properties"},{"id":"accessors","content":"Accessors"},{"id":"iconurl","content":"iconUrl"},{"id":"returns-1","content":"Returns"},{"id":"lastmessage","content":"lastMessage"},{"id":"remarks","content":"Remarks"},{"id":"returns-2","content":"Returns"},{"id":"owner","content":"owner"},{"id":"returns-3","content":"Returns"},{"id":"methods","content":"Methods"},{"id":"addrecipient","content":"addRecipient()"},{"id":"parameters-1","content":"Parameters"},{"id":"returns-4","content":"Returns"},{"id":"fetch","content":"fetch()"},{"id":"returns-5","content":"Returns"},{"id":"inherited-from-1","content":"Inherited from"},{"id":"removerecipient","content":"removeRecipient()"},{"id":"parameters-2","content":"Parameters"},{"id":"returns-6","content":"Returns"},{"id":"setdata","content":"setData()"},{"id":"parameters-3","content":"Parameters"},{"id":"returns-7","content":"Returns"},{"id":"inherited-from-2","content":"Inherited from"},{"id":"setname","content":"setName()"},{"id":"parameters-4","content":"Parameters"},{"id":"returns-8","content":"Returns"},{"id":"setspecificdata","content":"setSpecificData()"},{"id":"parameters-5","content":"Parameters"},{"id":"returns-9","content":"Returns"},{"id":"overrides","content":"Overrides"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/api/classes/Guild.mdx","data":{"frontmatter":{"title":"Guild","index":false},"toc":[{"title":"Extends","url":"#extends","depth":2},{"title":"Constructors","url":"#constructors","depth":2},{"title":"new Guild()","url":"#new-guild","depth":3},{"title":"Parameters","url":"#parameters","depth":4},{"title":"Returns","url":"#returns","depth":4},{"title":"Overrides","url":"#overrides","depth":4},{"title":"Properties","url":"#properties","depth":2},{"title":"Accessors","url":"#accessors","depth":2},{"title":"iconUrl","url":"#iconurl","depth":3},{"title":"Returns","url":"#returns-1","depth":4},{"title":"roles","url":"#roles","depth":3},{"title":"Returns","url":"#returns-2","depth":4},{"title":"splashUrl","url":"#splashurl","depth":3},{"title":"Returns","url":"#returns-3","depth":4},{"title":"Methods","url":"#methods","depth":2},{"title":"createRole()","url":"#createrole","depth":3},{"title":"Parameters","url":"#parameters-1","depth":4},{"title":"Returns","url":"#returns-4","depth":4},{"title":"fetch()","url":"#fetch","depth":3},{"title":"Returns","url":"#returns-5","depth":4},{"title":"fetchChannel()","url":"#fetchchannel","depth":3},{"title":"Parameters","url":"#parameters-2","depth":4},{"title":"Returns","url":"#returns-6","depth":4},{"title":"fetchMember()","url":"#fetchmember","depth":3},{"title":"Parameters","url":"#parameters-3","depth":4},{"title":"Returns","url":"#returns-7","depth":4},{"title":"leave()","url":"#leave","depth":3},{"title":"Returns","url":"#returns-8","depth":4}],"structuredData":{"contents":[{"heading":"extends","content":"Base"},{"heading":"new-guild","content":"new Guild(client, rawDataOrId): Guild"},{"heading":"parameters","content":"Parameter"},{"heading":"parameters","content":"Type"},{"heading":"parameters","content":"client"},{"heading":"parameters","content":"Client"},{"heading":"parameters","content":"rawDataOrId"},{"heading":"parameters","content":"string | APIGuild"},{"heading":"returns","content":"Guild"},{"heading":"overrides","content":"Base.constructor"},{"heading":"properties","content":"Property"},{"heading":"properties","content":"Type"},{"heading":"properties","content":"Description"},{"heading":"properties","content":"Inherited from"},{"heading":"properties","content":"client"},{"heading":"properties","content":"Client"},{"heading":"properties","content":"-"},{"heading":"properties","content":"Base.client"},{"heading":"properties","content":"description?"},{"heading":"properties","content":"null | string"},{"heading":"properties","content":"The description of the guild."},{"heading":"properties","content":"-"},{"heading":"properties","content":"icon?"},{"heading":"properties","content":"null | string"},{"heading":"properties","content":"The icon hash of the guild. You can use Guild.iconUrl to get the URL of the icon."},{"heading":"properties","content":"-"},{"heading":"properties","content":"id"},{"heading":"properties","content":"string"},{"heading":"properties","content":"The ID of the guild"},{"heading":"properties","content":"-"},{"heading":"properties","content":"name?"},{"heading":"properties","content":"string"},{"heading":"properties","content":"The name of the guild."},{"heading":"properties","content":"-"},{"heading":"properties","content":"ownerId?"},{"heading":"properties","content":"string"},{"heading":"properties","content":"The ID of the owner of the guild."},{"heading":"properties","content":"-"},{"heading":"properties","content":"partial"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"Whether the guild is a partial guild (meaning it does not have all the data). If this is true, you should use Guild.fetch to get the full data of the guild."},{"heading":"properties","content":"-"},{"heading":"properties","content":"splash?"},{"heading":"properties","content":"null | string"},{"heading":"properties","content":"The splash hash of the guild. You can use Guild.splashUrl to get the URL of the splash."},{"heading":"properties","content":"-"},{"heading":"iconurl","content":"get iconUrl(): null | string"},{"heading":"iconurl","content":"Get the URL of the guild's icon"},{"heading":"returns-1","content":"null | string"},{"heading":"roles","content":"get roles(): Role[]"},{"heading":"roles","content":"Get all roles in the guild"},{"heading":"returns-2","content":"Role[]"},{"heading":"splashurl","content":"get splashUrl(): null | string"},{"heading":"splashurl","content":"Get the URL of the guild's splash"},{"heading":"returns-3","content":"null | string"},{"heading":"createrole","content":"createRole(data): Promise<Role>"},{"heading":"createrole","content":"Create a role in the guild"},{"heading":"parameters-1","content":"Parameter"},{"heading":"parameters-1","content":"Type"},{"heading":"parameters-1","content":"data"},{"heading":"parameters-1","content":"RESTPostAPIGuildRoleJSONBody"},{"heading":"returns-4","content":"Promise<Role>"},{"heading":"fetch","content":"fetch(): Promise<void>"},{"heading":"fetch","content":"Fetch updated data for this guild.\nIf the guild is partial, this will fetch all the data for the guild and populate the fields.\nIf the guild is not partial, all fields will be updated with new values from Discord."},{"heading":"returns-5","content":"Promise<void>"},{"heading":"fetchchannel","content":"fetchChannel(channelId): Promise<null | DmChannel | GuildCategoryChannel | GroupDmChannel | GuildTextChannel | GuildVoiceChannel | GuildAnnouncementChannel | GuildThreadChannel<ThreadChannelType> | GuildStageChannel | GuildForumChannel | GuildMediaChannel>"},{"heading":"fetchchannel","content":"Fetch a channel from the guild by ID"},{"heading":"parameters-2","content":"Parameter"},{"heading":"parameters-2","content":"Type"},{"heading":"parameters-2","content":"channelId"},{"heading":"parameters-2","content":"string"},{"heading":"returns-6","content":"Promise<null | DmChannel | GuildCategoryChannel | GroupDmChannel | GuildTextChannel | GuildVoiceChannel | GuildAnnouncementChannel | GuildThreadChannel<ThreadChannelType> | GuildStageChannel | GuildForumChannel | GuildMediaChannel>"},{"heading":"fetchmember","content":"fetchMember(memberId): Promise<GuildMember>"},{"heading":"fetchmember","content":"Get a member in the guild by ID"},{"heading":"parameters-3","content":"Parameter"},{"heading":"parameters-3","content":"Type"},{"heading":"parameters-3","content":"memberId"},{"heading":"parameters-3","content":"string"},{"heading":"returns-7","content":"Promise<GuildMember>"},{"heading":"leave","content":"leave(): Promise<unknown>"},{"heading":"leave","content":"Leave the guild"},{"heading":"returns-8","content":"Promise<unknown>"}],"headings":[{"id":"extends","content":"Extends"},{"id":"constructors","content":"Constructors"},{"id":"new-guild","content":"new Guild()"},{"id":"parameters","content":"Parameters"},{"id":"returns","content":"Returns"},{"id":"overrides","content":"Overrides"},{"id":"properties","content":"Properties"},{"id":"accessors","content":"Accessors"},{"id":"iconurl","content":"iconUrl"},{"id":"returns-1","content":"Returns"},{"id":"roles","content":"roles"},{"id":"returns-2","content":"Returns"},{"id":"splashurl","content":"splashUrl"},{"id":"returns-3","content":"Returns"},{"id":"methods","content":"Methods"},{"id":"createrole","content":"createRole()"},{"id":"parameters-1","content":"Parameters"},{"id":"returns-4","content":"Returns"},{"id":"fetch","content":"fetch()"},{"id":"returns-5","content":"Returns"},{"id":"fetchchannel","content":"fetchChannel()"},{"id":"parameters-2","content":"Parameters"},{"id":"returns-6","content":"Returns"},{"id":"fetchmember","content":"fetchMember()"},{"id":"parameters-3","content":"Parameters"},{"id":"returns-7","content":"Returns"},{"id":"leave","content":"leave()"},{"id":"returns-8","content":"Returns"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/api/classes/GuildAnnouncementChannel.mdx","data":{"frontmatter":{"title":"GuildAnnouncementChannel","index":false},"toc":[{"title":"Extends","url":"#extends","depth":2},{"title":"Constructors","url":"#constructors","depth":2},{"title":"new GuildAnnouncementChannel()","url":"#new-guildannouncementchannel","depth":3},{"title":"Parameters","url":"#parameters","depth":4},{"title":"Returns","url":"#returns","depth":4},{"title":"Inherited from","url":"#inherited-from","depth":4},{"title":"Properties","url":"#properties","depth":2},{"title":"Accessors","url":"#accessors","depth":2},{"title":"guild","url":"#guild","depth":3},{"title":"Returns","url":"#returns-1","depth":4},{"title":"Inherited from","url":"#inherited-from-1","depth":4},{"title":"lastMessage","url":"#lastmessage","depth":3},{"title":"Remarks","url":"#remarks","depth":4},{"title":"Returns","url":"#returns-2","depth":4},{"title":"Inherited from","url":"#inherited-from-2","depth":4},{"title":"Methods","url":"#methods","depth":2},{"title":"createInvite()","url":"#createinvite","depth":3},{"title":"Parameters","url":"#parameters-1","depth":4},{"title":"Returns","url":"#returns-3","depth":4},{"title":"Inherited from","url":"#inherited-from-3","depth":4},{"title":"fetch()","url":"#fetch","depth":3},{"title":"Returns","url":"#returns-4","depth":4},{"title":"Inherited from","url":"#inherited-from-4","depth":4},{"title":"follow()","url":"#follow","depth":3},{"title":"Parameters","url":"#parameters-2","depth":4},{"title":"Returns","url":"#returns-5","depth":4},{"title":"getInvites()","url":"#getinvites","depth":3},{"title":"Returns","url":"#returns-6","depth":4},{"title":"Inherited from","url":"#inherited-from-5","depth":4},{"title":"getPinnedMessages()","url":"#getpinnedmessages","depth":3},{"title":"Returns","url":"#returns-7","depth":4},{"title":"Inherited from","url":"#inherited-from-6","depth":4},{"title":"send()","url":"#send","depth":3},{"title":"Parameters","url":"#parameters-3","depth":4},{"title":"Returns","url":"#returns-8","depth":4},{"title":"Inherited from","url":"#inherited-from-7","depth":4},{"title":"setData()","url":"#setdata","depth":3},{"title":"Parameters","url":"#parameters-4","depth":4},{"title":"Returns","url":"#returns-9","depth":4},{"title":"Inherited from","url":"#inherited-from-8","depth":4},{"title":"setMoreSpecificData()","url":"#setmorespecificdata","depth":3},{"title":"Returns","url":"#returns-10","depth":4},{"title":"Overrides","url":"#overrides","depth":4},{"title":"setName()","url":"#setname","depth":3},{"title":"Parameters","url":"#parameters-5","depth":4},{"title":"Returns","url":"#returns-11","depth":4},{"title":"Inherited from","url":"#inherited-from-9","depth":4},{"title":"setNsfw()","url":"#setnsfw","depth":3},{"title":"Parameters","url":"#parameters-6","depth":4},{"title":"Returns","url":"#returns-12","depth":4},{"title":"Inherited from","url":"#inherited-from-10","depth":4},{"title":"setParent()","url":"#setparent","depth":3},{"title":"Parameters","url":"#parameters-7","depth":4},{"title":"Returns","url":"#returns-13","depth":4},{"title":"Inherited from","url":"#inherited-from-11","depth":4},{"title":"setPosition()","url":"#setposition","depth":3},{"title":"Parameters","url":"#parameters-8","depth":4},{"title":"Returns","url":"#returns-14","depth":4},{"title":"Inherited from","url":"#inherited-from-12","depth":4},{"title":"setSpecificData()","url":"#setspecificdata","depth":3},{"title":"Parameters","url":"#parameters-9","depth":4},{"title":"Returns","url":"#returns-15","depth":4},{"title":"Inherited from","url":"#inherited-from-13","depth":4},{"title":"startThread()","url":"#startthread","depth":3},{"title":"Parameters","url":"#parameters-10","depth":4},{"title":"Returns","url":"#returns-16","depth":4},{"title":"Inherited from","url":"#inherited-from-14","depth":4},{"title":"triggerTyping()","url":"#triggertyping","depth":3},{"title":"Returns","url":"#returns-17","depth":4},{"title":"Inherited from","url":"#inherited-from-15","depth":4}],"structuredData":{"contents":[{"heading":"","content":"Represents a guild announcement channel."},{"heading":"extends","content":"BaseGuildTextChannel<ChannelType.GuildAnnouncement>"},{"heading":"new-guildannouncementchannel","content":"new GuildAnnouncementChannel(client, rawDataOrId): GuildAnnouncementChannel"},{"heading":"parameters","content":"Parameter"},{"heading":"parameters","content":"Type"},{"heading":"parameters","content":"client"},{"heading":"parameters","content":"Client"},{"heading":"parameters","content":"rawDataOrId"},{"heading":"parameters","content":"string | APINewsChannel"},{"heading":"returns","content":"GuildAnnouncementChannel"},{"heading":"inherited-from","content":"BaseGuildTextChannel.constructor"},{"heading":"properties","content":"Property"},{"heading":"properties","content":"Modifier"},{"heading":"properties","content":"Type"},{"heading":"properties","content":"Default value"},{"heading":"properties","content":"Description"},{"heading":"properties","content":"Overrides"},{"heading":"properties","content":"Inherited from"},{"heading":"properties","content":"client"},{"heading":"properties","content":"public"},{"heading":"properties","content":"Client"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseGuildTextChannel.client"},{"heading":"properties","content":"flags?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | number"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The flags of the channel in a bitfield. See https://discord.com/developers/docs/resources/channel#channel-object-channel-flags"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseGuildTextChannel.flags"},{"heading":"properties","content":"guildId?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The ID of the guild this channel is in"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseGuildTextChannel.guildId"},{"heading":"properties","content":"id"},{"heading":"properties","content":"public"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The id of the channel."},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseGuildTextChannel.id"},{"heading":"properties","content":"lastMessageId?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The ID of the last message sent in the channel. Remarks This might not always resolve to a message. The ID still stays a part of the channel's data, even if the message is deleted."},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseGuildTextChannel.lastMessageId"},{"heading":"properties","content":"lastPinTimestamp?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The timestamp of the last pin in the channel."},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseGuildTextChannel.lastPinTimestamp"},{"heading":"properties","content":"name?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The name of the channel."},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseGuildTextChannel.name"},{"heading":"properties","content":"nsfw?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"Whether the channel is marked as nsfw."},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseGuildTextChannel.nsfw"},{"heading":"properties","content":"parentId?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The ID of the parent category for the channel."},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseGuildTextChannel.parentId"},{"heading":"properties","content":"partial"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"Whether the channel is a partial channel (meaning it does not have all the data). If this is true, you should use BaseChannel.fetch to get the full data of the channel."},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseGuildTextChannel.partial"},{"heading":"properties","content":"position?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"number"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The position of the channel in the channel list."},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseGuildTextChannel.position"},{"heading":"properties","content":"rateLimitPerUser?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | number"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The rate limit per user for the channel, in seconds."},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseGuildTextChannel.rateLimitPerUser"},{"heading":"properties","content":"rawData"},{"heading":"properties","content":"protected"},{"heading":"properties","content":"null | APINewsChannel"},{"heading":"properties","content":"null"},{"heading":"properties","content":"The raw data of the channel."},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseGuildTextChannel.rawData"},{"heading":"properties","content":"type"},{"heading":"properties","content":"public"},{"heading":"properties","content":"GuildAnnouncement"},{"heading":"properties","content":"ChannelType.GuildAnnouncement"},{"heading":"properties","content":"The type of the channel."},{"heading":"properties","content":"BaseGuildTextChannel.type"},{"heading":"properties","content":"-"},{"heading":"guild","content":"get guild(): Guild"},{"heading":"guild","content":"The guild this channel is in"},{"heading":"returns-1","content":"Guild"},{"heading":"inherited-from-1","content":"BaseGuildTextChannel.guild"},{"heading":"lastmessage","content":"get lastMessage(): null | Message"},{"heading":"lastmessage","content":"The last message sent in the channel."},{"heading":"remarks","content":"This might not always resolve to a message. The ID still stays a part of the channel's data, even if the message is deleted.\nThis will always return a partial message, so you can use Message.fetch to get the full message data."},{"heading":"returns-2","content":"null | Message"},{"heading":"inherited-from-2","content":"BaseGuildTextChannel.lastMessage"},{"heading":"createinvite","content":"createInvite(options?): Promise<APIExtendedInvite>"},{"heading":"createinvite","content":"Create an invite for the channel"},{"heading":"parameters-1","content":"Parameter"},{"heading":"parameters-1","content":"Type"},{"heading":"parameters-1","content":"options?"},{"heading":"parameters-1","content":"RESTPostAPIChannelInviteJSONBody"},{"heading":"returns-3","content":"Promise<APIExtendedInvite>"},{"heading":"inherited-from-3","content":"BaseGuildTextChannel.createInvite"},{"heading":"fetch","content":"fetch(): Promise<void>"},{"heading":"fetch","content":"Fetches the channel from the API."},{"heading":"returns-4","content":"Promise<void>"},{"heading":"returns-4","content":"The channel data."},{"heading":"inherited-from-4","content":"BaseGuildTextChannel.fetch"},{"heading":"follow","content":"follow(targetChannel): Promise<void>"},{"heading":"parameters-2","content":"Parameter"},{"heading":"parameters-2","content":"Type"},{"heading":"parameters-2","content":"targetChannel"},{"heading":"parameters-2","content":"string | GuildTextChannel"},{"heading":"returns-5","content":"Promise<void>"},{"heading":"getinvites","content":"getInvites(): Promise<RESTGetAPIGuildInvitesResult>"},{"heading":"getinvites","content":"Get the invites for the channel"},{"heading":"returns-6","content":"Promise<RESTGetAPIGuildInvitesResult>"},{"heading":"inherited-from-5","content":"BaseGuildTextChannel.getInvites"},{"heading":"getpinnedmessages","content":"getPinnedMessages(): Promise<Message[]>"},{"heading":"getpinnedmessages","content":"Get the pinned messages in the channel"},{"heading":"returns-7","content":"Promise<Message[]>"},{"heading":"inherited-from-6","content":"BaseGuildTextChannel.getPinnedMessages"},{"heading":"send","content":"send(message): Promise<void>"},{"heading":"send","content":"Send a message to the channel"},{"heading":"parameters-3","content":"Parameter"},{"heading":"parameters-3","content":"Type"},{"heading":"parameters-3","content":"message"},{"heading":"parameters-3","content":"APIMessage"},{"heading":"returns-8","content":"Promise<void>"},{"heading":"inherited-from-7","content":"BaseGuildTextChannel.send"},{"heading":"setdata","content":"protected setData(data): void"},{"heading":"parameters-4","content":"Parameter"},{"heading":"parameters-4","content":"Type"},{"heading":"parameters-4","content":"data"},{"heading":"parameters-4","content":"APIGuildChannel<GuildAnnouncement>"},{"heading":"returns-9","content":"void"},{"heading":"inherited-from-8","content":"BaseGuildTextChannel.setData"},{"heading":"setmorespecificdata","content":"protected setMoreSpecificData(): void"},{"heading":"returns-10","content":"void"},{"heading":"overrides","content":"BaseGuildTextChannel.setMoreSpecificData"},{"heading":"setname","content":"setName(name): Promise<void>"},{"heading":"setname","content":"Set the name of the channel"},{"heading":"parameters-5","content":"Parameter"},{"heading":"parameters-5","content":"Type"},{"heading":"parameters-5","content":"Description"},{"heading":"parameters-5","content":"name"},{"heading":"parameters-5","content":"string"},{"heading":"parameters-5","content":"The new name of the channel"},{"heading":"returns-11","content":"Promise<void>"},{"heading":"inherited-from-9","content":"BaseGuildTextChannel.setName"},{"heading":"setnsfw","content":"setNsfw(nsfw): Promise<void>"},{"heading":"setnsfw","content":"Set whether the channel is nsfw"},{"heading":"parameters-6","content":"Parameter"},{"heading":"parameters-6","content":"Type"},{"heading":"parameters-6","content":"Description"},{"heading":"parameters-6","content":"nsfw"},{"heading":"parameters-6","content":"boolean"},{"heading":"parameters-6","content":"The new nsfw status of the channel"},{"heading":"returns-12","content":"Promise<void>"},{"heading":"inherited-from-10","content":"BaseGuildTextChannel.setNsfw"},{"heading":"setparent","content":"setParent(parent): Promise<void>"},{"heading":"setparent","content":"Set the parent ID of the channel"},{"heading":"parameters-7","content":"Parameter"},{"heading":"parameters-7","content":"Type"},{"heading":"parameters-7","content":"Description"},{"heading":"parameters-7","content":"parent"},{"heading":"parameters-7","content":"string | GuildCategoryChannel"},{"heading":"parameters-7","content":"The new category channel or ID to set"},{"heading":"returns-13","content":"Promise<void>"},{"heading":"inherited-from-11","content":"BaseGuildTextChannel.setParent"},{"heading":"setposition","content":"setPosition(position): Promise<void>"},{"heading":"setposition","content":"Set the position of the channel"},{"heading":"parameters-8","content":"Parameter"},{"heading":"parameters-8","content":"Type"},{"heading":"parameters-8","content":"Description"},{"heading":"parameters-8","content":"position"},{"heading":"parameters-8","content":"number"},{"heading":"parameters-8","content":"The new position of the channel"},{"heading":"returns-14","content":"Promise<void>"},{"heading":"inherited-from-12","content":"BaseGuildTextChannel.setPosition"},{"heading":"setspecificdata","content":"protected setSpecificData(data): void"},{"heading":"parameters-9","content":"Parameter"},{"heading":"parameters-9","content":"Type"},{"heading":"parameters-9","content":"data"},{"heading":"parameters-9","content":"APIGuildTextChannel<GuildAnnouncement>"},{"heading":"returns-15","content":"void"},{"heading":"inherited-from-13","content":"BaseGuildTextChannel.setSpecificData"},{"heading":"startthread","content":"startThread(data): Promise<GuildThreadChannel<ThreadChannelType>>"},{"heading":"startthread","content":"Start a thread without an associated start message.\nIf you want to start a thread with a start message, use Message.startThread"},{"heading":"parameters-10","content":"Parameter"},{"heading":"parameters-10","content":"Type"},{"heading":"parameters-10","content":"data"},{"heading":"parameters-10","content":"RESTPostAPIChannelThreadsJSONBody"},{"heading":"returns-16","content":"Promise<GuildThreadChannel<ThreadChannelType>>"},{"heading":"inherited-from-14","content":"BaseGuildTextChannel.startThread"},{"heading":"triggertyping","content":"triggerTyping(): Promise<void>"},{"heading":"triggertyping","content":"Trigger a typing indicator in the channel (this will expire after 10 seconds)"},{"heading":"returns-17","content":"Promise<void>"},{"heading":"inherited-from-15","content":"BaseGuildTextChannel.triggerTyping"}],"headings":[{"id":"extends","content":"Extends"},{"id":"constructors","content":"Constructors"},{"id":"new-guildannouncementchannel","content":"new GuildAnnouncementChannel()"},{"id":"parameters","content":"Parameters"},{"id":"returns","content":"Returns"},{"id":"inherited-from","content":"Inherited from"},{"id":"properties","content":"Properties"},{"id":"accessors","content":"Accessors"},{"id":"guild","content":"guild"},{"id":"returns-1","content":"Returns"},{"id":"inherited-from-1","content":"Inherited from"},{"id":"lastmessage","content":"lastMessage"},{"id":"remarks","content":"Remarks"},{"id":"returns-2","content":"Returns"},{"id":"inherited-from-2","content":"Inherited from"},{"id":"methods","content":"Methods"},{"id":"createinvite","content":"createInvite()"},{"id":"parameters-1","content":"Parameters"},{"id":"returns-3","content":"Returns"},{"id":"inherited-from-3","content":"Inherited from"},{"id":"fetch","content":"fetch()"},{"id":"returns-4","content":"Returns"},{"id":"inherited-from-4","content":"Inherited from"},{"id":"follow","content":"follow()"},{"id":"parameters-2","content":"Parameters"},{"id":"returns-5","content":"Returns"},{"id":"getinvites","content":"getInvites()"},{"id":"returns-6","content":"Returns"},{"id":"inherited-from-5","content":"Inherited from"},{"id":"getpinnedmessages","content":"getPinnedMessages()"},{"id":"returns-7","content":"Returns"},{"id":"inherited-from-6","content":"Inherited from"},{"id":"send","content":"send()"},{"id":"parameters-3","content":"Parameters"},{"id":"returns-8","content":"Returns"},{"id":"inherited-from-7","content":"Inherited from"},{"id":"setdata","content":"setData()"},{"id":"parameters-4","content":"Parameters"},{"id":"returns-9","content":"Returns"},{"id":"inherited-from-8","content":"Inherited from"},{"id":"setmorespecificdata","content":"setMoreSpecificData()"},{"id":"returns-10","content":"Returns"},{"id":"overrides","content":"Overrides"},{"id":"setname","content":"setName()"},{"id":"parameters-5","content":"Parameters"},{"id":"returns-11","content":"Returns"},{"id":"inherited-from-9","content":"Inherited from"},{"id":"setnsfw","content":"setNsfw()"},{"id":"parameters-6","content":"Parameters"},{"id":"returns-12","content":"Returns"},{"id":"inherited-from-10","content":"Inherited from"},{"id":"setparent","content":"setParent()"},{"id":"parameters-7","content":"Parameters"},{"id":"returns-13","content":"Returns"},{"id":"inherited-from-11","content":"Inherited from"},{"id":"setposition","content":"setPosition()"},{"id":"parameters-8","content":"Parameters"},{"id":"returns-14","content":"Returns"},{"id":"inherited-from-12","content":"Inherited from"},{"id":"setspecificdata","content":"setSpecificData()"},{"id":"parameters-9","content":"Parameters"},{"id":"returns-15","content":"Returns"},{"id":"inherited-from-13","content":"Inherited from"},{"id":"startthread","content":"startThread()"},{"id":"parameters-10","content":"Parameters"},{"id":"returns-16","content":"Returns"},{"id":"inherited-from-14","content":"Inherited from"},{"id":"triggertyping","content":"triggerTyping()"},{"id":"returns-17","content":"Returns"},{"id":"inherited-from-15","content":"Inherited from"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/api/classes/GuildCategoryChannel.mdx","data":{"frontmatter":{"title":"GuildCategoryChannel","index":false},"toc":[{"title":"Extends","url":"#extends","depth":2},{"title":"Constructors","url":"#constructors","depth":2},{"title":"new GuildCategoryChannel()","url":"#new-guildcategorychannel","depth":3},{"title":"Parameters","url":"#parameters","depth":4},{"title":"Returns","url":"#returns","depth":4},{"title":"Inherited from","url":"#inherited-from","depth":4},{"title":"Properties","url":"#properties","depth":2},{"title":"Accessors","url":"#accessors","depth":2},{"title":"guild","url":"#guild","depth":3},{"title":"Returns","url":"#returns-1","depth":4},{"title":"Inherited from","url":"#inherited-from-1","depth":4},{"title":"Methods","url":"#methods","depth":2},{"title":"createInvite()","url":"#createinvite","depth":3},{"title":"Parameters","url":"#parameters-1","depth":4},{"title":"Returns","url":"#returns-2","depth":4},{"title":"Inherited from","url":"#inherited-from-2","depth":4},{"title":"fetch()","url":"#fetch","depth":3},{"title":"Returns","url":"#returns-3","depth":4},{"title":"Inherited from","url":"#inherited-from-3","depth":4},{"title":"getInvites()","url":"#getinvites","depth":3},{"title":"Returns","url":"#returns-4","depth":4},{"title":"Inherited from","url":"#inherited-from-4","depth":4},{"title":"send()","url":"#send","depth":3},{"title":"Returns","url":"#returns-5","depth":4},{"title":"Overrides","url":"#overrides","depth":4},{"title":"setData()","url":"#setdata","depth":3},{"title":"Parameters","url":"#parameters-2","depth":4},{"title":"Returns","url":"#returns-6","depth":4},{"title":"Inherited from","url":"#inherited-from-5","depth":4},{"title":"setName()","url":"#setname","depth":3},{"title":"Parameters","url":"#parameters-3","depth":4},{"title":"Returns","url":"#returns-7","depth":4},{"title":"Inherited from","url":"#inherited-from-6","depth":4},{"title":"setNsfw()","url":"#setnsfw","depth":3},{"title":"Parameters","url":"#parameters-4","depth":4},{"title":"Returns","url":"#returns-8","depth":4},{"title":"Inherited from","url":"#inherited-from-7","depth":4},{"title":"setParent()","url":"#setparent","depth":3},{"title":"Parameters","url":"#parameters-5","depth":4},{"title":"Returns","url":"#returns-9","depth":4},{"title":"Inherited from","url":"#inherited-from-8","depth":4},{"title":"setPosition()","url":"#setposition","depth":3},{"title":"Parameters","url":"#parameters-6","depth":4},{"title":"Returns","url":"#returns-10","depth":4},{"title":"Inherited from","url":"#inherited-from-9","depth":4},{"title":"setSpecificData()","url":"#setspecificdata","depth":3},{"title":"Returns","url":"#returns-11","depth":4},{"title":"Overrides","url":"#overrides-1","depth":4},{"title":"triggerTyping()","url":"#triggertyping","depth":3},{"title":"Returns","url":"#returns-12","depth":4},{"title":"Inherited from","url":"#inherited-from-10","depth":4}],"structuredData":{"contents":[{"heading":"","content":"Represents a guild category channel."},{"heading":"extends","content":"BaseGuildChannel<ChannelType.GuildCategory>"},{"heading":"new-guildcategorychannel","content":"new GuildCategoryChannel(client, rawDataOrId): GuildCategoryChannel"},{"heading":"parameters","content":"Parameter"},{"heading":"parameters","content":"Type"},{"heading":"parameters","content":"client"},{"heading":"parameters","content":"Client"},{"heading":"parameters","content":"rawDataOrId"},{"heading":"parameters","content":"string | APIGuildCategoryChannel"},{"heading":"returns","content":"GuildCategoryChannel"},{"heading":"inherited-from","content":"BaseGuildChannel.constructor"},{"heading":"properties","content":"Property"},{"heading":"properties","content":"Modifier"},{"heading":"properties","content":"Type"},{"heading":"properties","content":"Default value"},{"heading":"properties","content":"Description"},{"heading":"properties","content":"Inherited from"},{"heading":"properties","content":"client"},{"heading":"properties","content":"public"},{"heading":"properties","content":"Client"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseGuildChannel.client"},{"heading":"properties","content":"flags?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | number"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The flags of the channel in a bitfield. See https://discord.com/developers/docs/resources/channel#channel-object-channel-flags"},{"heading":"properties","content":"BaseGuildChannel.flags"},{"heading":"properties","content":"guildId?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The ID of the guild this channel is in"},{"heading":"properties","content":"BaseGuildChannel.guildId"},{"heading":"properties","content":"id"},{"heading":"properties","content":"public"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The id of the channel."},{"heading":"properties","content":"BaseGuildChannel.id"},{"heading":"properties","content":"name?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The name of the channel."},{"heading":"properties","content":"BaseGuildChannel.name"},{"heading":"properties","content":"nsfw?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"Whether the channel is marked as nsfw."},{"heading":"properties","content":"BaseGuildChannel.nsfw"},{"heading":"properties","content":"parentId?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The ID of the parent category for the channel."},{"heading":"properties","content":"BaseGuildChannel.parentId"},{"heading":"properties","content":"partial"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"Whether the channel is a partial channel (meaning it does not have all the data). If this is true, you should use BaseChannel.fetch to get the full data of the channel."},{"heading":"properties","content":"BaseGuildChannel.partial"},{"heading":"properties","content":"position?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"number"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The position of the channel in the channel list."},{"heading":"properties","content":"BaseGuildChannel.position"},{"heading":"properties","content":"rawData"},{"heading":"properties","content":"protected"},{"heading":"properties","content":"null | APIGuildCategoryChannel"},{"heading":"properties","content":"null"},{"heading":"properties","content":"The raw data of the channel."},{"heading":"properties","content":"BaseGuildChannel.rawData"},{"heading":"properties","content":"type?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"GuildCategory"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The type of the channel."},{"heading":"properties","content":"BaseGuildChannel.type"},{"heading":"guild","content":"get guild(): Guild"},{"heading":"guild","content":"The guild this channel is in"},{"heading":"returns-1","content":"Guild"},{"heading":"inherited-from-1","content":"BaseGuildChannel.guild"},{"heading":"createinvite","content":"createInvite(options?): Promise<APIExtendedInvite>"},{"heading":"createinvite","content":"Create an invite for the channel"},{"heading":"parameters-1","content":"Parameter"},{"heading":"parameters-1","content":"Type"},{"heading":"parameters-1","content":"options?"},{"heading":"parameters-1","content":"RESTPostAPIChannelInviteJSONBody"},{"heading":"returns-2","content":"Promise<APIExtendedInvite>"},{"heading":"inherited-from-2","content":"BaseGuildChannel.createInvite"},{"heading":"fetch","content":"fetch(): Promise<void>"},{"heading":"fetch","content":"Fetches the channel from the API."},{"heading":"returns-3","content":"Promise<void>"},{"heading":"returns-3","content":"The channel data."},{"heading":"inherited-from-3","content":"BaseGuildChannel.fetch"},{"heading":"getinvites","content":"getInvites(): Promise<RESTGetAPIGuildInvitesResult>"},{"heading":"getinvites","content":"Get the invites for the channel"},{"heading":"returns-4","content":"Promise<RESTGetAPIGuildInvitesResult>"},{"heading":"inherited-from-4","content":"BaseGuildChannel.getInvites"},{"heading":"send","content":"send(): Promise<void>"},{"heading":"send","content":"You cannot send a message to a category channel, so this method throws an error"},{"heading":"returns-5","content":"Promise<void>"},{"heading":"overrides","content":"BaseGuildChannel.send"},{"heading":"setdata","content":"protected setData(data): void"},{"heading":"parameters-2","content":"Parameter"},{"heading":"parameters-2","content":"Type"},{"heading":"parameters-2","content":"data"},{"heading":"parameters-2","content":"APIGuildChannel<GuildCategory>"},{"heading":"returns-6","content":"void"},{"heading":"inherited-from-5","content":"BaseGuildChannel.setData"},{"heading":"setname","content":"setName(name): Promise<void>"},{"heading":"setname","content":"Set the name of the channel"},{"heading":"parameters-3","content":"Parameter"},{"heading":"parameters-3","content":"Type"},{"heading":"parameters-3","content":"Description"},{"heading":"parameters-3","content":"name"},{"heading":"parameters-3","content":"string"},{"heading":"parameters-3","content":"The new name of the channel"},{"heading":"returns-7","content":"Promise<void>"},{"heading":"inherited-from-6","content":"BaseGuildChannel.setName"},{"heading":"setnsfw","content":"setNsfw(nsfw): Promise<void>"},{"heading":"setnsfw","content":"Set whether the channel is nsfw"},{"heading":"parameters-4","content":"Parameter"},{"heading":"parameters-4","content":"Type"},{"heading":"parameters-4","content":"Description"},{"heading":"parameters-4","content":"nsfw"},{"heading":"parameters-4","content":"boolean"},{"heading":"parameters-4","content":"The new nsfw status of the channel"},{"heading":"returns-8","content":"Promise<void>"},{"heading":"inherited-from-7","content":"BaseGuildChannel.setNsfw"},{"heading":"setparent","content":"setParent(parent): Promise<void>"},{"heading":"setparent","content":"Set the parent ID of the channel"},{"heading":"parameters-5","content":"Parameter"},{"heading":"parameters-5","content":"Type"},{"heading":"parameters-5","content":"Description"},{"heading":"parameters-5","content":"parent"},{"heading":"parameters-5","content":"string | GuildCategoryChannel"},{"heading":"parameters-5","content":"The new category channel or ID to set"},{"heading":"returns-9","content":"Promise<void>"},{"heading":"inherited-from-8","content":"BaseGuildChannel.setParent"},{"heading":"setposition","content":"setPosition(position): Promise<void>"},{"heading":"setposition","content":"Set the position of the channel"},{"heading":"parameters-6","content":"Parameter"},{"heading":"parameters-6","content":"Type"},{"heading":"parameters-6","content":"Description"},{"heading":"parameters-6","content":"position"},{"heading":"parameters-6","content":"number"},{"heading":"parameters-6","content":"The new position of the channel"},{"heading":"returns-10","content":"Promise<void>"},{"heading":"inherited-from-9","content":"BaseGuildChannel.setPosition"},{"heading":"setspecificdata","content":"protected setSpecificData(): void"},{"heading":"returns-11","content":"void"},{"heading":"overrides-1","content":"BaseGuildChannel.setSpecificData"},{"heading":"triggertyping","content":"triggerTyping(): Promise<void>"},{"heading":"triggertyping","content":"Trigger a typing indicator in the channel (this will expire after 10 seconds)"},{"heading":"returns-12","content":"Promise<void>"},{"heading":"inherited-from-10","content":"BaseGuildChannel.triggerTyping"}],"headings":[{"id":"extends","content":"Extends"},{"id":"constructors","content":"Constructors"},{"id":"new-guildcategorychannel","content":"new GuildCategoryChannel()"},{"id":"parameters","content":"Parameters"},{"id":"returns","content":"Returns"},{"id":"inherited-from","content":"Inherited from"},{"id":"properties","content":"Properties"},{"id":"accessors","content":"Accessors"},{"id":"guild","content":"guild"},{"id":"returns-1","content":"Returns"},{"id":"inherited-from-1","content":"Inherited from"},{"id":"methods","content":"Methods"},{"id":"createinvite","content":"createInvite()"},{"id":"parameters-1","content":"Parameters"},{"id":"returns-2","content":"Returns"},{"id":"inherited-from-2","content":"Inherited from"},{"id":"fetch","content":"fetch()"},{"id":"returns-3","content":"Returns"},{"id":"inherited-from-3","content":"Inherited from"},{"id":"getinvites","content":"getInvites()"},{"id":"returns-4","content":"Returns"},{"id":"inherited-from-4","content":"Inherited from"},{"id":"send","content":"send()"},{"id":"returns-5","content":"Returns"},{"id":"overrides","content":"Overrides"},{"id":"setdata","content":"setData()"},{"id":"parameters-2","content":"Parameters"},{"id":"returns-6","content":"Returns"},{"id":"inherited-from-5","content":"Inherited from"},{"id":"setname","content":"setName()"},{"id":"parameters-3","content":"Parameters"},{"id":"returns-7","content":"Returns"},{"id":"inherited-from-6","content":"Inherited from"},{"id":"setnsfw","content":"setNsfw()"},{"id":"parameters-4","content":"Parameters"},{"id":"returns-8","content":"Returns"},{"id":"inherited-from-7","content":"Inherited from"},{"id":"setparent","content":"setParent()"},{"id":"parameters-5","content":"Parameters"},{"id":"returns-9","content":"Returns"},{"id":"inherited-from-8","content":"Inherited from"},{"id":"setposition","content":"setPosition()"},{"id":"parameters-6","content":"Parameters"},{"id":"returns-10","content":"Returns"},{"id":"inherited-from-9","content":"Inherited from"},{"id":"setspecificdata","content":"setSpecificData()"},{"id":"returns-11","content":"Returns"},{"id":"overrides-1","content":"Overrides"},{"id":"triggertyping","content":"triggerTyping()"},{"id":"returns-12","content":"Returns"},{"id":"inherited-from-10","content":"Inherited from"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/api/classes/GuildForumChannel.mdx","data":{"frontmatter":{"title":"GuildForumChannel","index":false},"toc":[{"title":"Extends","url":"#extends","depth":2},{"title":"Constructors","url":"#constructors","depth":2},{"title":"new GuildForumChannel()","url":"#new-guildforumchannel","depth":3},{"title":"Parameters","url":"#parameters","depth":4},{"title":"Returns","url":"#returns","depth":4},{"title":"Inherited from","url":"#inherited-from","depth":4},{"title":"Properties","url":"#properties","depth":2},{"title":"Accessors","url":"#accessors","depth":2},{"title":"guild","url":"#guild","depth":3},{"title":"Returns","url":"#returns-1","depth":4},{"title":"Inherited from","url":"#inherited-from-1","depth":4},{"title":"Methods","url":"#methods","depth":2},{"title":"createInvite()","url":"#createinvite","depth":3},{"title":"Parameters","url":"#parameters-1","depth":4},{"title":"Returns","url":"#returns-2","depth":4},{"title":"Inherited from","url":"#inherited-from-2","depth":4},{"title":"fetch()","url":"#fetch","depth":3},{"title":"Returns","url":"#returns-3","depth":4},{"title":"Inherited from","url":"#inherited-from-3","depth":4},{"title":"getInvites()","url":"#getinvites","depth":3},{"title":"Returns","url":"#returns-4","depth":4},{"title":"Inherited from","url":"#inherited-from-4","depth":4},{"title":"send()","url":"#send","depth":3},{"title":"Returns","url":"#returns-5","depth":4},{"title":"Inherited from","url":"#inherited-from-5","depth":4},{"title":"sendToPost()","url":"#sendtopost","depth":3},{"title":"Parameters","url":"#parameters-2","depth":4},{"title":"Returns","url":"#returns-6","depth":4},{"title":"Remarks","url":"#remarks","depth":4},{"title":"Inherited from","url":"#inherited-from-6","depth":4},{"title":"setData()","url":"#setdata","depth":3},{"title":"Parameters","url":"#parameters-3","depth":4},{"title":"Returns","url":"#returns-7","depth":4},{"title":"Inherited from","url":"#inherited-from-7","depth":4},{"title":"setMoreSpecificData()","url":"#setmorespecificdata","depth":3},{"title":"Parameters","url":"#parameters-4","depth":4},{"title":"Returns","url":"#returns-8","depth":4},{"title":"Overrides","url":"#overrides","depth":4},{"title":"setName()","url":"#setname","depth":3},{"title":"Parameters","url":"#parameters-5","depth":4},{"title":"Returns","url":"#returns-9","depth":4},{"title":"Inherited from","url":"#inherited-from-8","depth":4},{"title":"setNsfw()","url":"#setnsfw","depth":3},{"title":"Parameters","url":"#parameters-6","depth":4},{"title":"Returns","url":"#returns-10","depth":4},{"title":"Inherited from","url":"#inherited-from-9","depth":4},{"title":"setParent()","url":"#setparent","depth":3},{"title":"Parameters","url":"#parameters-7","depth":4},{"title":"Returns","url":"#returns-11","depth":4},{"title":"Inherited from","url":"#inherited-from-10","depth":4},{"title":"setPosition()","url":"#setposition","depth":3},{"title":"Parameters","url":"#parameters-8","depth":4},{"title":"Returns","url":"#returns-12","depth":4},{"title":"Inherited from","url":"#inherited-from-11","depth":4},{"title":"setSpecificData()","url":"#setspecificdata","depth":3},{"title":"Parameters","url":"#parameters-9","depth":4},{"title":"Returns","url":"#returns-13","depth":4},{"title":"Inherited from","url":"#inherited-from-12","depth":4},{"title":"triggerTyping()","url":"#triggertyping","depth":3},{"title":"Returns","url":"#returns-14","depth":4},{"title":"Inherited from","url":"#inherited-from-13","depth":4}],"structuredData":{"contents":[{"heading":"","content":"Represents a guild forum channel."},{"heading":"extends","content":"GuildThreadOnlyChannel<ChannelType.GuildForum>"},{"heading":"new-guildforumchannel","content":"new GuildForumChannel(client, rawDataOrId): GuildForumChannel"},{"heading":"parameters","content":"Parameter"},{"heading":"parameters","content":"Type"},{"heading":"parameters","content":"client"},{"heading":"parameters","content":"Client"},{"heading":"parameters","content":"rawDataOrId"},{"heading":"parameters","content":"string | APIGuildForumChannel"},{"heading":"returns","content":"GuildForumChannel"},{"heading":"inherited-from","content":"GuildThreadOnlyChannel.constructor"},{"heading":"properties","content":"Property"},{"heading":"properties","content":"Modifier"},{"heading":"properties","content":"Type"},{"heading":"properties","content":"Default value"},{"heading":"properties","content":"Description"},{"heading":"properties","content":"Inherited from"},{"heading":"properties","content":"availableTags?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"APIGuildForumTag[]"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The available tags to set on posts in the channel."},{"heading":"properties","content":"GuildThreadOnlyChannel.availableTags"},{"heading":"properties","content":"client"},{"heading":"properties","content":"public"},{"heading":"properties","content":"Client"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"GuildThreadOnlyChannel.client"},{"heading":"properties","content":"defaultAutoArchiveDuration?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | number"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The default auto archive duration of the channel."},{"heading":"properties","content":"GuildThreadOnlyChannel.defaultAutoArchiveDuration"},{"heading":"properties","content":"defaultForumLayout?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"ForumLayoutType"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The default forum layout of the channel."},{"heading":"properties","content":"-"},{"heading":"properties","content":"defaultReactionEmoji?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | APIGuildForumDefaultReactionEmoji"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The default reaction emoji for the channel."},{"heading":"properties","content":"GuildThreadOnlyChannel.defaultReactionEmoji"},{"heading":"properties","content":"defaultSortOrder?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | SortOrderType"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The default sort order for the channel, by latest activity or by creation date."},{"heading":"properties","content":"GuildThreadOnlyChannel.defaultSortOrder"},{"heading":"properties","content":"defaultThreadRateLimitPerUser?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | number"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The default thread rate limit per user for the channel."},{"heading":"properties","content":"GuildThreadOnlyChannel.defaultThreadRateLimitPerUser"},{"heading":"properties","content":"flags?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | number"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The flags of the channel in a bitfield. See https://discord.com/developers/docs/resources/channel#channel-object-channel-flags"},{"heading":"properties","content":"GuildThreadOnlyChannel.flags"},{"heading":"properties","content":"guildId?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The ID of the guild this channel is in"},{"heading":"properties","content":"GuildThreadOnlyChannel.guildId"},{"heading":"properties","content":"id"},{"heading":"properties","content":"public"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The id of the channel."},{"heading":"properties","content":"GuildThreadOnlyChannel.id"},{"heading":"properties","content":"name?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The name of the channel."},{"heading":"properties","content":"GuildThreadOnlyChannel.name"},{"heading":"properties","content":"nsfw?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"Whether the channel is marked as nsfw."},{"heading":"properties","content":"GuildThreadOnlyChannel.nsfw"},{"heading":"properties","content":"parentId?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The ID of the parent category for the channel."},{"heading":"properties","content":"GuildThreadOnlyChannel.parentId"},{"heading":"properties","content":"partial"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"Whether the channel is a partial channel (meaning it does not have all the data). If this is true, you should use BaseChannel.fetch to get the full data of the channel."},{"heading":"properties","content":"GuildThreadOnlyChannel.partial"},{"heading":"properties","content":"position?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"number"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The position of the channel in the channel list."},{"heading":"properties","content":"GuildThreadOnlyChannel.position"},{"heading":"properties","content":"rawData"},{"heading":"properties","content":"protected"},{"heading":"properties","content":"null | APIGuildForumChannel"},{"heading":"properties","content":"null"},{"heading":"properties","content":"The raw data of the channel."},{"heading":"properties","content":"GuildThreadOnlyChannel.rawData"},{"heading":"properties","content":"topic?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The topic of the channel."},{"heading":"properties","content":"GuildThreadOnlyChannel.topic"},{"heading":"properties","content":"type?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"GuildForum"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The type of the channel."},{"heading":"properties","content":"GuildThreadOnlyChannel.type"},{"heading":"guild","content":"get guild(): Guild"},{"heading":"guild","content":"The guild this channel is in"},{"heading":"returns-1","content":"Guild"},{"heading":"inherited-from-1","content":"GuildThreadOnlyChannel.guild"},{"heading":"createinvite","content":"createInvite(options?): Promise<APIExtendedInvite>"},{"heading":"createinvite","content":"Create an invite for the channel"},{"heading":"parameters-1","content":"Parameter"},{"heading":"parameters-1","content":"Type"},{"heading":"parameters-1","content":"options?"},{"heading":"parameters-1","content":"RESTPostAPIChannelInviteJSONBody"},{"heading":"returns-2","content":"Promise<APIExtendedInvite>"},{"heading":"inherited-from-2","content":"GuildThreadOnlyChannel.createInvite"},{"heading":"fetch","content":"fetch(): Promise<void>"},{"heading":"fetch","content":"Fetches the channel from the API."},{"heading":"returns-3","content":"Promise<void>"},{"heading":"returns-3","content":"The channel data."},{"heading":"inherited-from-3","content":"GuildThreadOnlyChannel.fetch"},{"heading":"getinvites","content":"getInvites(): Promise<RESTGetAPIGuildInvitesResult>"},{"heading":"getinvites","content":"Get the invites for the channel"},{"heading":"returns-4","content":"Promise<RESTGetAPIGuildInvitesResult>"},{"heading":"inherited-from-4","content":"GuildThreadOnlyChannel.getInvites"},{"heading":"send","content":"send(): Promise<void>"},{"heading":"send","content":"You cannot send a message directly to a forum or media channel, so this method throws an error.\nUse GuildThreadChannel.send instead, or the alias GuildThreadOnlyChannel.sendToPost instead, to send a message to the channel's posts."},{"heading":"returns-5","content":"Promise<void>"},{"heading":"inherited-from-5","content":"GuildThreadOnlyChannel.send"},{"heading":"sendtopost","content":"sendToPost(message, postId): Promise<void>"},{"heading":"sendtopost","content":"Send a message to a post in the channel"},{"heading":"parameters-2","content":"Parameter"},{"heading":"parameters-2","content":"Type"},{"heading":"parameters-2","content":"message"},{"heading":"parameters-2","content":"APIMessage"},{"heading":"parameters-2","content":"postId"},{"heading":"parameters-2","content":"string"},{"heading":"returns-6","content":"Promise<void>"},{"heading":"remarks","content":"This is an alias for GuildThreadChannel.send that will fetch the channel, but if you already have the channel, you can use GuildThreadChannel.send instead."},{"heading":"inherited-from-6","content":"GuildThreadOnlyChannel.sendToPost"},{"heading":"setdata","content":"protected setData(data): void"},{"heading":"parameters-3","content":"Parameter"},{"heading":"parameters-3","content":"Type"},{"heading":"parameters-3","content":"data"},{"heading":"parameters-3","content":"APIGuildChannel<GuildForum>"},{"heading":"returns-7","content":"void"},{"heading":"inherited-from-7","content":"GuildThreadOnlyChannel.setData"},{"heading":"setmorespecificdata","content":"protected setMoreSpecificData(data): void"},{"heading":"parameters-4","content":"Parameter"},{"heading":"parameters-4","content":"Type"},{"heading":"parameters-4","content":"data"},{"heading":"parameters-4","content":"APIGuildForumChannel"},{"heading":"returns-8","content":"void"},{"heading":"overrides","content":"GuildThreadOnlyChannel.setMoreSpecificData"},{"heading":"setname","content":"setName(name): Promise<void>"},{"heading":"setname","content":"Set the name of the channel"},{"heading":"parameters-5","content":"Parameter"},{"heading":"parameters-5","content":"Type"},{"heading":"parameters-5","content":"Description"},{"heading":"parameters-5","content":"name"},{"heading":"parameters-5","content":"string"},{"heading":"parameters-5","content":"The new name of the channel"},{"heading":"returns-9","content":"Promise<void>"},{"heading":"inherited-from-8","content":"GuildThreadOnlyChannel.setName"},{"heading":"setnsfw","content":"setNsfw(nsfw): Promise<void>"},{"heading":"setnsfw","content":"Set whether the channel is nsfw"},{"heading":"parameters-6","content":"Parameter"},{"heading":"parameters-6","content":"Type"},{"heading":"parameters-6","content":"Description"},{"heading":"parameters-6","content":"nsfw"},{"heading":"parameters-6","content":"boolean"},{"heading":"parameters-6","content":"The new nsfw status of the channel"},{"heading":"returns-10","content":"Promise<void>"},{"heading":"inherited-from-9","content":"GuildThreadOnlyChannel.setNsfw"},{"heading":"setparent","content":"setParent(parent): Promise<void>"},{"heading":"setparent","content":"Set the parent ID of the channel"},{"heading":"parameters-7","content":"Parameter"},{"heading":"parameters-7","content":"Type"},{"heading":"parameters-7","content":"Description"},{"heading":"parameters-7","content":"parent"},{"heading":"parameters-7","content":"string | GuildCategoryChannel"},{"heading":"parameters-7","content":"The new category channel or ID to set"},{"heading":"returns-11","content":"Promise<void>"},{"heading":"inherited-from-10","content":"GuildThreadOnlyChannel.setParent"},{"heading":"setposition","content":"setPosition(position): Promise<void>"},{"heading":"setposition","content":"Set the position of the channel"},{"heading":"parameters-8","content":"Parameter"},{"heading":"parameters-8","content":"Type"},{"heading":"parameters-8","content":"Description"},{"heading":"parameters-8","content":"position"},{"heading":"parameters-8","content":"number"},{"heading":"parameters-8","content":"The new position of the channel"},{"heading":"returns-12","content":"Promise<void>"},{"heading":"inherited-from-11","content":"GuildThreadOnlyChannel.setPosition"},{"heading":"setspecificdata","content":"protected setSpecificData(data): void"},{"heading":"parameters-9","content":"Parameter"},{"heading":"parameters-9","content":"Type"},{"heading":"parameters-9","content":"data"},{"heading":"parameters-9","content":"APIThreadOnlyChannel<GuildForum>"},{"heading":"returns-13","content":"void"},{"heading":"inherited-from-12","content":"GuildThreadOnlyChannel.setSpecificData"},{"heading":"triggertyping","content":"triggerTyping(): Promise<void>"},{"heading":"triggertyping","content":"Trigger a typing indicator in the channel (this will expire after 10 seconds)"},{"heading":"returns-14","content":"Promise<void>"},{"heading":"inherited-from-13","content":"GuildThreadOnlyChannel.triggerTyping"}],"headings":[{"id":"extends","content":"Extends"},{"id":"constructors","content":"Constructors"},{"id":"new-guildforumchannel","content":"new GuildForumChannel()"},{"id":"parameters","content":"Parameters"},{"id":"returns","content":"Returns"},{"id":"inherited-from","content":"Inherited from"},{"id":"properties","content":"Properties"},{"id":"accessors","content":"Accessors"},{"id":"guild","content":"guild"},{"id":"returns-1","content":"Returns"},{"id":"inherited-from-1","content":"Inherited from"},{"id":"methods","content":"Methods"},{"id":"createinvite","content":"createInvite()"},{"id":"parameters-1","content":"Parameters"},{"id":"returns-2","content":"Returns"},{"id":"inherited-from-2","content":"Inherited from"},{"id":"fetch","content":"fetch()"},{"id":"returns-3","content":"Returns"},{"id":"inherited-from-3","content":"Inherited from"},{"id":"getinvites","content":"getInvites()"},{"id":"returns-4","content":"Returns"},{"id":"inherited-from-4","content":"Inherited from"},{"id":"send","content":"send()"},{"id":"returns-5","content":"Returns"},{"id":"inherited-from-5","content":"Inherited from"},{"id":"sendtopost","content":"sendToPost()"},{"id":"parameters-2","content":"Parameters"},{"id":"returns-6","content":"Returns"},{"id":"remarks","content":"Remarks"},{"id":"inherited-from-6","content":"Inherited from"},{"id":"setdata","content":"setData()"},{"id":"parameters-3","content":"Parameters"},{"id":"returns-7","content":"Returns"},{"id":"inherited-from-7","content":"Inherited from"},{"id":"setmorespecificdata","content":"setMoreSpecificData()"},{"id":"parameters-4","content":"Parameters"},{"id":"returns-8","content":"Returns"},{"id":"overrides","content":"Overrides"},{"id":"setname","content":"setName()"},{"id":"parameters-5","content":"Parameters"},{"id":"returns-9","content":"Returns"},{"id":"inherited-from-8","content":"Inherited from"},{"id":"setnsfw","content":"setNsfw()"},{"id":"parameters-6","content":"Parameters"},{"id":"returns-10","content":"Returns"},{"id":"inherited-from-9","content":"Inherited from"},{"id":"setparent","content":"setParent()"},{"id":"parameters-7","content":"Parameters"},{"id":"returns-11","content":"Returns"},{"id":"inherited-from-10","content":"Inherited from"},{"id":"setposition","content":"setPosition()"},{"id":"parameters-8","content":"Parameters"},{"id":"returns-12","content":"Returns"},{"id":"inherited-from-11","content":"Inherited from"},{"id":"setspecificdata","content":"setSpecificData()"},{"id":"parameters-9","content":"Parameters"},{"id":"returns-13","content":"Returns"},{"id":"inherited-from-12","content":"Inherited from"},{"id":"triggertyping","content":"triggerTyping()"},{"id":"returns-14","content":"Returns"},{"id":"inherited-from-13","content":"Inherited from"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/api/classes/GuildMediaChannel.mdx","data":{"frontmatter":{"title":"GuildMediaChannel","index":false},"toc":[{"title":"Extends","url":"#extends","depth":2},{"title":"Constructors","url":"#constructors","depth":2},{"title":"new GuildMediaChannel()","url":"#new-guildmediachannel","depth":3},{"title":"Parameters","url":"#parameters","depth":4},{"title":"Returns","url":"#returns","depth":4},{"title":"Inherited from","url":"#inherited-from","depth":4},{"title":"Properties","url":"#properties","depth":2},{"title":"Accessors","url":"#accessors","depth":2},{"title":"guild","url":"#guild","depth":3},{"title":"Returns","url":"#returns-1","depth":4},{"title":"Inherited from","url":"#inherited-from-1","depth":4},{"title":"Methods","url":"#methods","depth":2},{"title":"createInvite()","url":"#createinvite","depth":3},{"title":"Parameters","url":"#parameters-1","depth":4},{"title":"Returns","url":"#returns-2","depth":4},{"title":"Inherited from","url":"#inherited-from-2","depth":4},{"title":"fetch()","url":"#fetch","depth":3},{"title":"Returns","url":"#returns-3","depth":4},{"title":"Inherited from","url":"#inherited-from-3","depth":4},{"title":"getInvites()","url":"#getinvites","depth":3},{"title":"Returns","url":"#returns-4","depth":4},{"title":"Inherited from","url":"#inherited-from-4","depth":4},{"title":"send()","url":"#send","depth":3},{"title":"Returns","url":"#returns-5","depth":4},{"title":"Inherited from","url":"#inherited-from-5","depth":4},{"title":"sendToPost()","url":"#sendtopost","depth":3},{"title":"Parameters","url":"#parameters-2","depth":4},{"title":"Returns","url":"#returns-6","depth":4},{"title":"Remarks","url":"#remarks","depth":4},{"title":"Inherited from","url":"#inherited-from-6","depth":4},{"title":"setData()","url":"#setdata","depth":3},{"title":"Parameters","url":"#parameters-3","depth":4},{"title":"Returns","url":"#returns-7","depth":4},{"title":"Inherited from","url":"#inherited-from-7","depth":4},{"title":"setMoreSpecificData()","url":"#setmorespecificdata","depth":3},{"title":"Returns","url":"#returns-8","depth":4},{"title":"Overrides","url":"#overrides","depth":4},{"title":"setName()","url":"#setname","depth":3},{"title":"Parameters","url":"#parameters-4","depth":4},{"title":"Returns","url":"#returns-9","depth":4},{"title":"Inherited from","url":"#inherited-from-8","depth":4},{"title":"setNsfw()","url":"#setnsfw","depth":3},{"title":"Parameters","url":"#parameters-5","depth":4},{"title":"Returns","url":"#returns-10","depth":4},{"title":"Inherited from","url":"#inherited-from-9","depth":4},{"title":"setParent()","url":"#setparent","depth":3},{"title":"Parameters","url":"#parameters-6","depth":4},{"title":"Returns","url":"#returns-11","depth":4},{"title":"Inherited from","url":"#inherited-from-10","depth":4},{"title":"setPosition()","url":"#setposition","depth":3},{"title":"Parameters","url":"#parameters-7","depth":4},{"title":"Returns","url":"#returns-12","depth":4},{"title":"Inherited from","url":"#inherited-from-11","depth":4},{"title":"setSpecificData()","url":"#setspecificdata","depth":3},{"title":"Parameters","url":"#parameters-8","depth":4},{"title":"Returns","url":"#returns-13","depth":4},{"title":"Inherited from","url":"#inherited-from-12","depth":4},{"title":"triggerTyping()","url":"#triggertyping","depth":3},{"title":"Returns","url":"#returns-14","depth":4},{"title":"Inherited from","url":"#inherited-from-13","depth":4}],"structuredData":{"contents":[{"heading":"","content":"Represents a guild media channel (a forum channel )"},{"heading":"extends","content":"GuildThreadOnlyChannel<ChannelType.GuildMedia>"},{"heading":"new-guildmediachannel","content":"new GuildMediaChannel(client, rawDataOrId): GuildMediaChannel"},{"heading":"parameters","content":"Parameter"},{"heading":"parameters","content":"Type"},{"heading":"parameters","content":"client"},{"heading":"parameters","content":"Client"},{"heading":"parameters","content":"rawDataOrId"},{"heading":"parameters","content":"string | APIGuildMediaChannel"},{"heading":"returns","content":"GuildMediaChannel"},{"heading":"inherited-from","content":"GuildThreadOnlyChannel.constructor"},{"heading":"properties","content":"Property"},{"heading":"properties","content":"Modifier"},{"heading":"properties","content":"Type"},{"heading":"properties","content":"Default value"},{"heading":"properties","content":"Description"},{"heading":"properties","content":"Inherited from"},{"heading":"properties","content":"availableTags?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"APIGuildForumTag[]"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The available tags to set on posts in the channel."},{"heading":"properties","content":"GuildThreadOnlyChannel.availableTags"},{"heading":"properties","content":"client"},{"heading":"properties","content":"public"},{"heading":"properties","content":"Client"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"GuildThreadOnlyChannel.client"},{"heading":"properties","content":"defaultAutoArchiveDuration?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | number"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The default auto archive duration of the channel."},{"heading":"properties","content":"GuildThreadOnlyChannel.defaultAutoArchiveDuration"},{"heading":"properties","content":"defaultForumLayout?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"ForumLayoutType"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The default forum layout of the channel."},{"heading":"properties","content":"-"},{"heading":"properties","content":"defaultReactionEmoji?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | APIGuildForumDefaultReactionEmoji"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The default reaction emoji for the channel."},{"heading":"properties","content":"GuildThreadOnlyChannel.defaultReactionEmoji"},{"heading":"properties","content":"defaultSortOrder?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | SortOrderType"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The default sort order for the channel, by latest activity or by creation date."},{"heading":"properties","content":"GuildThreadOnlyChannel.defaultSortOrder"},{"heading":"properties","content":"defaultThreadRateLimitPerUser?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | number"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The default thread rate limit per user for the channel."},{"heading":"properties","content":"GuildThreadOnlyChannel.defaultThreadRateLimitPerUser"},{"heading":"properties","content":"flags?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | number"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The flags of the channel in a bitfield. See https://discord.com/developers/docs/resources/channel#channel-object-channel-flags"},{"heading":"properties","content":"GuildThreadOnlyChannel.flags"},{"heading":"properties","content":"guildId?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The ID of the guild this channel is in"},{"heading":"properties","content":"GuildThreadOnlyChannel.guildId"},{"heading":"properties","content":"id"},{"heading":"properties","content":"public"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The id of the channel."},{"heading":"properties","content":"GuildThreadOnlyChannel.id"},{"heading":"properties","content":"name?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The name of the channel."},{"heading":"properties","content":"GuildThreadOnlyChannel.name"},{"heading":"properties","content":"nsfw?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"Whether the channel is marked as nsfw."},{"heading":"properties","content":"GuildThreadOnlyChannel.nsfw"},{"heading":"properties","content":"parentId?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The ID of the parent category for the channel."},{"heading":"properties","content":"GuildThreadOnlyChannel.parentId"},{"heading":"properties","content":"partial"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"Whether the channel is a partial channel (meaning it does not have all the data). If this is true, you should use BaseChannel.fetch to get the full data of the channel."},{"heading":"properties","content":"GuildThreadOnlyChannel.partial"},{"heading":"properties","content":"position?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"number"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The position of the channel in the channel list."},{"heading":"properties","content":"GuildThreadOnlyChannel.position"},{"heading":"properties","content":"rawData"},{"heading":"properties","content":"protected"},{"heading":"properties","content":"null | APIGuildMediaChannel"},{"heading":"properties","content":"null"},{"heading":"properties","content":"The raw data of the channel."},{"heading":"properties","content":"GuildThreadOnlyChannel.rawData"},{"heading":"properties","content":"topic?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The topic of the channel."},{"heading":"properties","content":"GuildThreadOnlyChannel.topic"},{"heading":"properties","content":"type?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"GuildMedia"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The type of the channel."},{"heading":"properties","content":"GuildThreadOnlyChannel.type"},{"heading":"guild","content":"get guild(): Guild"},{"heading":"guild","content":"The guild this channel is in"},{"heading":"returns-1","content":"Guild"},{"heading":"inherited-from-1","content":"GuildThreadOnlyChannel.guild"},{"heading":"createinvite","content":"createInvite(options?): Promise<APIExtendedInvite>"},{"heading":"createinvite","content":"Create an invite for the channel"},{"heading":"parameters-1","content":"Parameter"},{"heading":"parameters-1","content":"Type"},{"heading":"parameters-1","content":"options?"},{"heading":"parameters-1","content":"RESTPostAPIChannelInviteJSONBody"},{"heading":"returns-2","content":"Promise<APIExtendedInvite>"},{"heading":"inherited-from-2","content":"GuildThreadOnlyChannel.createInvite"},{"heading":"fetch","content":"fetch(): Promise<void>"},{"heading":"fetch","content":"Fetches the channel from the API."},{"heading":"returns-3","content":"Promise<void>"},{"heading":"returns-3","content":"The channel data."},{"heading":"inherited-from-3","content":"GuildThreadOnlyChannel.fetch"},{"heading":"getinvites","content":"getInvites(): Promise<RESTGetAPIGuildInvitesResult>"},{"heading":"getinvites","content":"Get the invites for the channel"},{"heading":"returns-4","content":"Promise<RESTGetAPIGuildInvitesResult>"},{"heading":"inherited-from-4","content":"GuildThreadOnlyChannel.getInvites"},{"heading":"send","content":"send(): Promise<void>"},{"heading":"send","content":"You cannot send a message directly to a forum or media channel, so this method throws an error.\nUse GuildThreadChannel.send instead, or the alias GuildThreadOnlyChannel.sendToPost instead, to send a message to the channel's posts."},{"heading":"returns-5","content":"Promise<void>"},{"heading":"inherited-from-5","content":"GuildThreadOnlyChannel.send"},{"heading":"sendtopost","content":"sendToPost(message, postId): Promise<void>"},{"heading":"sendtopost","content":"Send a message to a post in the channel"},{"heading":"parameters-2","content":"Parameter"},{"heading":"parameters-2","content":"Type"},{"heading":"parameters-2","content":"message"},{"heading":"parameters-2","content":"APIMessage"},{"heading":"parameters-2","content":"postId"},{"heading":"parameters-2","content":"string"},{"heading":"returns-6","content":"Promise<void>"},{"heading":"remarks","content":"This is an alias for GuildThreadChannel.send that will fetch the channel, but if you already have the channel, you can use GuildThreadChannel.send instead."},{"heading":"inherited-from-6","content":"GuildThreadOnlyChannel.sendToPost"},{"heading":"setdata","content":"protected setData(data): void"},{"heading":"parameters-3","content":"Parameter"},{"heading":"parameters-3","content":"Type"},{"heading":"parameters-3","content":"data"},{"heading":"parameters-3","content":"APIGuildChannel<GuildMedia>"},{"heading":"returns-7","content":"void"},{"heading":"inherited-from-7","content":"GuildThreadOnlyChannel.setData"},{"heading":"setmorespecificdata","content":"protected setMoreSpecificData(): void"},{"heading":"returns-8","content":"void"},{"heading":"overrides","content":"GuildThreadOnlyChannel.setMoreSpecificData"},{"heading":"setname","content":"setName(name): Promise<void>"},{"heading":"setname","content":"Set the name of the channel"},{"heading":"parameters-4","content":"Parameter"},{"heading":"parameters-4","content":"Type"},{"heading":"parameters-4","content":"Description"},{"heading":"parameters-4","content":"name"},{"heading":"parameters-4","content":"string"},{"heading":"parameters-4","content":"The new name of the channel"},{"heading":"returns-9","content":"Promise<void>"},{"heading":"inherited-from-8","content":"GuildThreadOnlyChannel.setName"},{"heading":"setnsfw","content":"setNsfw(nsfw): Promise<void>"},{"heading":"setnsfw","content":"Set whether the channel is nsfw"},{"heading":"parameters-5","content":"Parameter"},{"heading":"parameters-5","content":"Type"},{"heading":"parameters-5","content":"Description"},{"heading":"parameters-5","content":"nsfw"},{"heading":"parameters-5","content":"boolean"},{"heading":"parameters-5","content":"The new nsfw status of the channel"},{"heading":"returns-10","content":"Promise<void>"},{"heading":"inherited-from-9","content":"GuildThreadOnlyChannel.setNsfw"},{"heading":"setparent","content":"setParent(parent): Promise<void>"},{"heading":"setparent","content":"Set the parent ID of the channel"},{"heading":"parameters-6","content":"Parameter"},{"heading":"parameters-6","content":"Type"},{"heading":"parameters-6","content":"Description"},{"heading":"parameters-6","content":"parent"},{"heading":"parameters-6","content":"string | GuildCategoryChannel"},{"heading":"parameters-6","content":"The new category channel or ID to set"},{"heading":"returns-11","content":"Promise<void>"},{"heading":"inherited-from-10","content":"GuildThreadOnlyChannel.setParent"},{"heading":"setposition","content":"setPosition(position): Promise<void>"},{"heading":"setposition","content":"Set the position of the channel"},{"heading":"parameters-7","content":"Parameter"},{"heading":"parameters-7","content":"Type"},{"heading":"parameters-7","content":"Description"},{"heading":"parameters-7","content":"position"},{"heading":"parameters-7","content":"number"},{"heading":"parameters-7","content":"The new position of the channel"},{"heading":"returns-12","content":"Promise<void>"},{"heading":"inherited-from-11","content":"GuildThreadOnlyChannel.setPosition"},{"heading":"setspecificdata","content":"protected setSpecificData(data): void"},{"heading":"parameters-8","content":"Parameter"},{"heading":"parameters-8","content":"Type"},{"heading":"parameters-8","content":"data"},{"heading":"parameters-8","content":"APIThreadOnlyChannel<GuildMedia>"},{"heading":"returns-13","content":"void"},{"heading":"inherited-from-12","content":"GuildThreadOnlyChannel.setSpecificData"},{"heading":"triggertyping","content":"triggerTyping(): Promise<void>"},{"heading":"triggertyping","content":"Trigger a typing indicator in the channel (this will expire after 10 seconds)"},{"heading":"returns-14","content":"Promise<void>"},{"heading":"inherited-from-13","content":"GuildThreadOnlyChannel.triggerTyping"}],"headings":[{"id":"extends","content":"Extends"},{"id":"constructors","content":"Constructors"},{"id":"new-guildmediachannel","content":"new GuildMediaChannel()"},{"id":"parameters","content":"Parameters"},{"id":"returns","content":"Returns"},{"id":"inherited-from","content":"Inherited from"},{"id":"properties","content":"Properties"},{"id":"accessors","content":"Accessors"},{"id":"guild","content":"guild"},{"id":"returns-1","content":"Returns"},{"id":"inherited-from-1","content":"Inherited from"},{"id":"methods","content":"Methods"},{"id":"createinvite","content":"createInvite()"},{"id":"parameters-1","content":"Parameters"},{"id":"returns-2","content":"Returns"},{"id":"inherited-from-2","content":"Inherited from"},{"id":"fetch","content":"fetch()"},{"id":"returns-3","content":"Returns"},{"id":"inherited-from-3","content":"Inherited from"},{"id":"getinvites","content":"getInvites()"},{"id":"returns-4","content":"Returns"},{"id":"inherited-from-4","content":"Inherited from"},{"id":"send","content":"send()"},{"id":"returns-5","content":"Returns"},{"id":"inherited-from-5","content":"Inherited from"},{"id":"sendtopost","content":"sendToPost()"},{"id":"parameters-2","content":"Parameters"},{"id":"returns-6","content":"Returns"},{"id":"remarks","content":"Remarks"},{"id":"inherited-from-6","content":"Inherited from"},{"id":"setdata","content":"setData()"},{"id":"parameters-3","content":"Parameters"},{"id":"returns-7","content":"Returns"},{"id":"inherited-from-7","content":"Inherited from"},{"id":"setmorespecificdata","content":"setMoreSpecificData()"},{"id":"returns-8","content":"Returns"},{"id":"overrides","content":"Overrides"},{"id":"setname","content":"setName()"},{"id":"parameters-4","content":"Parameters"},{"id":"returns-9","content":"Returns"},{"id":"inherited-from-8","content":"Inherited from"},{"id":"setnsfw","content":"setNsfw()"},{"id":"parameters-5","content":"Parameters"},{"id":"returns-10","content":"Returns"},{"id":"inherited-from-9","content":"Inherited from"},{"id":"setparent","content":"setParent()"},{"id":"parameters-6","content":"Parameters"},{"id":"returns-11","content":"Returns"},{"id":"inherited-from-10","content":"Inherited from"},{"id":"setposition","content":"setPosition()"},{"id":"parameters-7","content":"Parameters"},{"id":"returns-12","content":"Returns"},{"id":"inherited-from-11","content":"Inherited from"},{"id":"setspecificdata","content":"setSpecificData()"},{"id":"parameters-8","content":"Parameters"},{"id":"returns-13","content":"Returns"},{"id":"inherited-from-12","content":"Inherited from"},{"id":"triggertyping","content":"triggerTyping()"},{"id":"returns-14","content":"Returns"},{"id":"inherited-from-13","content":"Inherited from"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/api/classes/GuildStageChannel.mdx","data":{"frontmatter":{"title":"GuildStageChannel","index":false},"toc":[{"title":"Extends","url":"#extends","depth":2},{"title":"Constructors","url":"#constructors","depth":2},{"title":"new GuildStageChannel()","url":"#new-guildstagechannel","depth":3},{"title":"Parameters","url":"#parameters","depth":4},{"title":"Returns","url":"#returns","depth":4},{"title":"Inherited from","url":"#inherited-from","depth":4},{"title":"Properties","url":"#properties","depth":2},{"title":"Accessors","url":"#accessors","depth":2},{"title":"guild","url":"#guild","depth":3},{"title":"Returns","url":"#returns-1","depth":4},{"title":"Inherited from","url":"#inherited-from-1","depth":4},{"title":"Methods","url":"#methods","depth":2},{"title":"createInvite()","url":"#createinvite","depth":3},{"title":"Parameters","url":"#parameters-1","depth":4},{"title":"Returns","url":"#returns-2","depth":4},{"title":"Inherited from","url":"#inherited-from-2","depth":4},{"title":"fetch()","url":"#fetch","depth":3},{"title":"Returns","url":"#returns-3","depth":4},{"title":"Inherited from","url":"#inherited-from-3","depth":4},{"title":"getInvites()","url":"#getinvites","depth":3},{"title":"Returns","url":"#returns-4","depth":4},{"title":"Inherited from","url":"#inherited-from-4","depth":4},{"title":"send()","url":"#send","depth":3},{"title":"Parameters","url":"#parameters-2","depth":4},{"title":"Returns","url":"#returns-5","depth":4},{"title":"Inherited from","url":"#inherited-from-5","depth":4},{"title":"setData()","url":"#setdata","depth":3},{"title":"Parameters","url":"#parameters-3","depth":4},{"title":"Returns","url":"#returns-6","depth":4},{"title":"Inherited from","url":"#inherited-from-6","depth":4},{"title":"setName()","url":"#setname","depth":3},{"title":"Parameters","url":"#parameters-4","depth":4},{"title":"Returns","url":"#returns-7","depth":4},{"title":"Inherited from","url":"#inherited-from-7","depth":4},{"title":"setNsfw()","url":"#setnsfw","depth":3},{"title":"Parameters","url":"#parameters-5","depth":4},{"title":"Returns","url":"#returns-8","depth":4},{"title":"Inherited from","url":"#inherited-from-8","depth":4},{"title":"setParent()","url":"#setparent","depth":3},{"title":"Parameters","url":"#parameters-6","depth":4},{"title":"Returns","url":"#returns-9","depth":4},{"title":"Inherited from","url":"#inherited-from-9","depth":4},{"title":"setPosition()","url":"#setposition","depth":3},{"title":"Parameters","url":"#parameters-7","depth":4},{"title":"Returns","url":"#returns-10","depth":4},{"title":"Inherited from","url":"#inherited-from-10","depth":4},{"title":"setSpecificData()","url":"#setspecificdata","depth":3},{"title":"Returns","url":"#returns-11","depth":4},{"title":"Overrides","url":"#overrides","depth":4},{"title":"triggerTyping()","url":"#triggertyping","depth":3},{"title":"Returns","url":"#returns-12","depth":4},{"title":"Inherited from","url":"#inherited-from-11","depth":4}],"structuredData":{"contents":[{"heading":"extends","content":"BaseGuildChannel<ChannelType.GuildStageVoice>"},{"heading":"new-guildstagechannel","content":"new GuildStageChannel(client, rawDataOrId): GuildStageChannel"},{"heading":"parameters","content":"Parameter"},{"heading":"parameters","content":"Type"},{"heading":"parameters","content":"client"},{"heading":"parameters","content":"Client"},{"heading":"parameters","content":"rawDataOrId"},{"heading":"parameters","content":"string | APIGuildStageVoiceChannel"},{"heading":"returns","content":"GuildStageChannel"},{"heading":"inherited-from","content":"BaseGuildChannel.constructor"},{"heading":"properties","content":"Property"},{"heading":"properties","content":"Modifier"},{"heading":"properties","content":"Type"},{"heading":"properties","content":"Default value"},{"heading":"properties","content":"Description"},{"heading":"properties","content":"Inherited from"},{"heading":"properties","content":"client"},{"heading":"properties","content":"public"},{"heading":"properties","content":"Client"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseGuildChannel.client"},{"heading":"properties","content":"flags?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | number"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The flags of the channel in a bitfield. See https://discord.com/developers/docs/resources/channel#channel-object-channel-flags"},{"heading":"properties","content":"BaseGuildChannel.flags"},{"heading":"properties","content":"guildId?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The ID of the guild this channel is in"},{"heading":"properties","content":"BaseGuildChannel.guildId"},{"heading":"properties","content":"id"},{"heading":"properties","content":"public"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The id of the channel."},{"heading":"properties","content":"BaseGuildChannel.id"},{"heading":"properties","content":"name?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The name of the channel."},{"heading":"properties","content":"BaseGuildChannel.name"},{"heading":"properties","content":"nsfw?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"Whether the channel is marked as nsfw."},{"heading":"properties","content":"BaseGuildChannel.nsfw"},{"heading":"properties","content":"parentId?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The ID of the parent category for the channel."},{"heading":"properties","content":"BaseGuildChannel.parentId"},{"heading":"properties","content":"partial"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"Whether the channel is a partial channel (meaning it does not have all the data). If this is true, you should use BaseChannel.fetch to get the full data of the channel."},{"heading":"properties","content":"BaseGuildChannel.partial"},{"heading":"properties","content":"position?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"number"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The position of the channel in the channel list."},{"heading":"properties","content":"BaseGuildChannel.position"},{"heading":"properties","content":"rawData"},{"heading":"properties","content":"protected"},{"heading":"properties","content":"null | APIGuildStageVoiceChannel"},{"heading":"properties","content":"null"},{"heading":"properties","content":"The raw data of the channel."},{"heading":"properties","content":"BaseGuildChannel.rawData"},{"heading":"properties","content":"type?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"GuildStageVoice"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The type of the channel."},{"heading":"properties","content":"BaseGuildChannel.type"},{"heading":"guild","content":"get guild(): Guild"},{"heading":"guild","content":"The guild this channel is in"},{"heading":"returns-1","content":"Guild"},{"heading":"inherited-from-1","content":"BaseGuildChannel.guild"},{"heading":"createinvite","content":"createInvite(options?): Promise<APIExtendedInvite>"},{"heading":"createinvite","content":"Create an invite for the channel"},{"heading":"parameters-1","content":"Parameter"},{"heading":"parameters-1","content":"Type"},{"heading":"parameters-1","content":"options?"},{"heading":"parameters-1","content":"RESTPostAPIChannelInviteJSONBody"},{"heading":"returns-2","content":"Promise<APIExtendedInvite>"},{"heading":"inherited-from-2","content":"BaseGuildChannel.createInvite"},{"heading":"fetch","content":"fetch(): Promise<void>"},{"heading":"fetch","content":"Fetches the channel from the API."},{"heading":"returns-3","content":"Promise<void>"},{"heading":"returns-3","content":"The channel data."},{"heading":"inherited-from-3","content":"BaseGuildChannel.fetch"},{"heading":"getinvites","content":"getInvites(): Promise<RESTGetAPIGuildInvitesResult>"},{"heading":"getinvites","content":"Get the invites for the channel"},{"heading":"returns-4","content":"Promise<RESTGetAPIGuildInvitesResult>"},{"heading":"inherited-from-4","content":"BaseGuildChannel.getInvites"},{"heading":"send","content":"send(message): Promise<void>"},{"heading":"send","content":"Send a message to the channel"},{"heading":"parameters-2","content":"Parameter"},{"heading":"parameters-2","content":"Type"},{"heading":"parameters-2","content":"message"},{"heading":"parameters-2","content":"APIMessage"},{"heading":"returns-5","content":"Promise<void>"},{"heading":"inherited-from-5","content":"BaseGuildChannel.send"},{"heading":"setdata","content":"protected setData(data): void"},{"heading":"parameters-3","content":"Parameter"},{"heading":"parameters-3","content":"Type"},{"heading":"parameters-3","content":"data"},{"heading":"parameters-3","content":"APIGuildChannel<GuildStageVoice>"},{"heading":"returns-6","content":"void"},{"heading":"inherited-from-6","content":"BaseGuildChannel.setData"},{"heading":"setname","content":"setName(name): Promise<void>"},{"heading":"setname","content":"Set the name of the channel"},{"heading":"parameters-4","content":"Parameter"},{"heading":"parameters-4","content":"Type"},{"heading":"parameters-4","content":"Description"},{"heading":"parameters-4","content":"name"},{"heading":"parameters-4","content":"string"},{"heading":"parameters-4","content":"The new name of the channel"},{"heading":"returns-7","content":"Promise<void>"},{"heading":"inherited-from-7","content":"BaseGuildChannel.setName"},{"heading":"setnsfw","content":"setNsfw(nsfw): Promise<void>"},{"heading":"setnsfw","content":"Set whether the channel is nsfw"},{"heading":"parameters-5","content":"Parameter"},{"heading":"parameters-5","content":"Type"},{"heading":"parameters-5","content":"Description"},{"heading":"parameters-5","content":"nsfw"},{"heading":"parameters-5","content":"boolean"},{"heading":"parameters-5","content":"The new nsfw status of the channel"},{"heading":"returns-8","content":"Promise<void>"},{"heading":"inherited-from-8","content":"BaseGuildChannel.setNsfw"},{"heading":"setparent","content":"setParent(parent): Promise<void>"},{"heading":"setparent","content":"Set the parent ID of the channel"},{"heading":"parameters-6","content":"Parameter"},{"heading":"parameters-6","content":"Type"},{"heading":"parameters-6","content":"Description"},{"heading":"parameters-6","content":"parent"},{"heading":"parameters-6","content":"string | GuildCategoryChannel"},{"heading":"parameters-6","content":"The new category channel or ID to set"},{"heading":"returns-9","content":"Promise<void>"},{"heading":"inherited-from-9","content":"BaseGuildChannel.setParent"},{"heading":"setposition","content":"setPosition(position): Promise<void>"},{"heading":"setposition","content":"Set the position of the channel"},{"heading":"parameters-7","content":"Parameter"},{"heading":"parameters-7","content":"Type"},{"heading":"parameters-7","content":"Description"},{"heading":"parameters-7","content":"position"},{"heading":"parameters-7","content":"number"},{"heading":"parameters-7","content":"The new position of the channel"},{"heading":"returns-10","content":"Promise<void>"},{"heading":"inherited-from-10","content":"BaseGuildChannel.setPosition"},{"heading":"setspecificdata","content":"protected setSpecificData(): void"},{"heading":"returns-11","content":"void"},{"heading":"overrides","content":"BaseGuildChannel.setSpecificData"},{"heading":"triggertyping","content":"triggerTyping(): Promise<void>"},{"heading":"triggertyping","content":"Trigger a typing indicator in the channel (this will expire after 10 seconds)"},{"heading":"returns-12","content":"Promise<void>"},{"heading":"inherited-from-11","content":"BaseGuildChannel.triggerTyping"}],"headings":[{"id":"extends","content":"Extends"},{"id":"constructors","content":"Constructors"},{"id":"new-guildstagechannel","content":"new GuildStageChannel()"},{"id":"parameters","content":"Parameters"},{"id":"returns","content":"Returns"},{"id":"inherited-from","content":"Inherited from"},{"id":"properties","content":"Properties"},{"id":"accessors","content":"Accessors"},{"id":"guild","content":"guild"},{"id":"returns-1","content":"Returns"},{"id":"inherited-from-1","content":"Inherited from"},{"id":"methods","content":"Methods"},{"id":"createinvite","content":"createInvite()"},{"id":"parameters-1","content":"Parameters"},{"id":"returns-2","content":"Returns"},{"id":"inherited-from-2","content":"Inherited from"},{"id":"fetch","content":"fetch()"},{"id":"returns-3","content":"Returns"},{"id":"inherited-from-3","content":"Inherited from"},{"id":"getinvites","content":"getInvites()"},{"id":"returns-4","content":"Returns"},{"id":"inherited-from-4","content":"Inherited from"},{"id":"send","content":"send()"},{"id":"parameters-2","content":"Parameters"},{"id":"returns-5","content":"Returns"},{"id":"inherited-from-5","content":"Inherited from"},{"id":"setdata","content":"setData()"},{"id":"parameters-3","content":"Parameters"},{"id":"returns-6","content":"Returns"},{"id":"inherited-from-6","content":"Inherited from"},{"id":"setname","content":"setName()"},{"id":"parameters-4","content":"Parameters"},{"id":"returns-7","content":"Returns"},{"id":"inherited-from-7","content":"Inherited from"},{"id":"setnsfw","content":"setNsfw()"},{"id":"parameters-5","content":"Parameters"},{"id":"returns-8","content":"Returns"},{"id":"inherited-from-8","content":"Inherited from"},{"id":"setparent","content":"setParent()"},{"id":"parameters-6","content":"Parameters"},{"id":"returns-9","content":"Returns"},{"id":"inherited-from-9","content":"Inherited from"},{"id":"setposition","content":"setPosition()"},{"id":"parameters-7","content":"Parameters"},{"id":"returns-10","content":"Returns"},{"id":"inherited-from-10","content":"Inherited from"},{"id":"setspecificdata","content":"setSpecificData()"},{"id":"returns-11","content":"Returns"},{"id":"overrides","content":"Overrides"},{"id":"triggertyping","content":"triggerTyping()"},{"id":"returns-12","content":"Returns"},{"id":"inherited-from-11","content":"Inherited from"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/api/classes/GuildStageOrVoiceChannel.mdx","data":{"frontmatter":{"title":"GuildStageOrVoiceChannel","index":false},"toc":[{"title":"Extends","url":"#extends","depth":2},{"title":"Type Parameters","url":"#type-parameters","depth":2},{"title":"Constructors","url":"#constructors","depth":2},{"title":"new GuildStageOrVoiceChannel()","url":"#new-guildstageorvoicechannel","depth":3},{"title":"Parameters","url":"#parameters","depth":4},{"title":"Returns","url":"#returns","depth":4},{"title":"Inherited from","url":"#inherited-from","depth":4},{"title":"Properties","url":"#properties","depth":2},{"title":"Accessors","url":"#accessors","depth":2},{"title":"guild","url":"#guild","depth":3},{"title":"Returns","url":"#returns-1","depth":4},{"title":"Inherited from","url":"#inherited-from-1","depth":4},{"title":"Methods","url":"#methods","depth":2},{"title":"createInvite()","url":"#createinvite","depth":3},{"title":"Parameters","url":"#parameters-1","depth":4},{"title":"Returns","url":"#returns-2","depth":4},{"title":"Inherited from","url":"#inherited-from-2","depth":4},{"title":"fetch()","url":"#fetch","depth":3},{"title":"Returns","url":"#returns-3","depth":4},{"title":"Inherited from","url":"#inherited-from-3","depth":4},{"title":"getInvites()","url":"#getinvites","depth":3},{"title":"Returns","url":"#returns-4","depth":4},{"title":"Inherited from","url":"#inherited-from-4","depth":4},{"title":"send()","url":"#send","depth":3},{"title":"Parameters","url":"#parameters-2","depth":4},{"title":"Returns","url":"#returns-5","depth":4},{"title":"Inherited from","url":"#inherited-from-5","depth":4},{"title":"setData()","url":"#setdata","depth":3},{"title":"Parameters","url":"#parameters-3","depth":4},{"title":"Returns","url":"#returns-6","depth":4},{"title":"Inherited from","url":"#inherited-from-6","depth":4},{"title":"setName()","url":"#setname","depth":3},{"title":"Parameters","url":"#parameters-4","depth":4},{"title":"Returns","url":"#returns-7","depth":4},{"title":"Inherited from","url":"#inherited-from-7","depth":4},{"title":"setNsfw()","url":"#setnsfw","depth":3},{"title":"Parameters","url":"#parameters-5","depth":4},{"title":"Returns","url":"#returns-8","depth":4},{"title":"Inherited from","url":"#inherited-from-8","depth":4},{"title":"setParent()","url":"#setparent","depth":3},{"title":"Parameters","url":"#parameters-6","depth":4},{"title":"Returns","url":"#returns-9","depth":4},{"title":"Inherited from","url":"#inherited-from-9","depth":4},{"title":"setPosition()","url":"#setposition","depth":3},{"title":"Parameters","url":"#parameters-7","depth":4},{"title":"Returns","url":"#returns-10","depth":4},{"title":"Inherited from","url":"#inherited-from-10","depth":4},{"title":"setSpecificData()","url":"#setspecificdata","depth":3},{"title":"Parameters","url":"#parameters-8","depth":4},{"title":"Returns","url":"#returns-11","depth":4},{"title":"Overrides","url":"#overrides","depth":4},{"title":"triggerTyping()","url":"#triggertyping","depth":3},{"title":"Returns","url":"#returns-12","depth":4},{"title":"Inherited from","url":"#inherited-from-11","depth":4}],"structuredData":{"contents":[{"heading":"extends","content":"BaseGuildChannel<Type>"},{"heading":"type-parameters","content":"Type Parameter"},{"heading":"type-parameters","content":"Type extends ChannelType.GuildStageVoice | ChannelType.GuildVoice"},{"heading":"new-guildstageorvoicechannel","content":"new GuildStageOrVoiceChannel<Type>(client, rawDataOrId): GuildStageOrVoiceChannel<Type>"},{"heading":"parameters","content":"Parameter"},{"heading":"parameters","content":"Type"},{"heading":"parameters","content":"client"},{"heading":"parameters","content":"Client"},{"heading":"parameters","content":"rawDataOrId"},{"heading":"parameters","content":"string | Extract<APIDMChannel, object> | Extract<APIGroupDMChannel, object> | Extract<APIGuildCategoryChannel, object> | Extract<APIGuildForumChannel, object> | Extract<APIGuildMediaChannel, object> | Extract<APIGuildStageVoiceChannel, object> | Extract<APIGuildVoiceChannel, object> | Extract<APINewsChannel, object> | Extract<APITextChannel, object> | Extract<APIThreadChannel, object>"},{"heading":"returns","content":"GuildStageOrVoiceChannel<Type>"},{"heading":"inherited-from","content":"BaseGuildChannel.constructor"},{"heading":"properties","content":"Property"},{"heading":"properties","content":"Modifier"},{"heading":"properties","content":"Type"},{"heading":"properties","content":"Default value"},{"heading":"properties","content":"Description"},{"heading":"properties","content":"Inherited from"},{"heading":"properties","content":"bitrate?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | number"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The bitrate of the channel."},{"heading":"properties","content":"-"},{"heading":"properties","content":"client"},{"heading":"properties","content":"public"},{"heading":"properties","content":"Client"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseGuildChannel.client"},{"heading":"properties","content":"flags?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | number"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The flags of the channel in a bitfield. See https://discord.com/developers/docs/resources/channel#channel-object-channel-flags"},{"heading":"properties","content":"BaseGuildChannel.flags"},{"heading":"properties","content":"guildId?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The ID of the guild this channel is in"},{"heading":"properties","content":"BaseGuildChannel.guildId"},{"heading":"properties","content":"id"},{"heading":"properties","content":"public"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The id of the channel."},{"heading":"properties","content":"BaseGuildChannel.id"},{"heading":"properties","content":"name?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The name of the channel."},{"heading":"properties","content":"BaseGuildChannel.name"},{"heading":"properties","content":"nsfw?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"Whether the channel is marked as nsfw."},{"heading":"properties","content":"BaseGuildChannel.nsfw"},{"heading":"properties","content":"parentId?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The ID of the parent category for the channel."},{"heading":"properties","content":"BaseGuildChannel.parentId"},{"heading":"properties","content":"partial"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"Whether the channel is a partial channel (meaning it does not have all the data). If this is true, you should use BaseChannel.fetch to get the full data of the channel."},{"heading":"properties","content":"BaseGuildChannel.partial"},{"heading":"properties","content":"position?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"number"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The position of the channel in the channel list."},{"heading":"properties","content":"BaseGuildChannel.position"},{"heading":"properties","content":"rawData"},{"heading":"properties","content":"protected"},{"heading":"properties","content":"null | Extract<APIDMChannel, object> | Extract<APIGroupDMChannel, object> | Extract<APIGuildCategoryChannel, object> | Extract<APIGuildForumChannel, object> | Extract<APIGuildMediaChannel, object> | Extract<APIGuildStageVoiceChannel, object> | Extract<APIGuildVoiceChannel, object> | Extract<APINewsChannel, object> | Extract<APITextChannel, object> | Extract<APIThreadChannel, object>"},{"heading":"properties","content":"null"},{"heading":"properties","content":"The raw data of the channel."},{"heading":"properties","content":"BaseGuildChannel.rawData"},{"heading":"properties","content":"rtcRegion?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The RTC region of the channel. This is automatic when set to null."},{"heading":"properties","content":"-"},{"heading":"properties","content":"type?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"Type"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The type of the channel."},{"heading":"properties","content":"BaseGuildChannel.type"},{"heading":"properties","content":"userLimit?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | number"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The user limit of the channel."},{"heading":"properties","content":"-"},{"heading":"properties","content":"videoQualityMode?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | VideoQualityMode"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The video quality mode of the channel. 1 when not present."},{"heading":"properties","content":"-"},{"heading":"guild","content":"get guild(): Guild"},{"heading":"guild","content":"The guild this channel is in"},{"heading":"returns-1","content":"Guild"},{"heading":"inherited-from-1","content":"BaseGuildChannel.guild"},{"heading":"createinvite","content":"createInvite(options?): Promise<APIExtendedInvite>"},{"heading":"createinvite","content":"Create an invite for the channel"},{"heading":"parameters-1","content":"Parameter"},{"heading":"parameters-1","content":"Type"},{"heading":"parameters-1","content":"options?"},{"heading":"parameters-1","content":"RESTPostAPIChannelInviteJSONBody"},{"heading":"returns-2","content":"Promise<APIExtendedInvite>"},{"heading":"inherited-from-2","content":"BaseGuildChannel.createInvite"},{"heading":"fetch","content":"fetch(): Promise<void>"},{"heading":"fetch","content":"Fetches the channel from the API."},{"heading":"returns-3","content":"Promise<void>"},{"heading":"returns-3","content":"The channel data."},{"heading":"inherited-from-3","content":"BaseGuildChannel.fetch"},{"heading":"getinvites","content":"getInvites(): Promise<RESTGetAPIGuildInvitesResult>"},{"heading":"getinvites","content":"Get the invites for the channel"},{"heading":"returns-4","content":"Promise<RESTGetAPIGuildInvitesResult>"},{"heading":"inherited-from-4","content":"BaseGuildChannel.getInvites"},{"heading":"send","content":"send(message): Promise<void>"},{"heading":"send","content":"Send a message to the channel"},{"heading":"parameters-2","content":"Parameter"},{"heading":"parameters-2","content":"Type"},{"heading":"parameters-2","content":"message"},{"heading":"parameters-2","content":"APIMessage"},{"heading":"returns-5","content":"Promise<void>"},{"heading":"inherited-from-5","content":"BaseGuildChannel.send"},{"heading":"setdata","content":"protected setData(data): void"},{"heading":"parameters-3","content":"Parameter"},{"heading":"parameters-3","content":"Type"},{"heading":"parameters-3","content":"data"},{"heading":"parameters-3","content":"APIGuildChannel<Type>"},{"heading":"returns-6","content":"void"},{"heading":"inherited-from-6","content":"BaseGuildChannel.setData"},{"heading":"setname","content":"setName(name): Promise<void>"},{"heading":"setname","content":"Set the name of the channel"},{"heading":"parameters-4","content":"Parameter"},{"heading":"parameters-4","content":"Type"},{"heading":"parameters-4","content":"Description"},{"heading":"parameters-4","content":"name"},{"heading":"parameters-4","content":"string"},{"heading":"parameters-4","content":"The new name of the channel"},{"heading":"returns-7","content":"Promise<void>"},{"heading":"inherited-from-7","content":"BaseGuildChannel.setName"},{"heading":"setnsfw","content":"setNsfw(nsfw): Promise<void>"},{"heading":"setnsfw","content":"Set whether the channel is nsfw"},{"heading":"parameters-5","content":"Parameter"},{"heading":"parameters-5","content":"Type"},{"heading":"parameters-5","content":"Description"},{"heading":"parameters-5","content":"nsfw"},{"heading":"parameters-5","content":"boolean"},{"heading":"parameters-5","content":"The new nsfw status of the channel"},{"heading":"returns-8","content":"Promise<void>"},{"heading":"inherited-from-8","content":"BaseGuildChannel.setNsfw"},{"heading":"setparent","content":"setParent(parent): Promise<void>"},{"heading":"setparent","content":"Set the parent ID of the channel"},{"heading":"parameters-6","content":"Parameter"},{"heading":"parameters-6","content":"Type"},{"heading":"parameters-6","content":"Description"},{"heading":"parameters-6","content":"parent"},{"heading":"parameters-6","content":"string | GuildCategoryChannel"},{"heading":"parameters-6","content":"The new category channel or ID to set"},{"heading":"returns-9","content":"Promise<void>"},{"heading":"inherited-from-9","content":"BaseGuildChannel.setParent"},{"heading":"setposition","content":"setPosition(position): Promise<void>"},{"heading":"setposition","content":"Set the position of the channel"},{"heading":"parameters-7","content":"Parameter"},{"heading":"parameters-7","content":"Type"},{"heading":"parameters-7","content":"Description"},{"heading":"parameters-7","content":"position"},{"heading":"parameters-7","content":"number"},{"heading":"parameters-7","content":"The new position of the channel"},{"heading":"returns-10","content":"Promise<void>"},{"heading":"inherited-from-10","content":"BaseGuildChannel.setPosition"},{"heading":"setspecificdata","content":"protected setSpecificData(data): void"},{"heading":"parameters-8","content":"Parameter"},{"heading":"parameters-8","content":"Type"},{"heading":"parameters-8","content":"data"},{"heading":"parameters-8","content":"APIGuildStageVoiceChannel | APIGuildVoiceChannel"},{"heading":"returns-11","content":"void"},{"heading":"overrides","content":"BaseGuildChannel.setSpecificData"},{"heading":"triggertyping","content":"triggerTyping(): Promise<void>"},{"heading":"triggertyping","content":"Trigger a typing indicator in the channel (this will expire after 10 seconds)"},{"heading":"returns-12","content":"Promise<void>"},{"heading":"inherited-from-11","content":"BaseGuildChannel.triggerTyping"}],"headings":[{"id":"extends","content":"Extends"},{"id":"type-parameters","content":"Type Parameters"},{"id":"constructors","content":"Constructors"},{"id":"new-guildstageorvoicechannel","content":"new GuildStageOrVoiceChannel()"},{"id":"parameters","content":"Parameters"},{"id":"returns","content":"Returns"},{"id":"inherited-from","content":"Inherited from"},{"id":"properties","content":"Properties"},{"id":"accessors","content":"Accessors"},{"id":"guild","content":"guild"},{"id":"returns-1","content":"Returns"},{"id":"inherited-from-1","content":"Inherited from"},{"id":"methods","content":"Methods"},{"id":"createinvite","content":"createInvite()"},{"id":"parameters-1","content":"Parameters"},{"id":"returns-2","content":"Returns"},{"id":"inherited-from-2","content":"Inherited from"},{"id":"fetch","content":"fetch()"},{"id":"returns-3","content":"Returns"},{"id":"inherited-from-3","content":"Inherited from"},{"id":"getinvites","content":"getInvites()"},{"id":"returns-4","content":"Returns"},{"id":"inherited-from-4","content":"Inherited from"},{"id":"send","content":"send()"},{"id":"parameters-2","content":"Parameters"},{"id":"returns-5","content":"Returns"},{"id":"inherited-from-5","content":"Inherited from"},{"id":"setdata","content":"setData()"},{"id":"parameters-3","content":"Parameters"},{"id":"returns-6","content":"Returns"},{"id":"inherited-from-6","content":"Inherited from"},{"id":"setname","content":"setName()"},{"id":"parameters-4","content":"Parameters"},{"id":"returns-7","content":"Returns"},{"id":"inherited-from-7","content":"Inherited from"},{"id":"setnsfw","content":"setNsfw()"},{"id":"parameters-5","content":"Parameters"},{"id":"returns-8","content":"Returns"},{"id":"inherited-from-8","content":"Inherited from"},{"id":"setparent","content":"setParent()"},{"id":"parameters-6","content":"Parameters"},{"id":"returns-9","content":"Returns"},{"id":"inherited-from-9","content":"Inherited from"},{"id":"setposition","content":"setPosition()"},{"id":"parameters-7","content":"Parameters"},{"id":"returns-10","content":"Returns"},{"id":"inherited-from-10","content":"Inherited from"},{"id":"setspecificdata","content":"setSpecificData()"},{"id":"parameters-8","content":"Parameters"},{"id":"returns-11","content":"Returns"},{"id":"overrides","content":"Overrides"},{"id":"triggertyping","content":"triggerTyping()"},{"id":"returns-12","content":"Returns"},{"id":"inherited-from-11","content":"Inherited from"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/api/classes/GuildTextChannel.mdx","data":{"frontmatter":{"title":"GuildTextChannel","index":false},"toc":[{"title":"Extends","url":"#extends","depth":2},{"title":"Constructors","url":"#constructors","depth":2},{"title":"new GuildTextChannel()","url":"#new-guildtextchannel","depth":3},{"title":"Parameters","url":"#parameters","depth":4},{"title":"Returns","url":"#returns","depth":4},{"title":"Inherited from","url":"#inherited-from","depth":4},{"title":"Properties","url":"#properties","depth":2},{"title":"Accessors","url":"#accessors","depth":2},{"title":"guild","url":"#guild","depth":3},{"title":"Returns","url":"#returns-1","depth":4},{"title":"Inherited from","url":"#inherited-from-1","depth":4},{"title":"lastMessage","url":"#lastmessage","depth":3},{"title":"Remarks","url":"#remarks","depth":4},{"title":"Returns","url":"#returns-2","depth":4},{"title":"Inherited from","url":"#inherited-from-2","depth":4},{"title":"Methods","url":"#methods","depth":2},{"title":"createInvite()","url":"#createinvite","depth":3},{"title":"Parameters","url":"#parameters-1","depth":4},{"title":"Returns","url":"#returns-3","depth":4},{"title":"Inherited from","url":"#inherited-from-3","depth":4},{"title":"fetch()","url":"#fetch","depth":3},{"title":"Returns","url":"#returns-4","depth":4},{"title":"Inherited from","url":"#inherited-from-4","depth":4},{"title":"getInvites()","url":"#getinvites","depth":3},{"title":"Returns","url":"#returns-5","depth":4},{"title":"Inherited from","url":"#inherited-from-5","depth":4},{"title":"getPinnedMessages()","url":"#getpinnedmessages","depth":3},{"title":"Returns","url":"#returns-6","depth":4},{"title":"Inherited from","url":"#inherited-from-6","depth":4},{"title":"send()","url":"#send","depth":3},{"title":"Parameters","url":"#parameters-2","depth":4},{"title":"Returns","url":"#returns-7","depth":4},{"title":"Inherited from","url":"#inherited-from-7","depth":4},{"title":"setData()","url":"#setdata","depth":3},{"title":"Parameters","url":"#parameters-3","depth":4},{"title":"Returns","url":"#returns-8","depth":4},{"title":"Inherited from","url":"#inherited-from-8","depth":4},{"title":"setMoreSpecificData()","url":"#setmorespecificdata","depth":3},{"title":"Parameters","url":"#parameters-4","depth":4},{"title":"Returns","url":"#returns-9","depth":4},{"title":"Overrides","url":"#overrides","depth":4},{"title":"setName()","url":"#setname","depth":3},{"title":"Parameters","url":"#parameters-5","depth":4},{"title":"Returns","url":"#returns-10","depth":4},{"title":"Inherited from","url":"#inherited-from-9","depth":4},{"title":"setNsfw()","url":"#setnsfw","depth":3},{"title":"Parameters","url":"#parameters-6","depth":4},{"title":"Returns","url":"#returns-11","depth":4},{"title":"Inherited from","url":"#inherited-from-10","depth":4},{"title":"setParent()","url":"#setparent","depth":3},{"title":"Parameters","url":"#parameters-7","depth":4},{"title":"Returns","url":"#returns-12","depth":4},{"title":"Inherited from","url":"#inherited-from-11","depth":4},{"title":"setPosition()","url":"#setposition","depth":3},{"title":"Parameters","url":"#parameters-8","depth":4},{"title":"Returns","url":"#returns-13","depth":4},{"title":"Inherited from","url":"#inherited-from-12","depth":4},{"title":"setSpecificData()","url":"#setspecificdata","depth":3},{"title":"Parameters","url":"#parameters-9","depth":4},{"title":"Returns","url":"#returns-14","depth":4},{"title":"Inherited from","url":"#inherited-from-13","depth":4},{"title":"startThread()","url":"#startthread","depth":3},{"title":"Parameters","url":"#parameters-10","depth":4},{"title":"Returns","url":"#returns-15","depth":4},{"title":"Inherited from","url":"#inherited-from-14","depth":4},{"title":"triggerTyping()","url":"#triggertyping","depth":3},{"title":"Returns","url":"#returns-16","depth":4},{"title":"Inherited from","url":"#inherited-from-15","depth":4}],"structuredData":{"contents":[{"heading":"extends","content":"BaseGuildTextChannel<ChannelType.GuildText>"},{"heading":"new-guildtextchannel","content":"new GuildTextChannel(client, rawDataOrId): GuildTextChannel"},{"heading":"parameters","content":"Parameter"},{"heading":"parameters","content":"Type"},{"heading":"parameters","content":"client"},{"heading":"parameters","content":"Client"},{"heading":"parameters","content":"rawDataOrId"},{"heading":"parameters","content":"string | APITextChannel"},{"heading":"returns","content":"GuildTextChannel"},{"heading":"inherited-from","content":"BaseGuildTextChannel.constructor"},{"heading":"properties","content":"Property"},{"heading":"properties","content":"Modifier"},{"heading":"properties","content":"Type"},{"heading":"properties","content":"Default value"},{"heading":"properties","content":"Description"},{"heading":"properties","content":"Overrides"},{"heading":"properties","content":"Inherited from"},{"heading":"properties","content":"client"},{"heading":"properties","content":"public"},{"heading":"properties","content":"Client"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseGuildTextChannel.client"},{"heading":"properties","content":"defaultAutoArchiveDuration?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | number"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The default auto archive duration of threads in the channel."},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"defaultThreadRateLimitPerUser?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | number"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The default thread rate limit per user of the channel."},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"flags?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | number"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The flags of the channel in a bitfield. See https://discord.com/developers/docs/resources/channel#channel-object-channel-flags"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseGuildTextChannel.flags"},{"heading":"properties","content":"guildId?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The ID of the guild this channel is in"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseGuildTextChannel.guildId"},{"heading":"properties","content":"id"},{"heading":"properties","content":"public"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The id of the channel."},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseGuildTextChannel.id"},{"heading":"properties","content":"lastMessageId?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The ID of the last message sent in the channel. Remarks This might not always resolve to a message. The ID still stays a part of the channel's data, even if the message is deleted."},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseGuildTextChannel.lastMessageId"},{"heading":"properties","content":"lastPinTimestamp?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The timestamp of the last pin in the channel."},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseGuildTextChannel.lastPinTimestamp"},{"heading":"properties","content":"name?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The name of the channel."},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseGuildTextChannel.name"},{"heading":"properties","content":"nsfw?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"Whether the channel is marked as nsfw."},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseGuildTextChannel.nsfw"},{"heading":"properties","content":"parentId?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The ID of the parent category for the channel."},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseGuildTextChannel.parentId"},{"heading":"properties","content":"partial"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"Whether the channel is a partial channel (meaning it does not have all the data). If this is true, you should use BaseChannel.fetch to get the full data of the channel."},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseGuildTextChannel.partial"},{"heading":"properties","content":"position?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"number"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The position of the channel in the channel list."},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseGuildTextChannel.position"},{"heading":"properties","content":"rateLimitPerUser?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | number"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The rate limit per user for the channel, in seconds."},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseGuildTextChannel.rateLimitPerUser"},{"heading":"properties","content":"rawData"},{"heading":"properties","content":"protected"},{"heading":"properties","content":"null | APITextChannel"},{"heading":"properties","content":"null"},{"heading":"properties","content":"The raw data of the channel."},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseGuildTextChannel.rawData"},{"heading":"properties","content":"type"},{"heading":"properties","content":"public"},{"heading":"properties","content":"GuildText"},{"heading":"properties","content":"ChannelType.GuildText"},{"heading":"properties","content":"The type of the channel."},{"heading":"properties","content":"BaseGuildTextChannel.type"},{"heading":"properties","content":"-"},{"heading":"guild","content":"get guild(): Guild"},{"heading":"guild","content":"The guild this channel is in"},{"heading":"returns-1","content":"Guild"},{"heading":"inherited-from-1","content":"BaseGuildTextChannel.guild"},{"heading":"lastmessage","content":"get lastMessage(): null | Message"},{"heading":"lastmessage","content":"The last message sent in the channel."},{"heading":"remarks","content":"This might not always resolve to a message. The ID still stays a part of the channel's data, even if the message is deleted.\nThis will always return a partial message, so you can use Message.fetch to get the full message data."},{"heading":"returns-2","content":"null | Message"},{"heading":"inherited-from-2","content":"BaseGuildTextChannel.lastMessage"},{"heading":"createinvite","content":"createInvite(options?): Promise<APIExtendedInvite>"},{"heading":"createinvite","content":"Create an invite for the channel"},{"heading":"parameters-1","content":"Parameter"},{"heading":"parameters-1","content":"Type"},{"heading":"parameters-1","content":"options?"},{"heading":"parameters-1","content":"RESTPostAPIChannelInviteJSONBody"},{"heading":"returns-3","content":"Promise<APIExtendedInvite>"},{"heading":"inherited-from-3","content":"BaseGuildTextChannel.createInvite"},{"heading":"fetch","content":"fetch(): Promise<void>"},{"heading":"fetch","content":"Fetches the channel from the API."},{"heading":"returns-4","content":"Promise<void>"},{"heading":"returns-4","content":"The channel data."},{"heading":"inherited-from-4","content":"BaseGuildTextChannel.fetch"},{"heading":"getinvites","content":"getInvites(): Promise<RESTGetAPIGuildInvitesResult>"},{"heading":"getinvites","content":"Get the invites for the channel"},{"heading":"returns-5","content":"Promise<RESTGetAPIGuildInvitesResult>"},{"heading":"inherited-from-5","content":"BaseGuildTextChannel.getInvites"},{"heading":"getpinnedmessages","content":"getPinnedMessages(): Promise<Message[]>"},{"heading":"getpinnedmessages","content":"Get the pinned messages in the channel"},{"heading":"returns-6","content":"Promise<Message[]>"},{"heading":"inherited-from-6","content":"BaseGuildTextChannel.getPinnedMessages"},{"heading":"send","content":"send(message): Promise<void>"},{"heading":"send","content":"Send a message to the channel"},{"heading":"parameters-2","content":"Parameter"},{"heading":"parameters-2","content":"Type"},{"heading":"parameters-2","content":"message"},{"heading":"parameters-2","content":"APIMessage"},{"heading":"returns-7","content":"Promise<void>"},{"heading":"inherited-from-7","content":"BaseGuildTextChannel.send"},{"heading":"setdata","content":"protected setData(data): void"},{"heading":"parameters-3","content":"Parameter"},{"heading":"parameters-3","content":"Type"},{"heading":"parameters-3","content":"data"},{"heading":"parameters-3","content":"APIGuildChannel<GuildText>"},{"heading":"returns-8","content":"void"},{"heading":"inherited-from-8","content":"BaseGuildTextChannel.setData"},{"heading":"setmorespecificdata","content":"protected setMoreSpecificData(data): void"},{"heading":"parameters-4","content":"Parameter"},{"heading":"parameters-4","content":"Type"},{"heading":"parameters-4","content":"data"},{"heading":"parameters-4","content":"APIGuildTextChannel<GuildText>"},{"heading":"returns-9","content":"void"},{"heading":"overrides","content":"BaseGuildTextChannel.setMoreSpecificData"},{"heading":"setname","content":"setName(name): Promise<void>"},{"heading":"setname","content":"Set the name of the channel"},{"heading":"parameters-5","content":"Parameter"},{"heading":"parameters-5","content":"Type"},{"heading":"parameters-5","content":"Description"},{"heading":"parameters-5","content":"name"},{"heading":"parameters-5","content":"string"},{"heading":"parameters-5","content":"The new name of the channel"},{"heading":"returns-10","content":"Promise<void>"},{"heading":"inherited-from-9","content":"BaseGuildTextChannel.setName"},{"heading":"setnsfw","content":"setNsfw(nsfw): Promise<void>"},{"heading":"setnsfw","content":"Set whether the channel is nsfw"},{"heading":"parameters-6","content":"Parameter"},{"heading":"parameters-6","content":"Type"},{"heading":"parameters-6","content":"Description"},{"heading":"parameters-6","content":"nsfw"},{"heading":"parameters-6","content":"boolean"},{"heading":"parameters-6","content":"The new nsfw status of the channel"},{"heading":"returns-11","content":"Promise<void>"},{"heading":"inherited-from-10","content":"BaseGuildTextChannel.setNsfw"},{"heading":"setparent","content":"setParent(parent): Promise<void>"},{"heading":"setparent","content":"Set the parent ID of the channel"},{"heading":"parameters-7","content":"Parameter"},{"heading":"parameters-7","content":"Type"},{"heading":"parameters-7","content":"Description"},{"heading":"parameters-7","content":"parent"},{"heading":"parameters-7","content":"string | GuildCategoryChannel"},{"heading":"parameters-7","content":"The new category channel or ID to set"},{"heading":"returns-12","content":"Promise<void>"},{"heading":"inherited-from-11","content":"BaseGuildTextChannel.setParent"},{"heading":"setposition","content":"setPosition(position): Promise<void>"},{"heading":"setposition","content":"Set the position of the channel"},{"heading":"parameters-8","content":"Parameter"},{"heading":"parameters-8","content":"Type"},{"heading":"parameters-8","content":"Description"},{"heading":"parameters-8","content":"position"},{"heading":"parameters-8","content":"number"},{"heading":"parameters-8","content":"The new position of the channel"},{"heading":"returns-13","content":"Promise<void>"},{"heading":"inherited-from-12","content":"BaseGuildTextChannel.setPosition"},{"heading":"setspecificdata","content":"protected setSpecificData(data): void"},{"heading":"parameters-9","content":"Parameter"},{"heading":"parameters-9","content":"Type"},{"heading":"parameters-9","content":"data"},{"heading":"parameters-9","content":"APIGuildTextChannel<GuildText>"},{"heading":"returns-14","content":"void"},{"heading":"inherited-from-13","content":"BaseGuildTextChannel.setSpecificData"},{"heading":"startthread","content":"startThread(data): Promise<GuildThreadChannel<ThreadChannelType>>"},{"heading":"startthread","content":"Start a thread without an associated start message.\nIf you want to start a thread with a start message, use Message.startThread"},{"heading":"parameters-10","content":"Parameter"},{"heading":"parameters-10","content":"Type"},{"heading":"parameters-10","content":"data"},{"heading":"parameters-10","content":"RESTPostAPIChannelThreadsJSONBody"},{"heading":"returns-15","content":"Promise<GuildThreadChannel<ThreadChannelType>>"},{"heading":"inherited-from-14","content":"BaseGuildTextChannel.startThread"},{"heading":"triggertyping","content":"triggerTyping(): Promise<void>"},{"heading":"triggertyping","content":"Trigger a typing indicator in the channel (this will expire after 10 seconds)"},{"heading":"returns-16","content":"Promise<void>"},{"heading":"inherited-from-15","content":"BaseGuildTextChannel.triggerTyping"}],"headings":[{"id":"extends","content":"Extends"},{"id":"constructors","content":"Constructors"},{"id":"new-guildtextchannel","content":"new GuildTextChannel()"},{"id":"parameters","content":"Parameters"},{"id":"returns","content":"Returns"},{"id":"inherited-from","content":"Inherited from"},{"id":"properties","content":"Properties"},{"id":"accessors","content":"Accessors"},{"id":"guild","content":"guild"},{"id":"returns-1","content":"Returns"},{"id":"inherited-from-1","content":"Inherited from"},{"id":"lastmessage","content":"lastMessage"},{"id":"remarks","content":"Remarks"},{"id":"returns-2","content":"Returns"},{"id":"inherited-from-2","content":"Inherited from"},{"id":"methods","content":"Methods"},{"id":"createinvite","content":"createInvite()"},{"id":"parameters-1","content":"Parameters"},{"id":"returns-3","content":"Returns"},{"id":"inherited-from-3","content":"Inherited from"},{"id":"fetch","content":"fetch()"},{"id":"returns-4","content":"Returns"},{"id":"inherited-from-4","content":"Inherited from"},{"id":"getinvites","content":"getInvites()"},{"id":"returns-5","content":"Returns"},{"id":"inherited-from-5","content":"Inherited from"},{"id":"getpinnedmessages","content":"getPinnedMessages()"},{"id":"returns-6","content":"Returns"},{"id":"inherited-from-6","content":"Inherited from"},{"id":"send","content":"send()"},{"id":"parameters-2","content":"Parameters"},{"id":"returns-7","content":"Returns"},{"id":"inherited-from-7","content":"Inherited from"},{"id":"setdata","content":"setData()"},{"id":"parameters-3","content":"Parameters"},{"id":"returns-8","content":"Returns"},{"id":"inherited-from-8","content":"Inherited from"},{"id":"setmorespecificdata","content":"setMoreSpecificData()"},{"id":"parameters-4","content":"Parameters"},{"id":"returns-9","content":"Returns"},{"id":"overrides","content":"Overrides"},{"id":"setname","content":"setName()"},{"id":"parameters-5","content":"Parameters"},{"id":"returns-10","content":"Returns"},{"id":"inherited-from-9","content":"Inherited from"},{"id":"setnsfw","content":"setNsfw()"},{"id":"parameters-6","content":"Parameters"},{"id":"returns-11","content":"Returns"},{"id":"inherited-from-10","content":"Inherited from"},{"id":"setparent","content":"setParent()"},{"id":"parameters-7","content":"Parameters"},{"id":"returns-12","content":"Returns"},{"id":"inherited-from-11","content":"Inherited from"},{"id":"setposition","content":"setPosition()"},{"id":"parameters-8","content":"Parameters"},{"id":"returns-13","content":"Returns"},{"id":"inherited-from-12","content":"Inherited from"},{"id":"setspecificdata","content":"setSpecificData()"},{"id":"parameters-9","content":"Parameters"},{"id":"returns-14","content":"Returns"},{"id":"inherited-from-13","content":"Inherited from"},{"id":"startthread","content":"startThread()"},{"id":"parameters-10","content":"Parameters"},{"id":"returns-15","content":"Returns"},{"id":"inherited-from-14","content":"Inherited from"},{"id":"triggertyping","content":"triggerTyping()"},{"id":"returns-16","content":"Returns"},{"id":"inherited-from-15","content":"Inherited from"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/api/classes/GuildThreadChannel.mdx","data":{"frontmatter":{"title":"GuildThreadChannel","index":false},"toc":[{"title":"Extends","url":"#extends","depth":2},{"title":"Type Parameters","url":"#type-parameters","depth":2},{"title":"Constructors","url":"#constructors","depth":2},{"title":"new GuildThreadChannel()","url":"#new-guildthreadchannel","depth":3},{"title":"Parameters","url":"#parameters","depth":4},{"title":"Returns","url":"#returns","depth":4},{"title":"Inherited from","url":"#inherited-from","depth":4},{"title":"Properties","url":"#properties","depth":2},{"title":"Accessors","url":"#accessors","depth":2},{"title":"guild","url":"#guild","depth":3},{"title":"Returns","url":"#returns-1","depth":4},{"title":"Inherited from","url":"#inherited-from-1","depth":4},{"title":"Methods","url":"#methods","depth":2},{"title":"addMember()","url":"#addmember","depth":3},{"title":"Parameters","url":"#parameters-1","depth":4},{"title":"Returns","url":"#returns-2","depth":4},{"title":"archive()","url":"#archive","depth":3},{"title":"Returns","url":"#returns-3","depth":4},{"title":"createInvite()","url":"#createinvite","depth":3},{"title":"Parameters","url":"#parameters-2","depth":4},{"title":"Returns","url":"#returns-4","depth":4},{"title":"Inherited from","url":"#inherited-from-2","depth":4},{"title":"fetch()","url":"#fetch","depth":3},{"title":"Returns","url":"#returns-5","depth":4},{"title":"Inherited from","url":"#inherited-from-3","depth":4},{"title":"getInvites()","url":"#getinvites","depth":3},{"title":"Returns","url":"#returns-6","depth":4},{"title":"Inherited from","url":"#inherited-from-4","depth":4},{"title":"join()","url":"#join","depth":3},{"title":"Returns","url":"#returns-7","depth":4},{"title":"leave()","url":"#leave","depth":3},{"title":"Returns","url":"#returns-8","depth":4},{"title":"lock()","url":"#lock","depth":3},{"title":"Returns","url":"#returns-9","depth":4},{"title":"removeMember()","url":"#removemember","depth":3},{"title":"Parameters","url":"#parameters-3","depth":4},{"title":"Returns","url":"#returns-10","depth":4},{"title":"send()","url":"#send","depth":3},{"title":"Parameters","url":"#parameters-4","depth":4},{"title":"Returns","url":"#returns-11","depth":4},{"title":"Inherited from","url":"#inherited-from-5","depth":4},{"title":"setAutoArchiveDuration()","url":"#setautoarchiveduration","depth":3},{"title":"Parameters","url":"#parameters-5","depth":4},{"title":"Returns","url":"#returns-12","depth":4},{"title":"setData()","url":"#setdata","depth":3},{"title":"Parameters","url":"#parameters-6","depth":4},{"title":"Returns","url":"#returns-13","depth":4},{"title":"Inherited from","url":"#inherited-from-6","depth":4},{"title":"setName()","url":"#setname","depth":3},{"title":"Parameters","url":"#parameters-7","depth":4},{"title":"Returns","url":"#returns-14","depth":4},{"title":"Inherited from","url":"#inherited-from-7","depth":4},{"title":"setNsfw()","url":"#setnsfw","depth":3},{"title":"Parameters","url":"#parameters-8","depth":4},{"title":"Returns","url":"#returns-15","depth":4},{"title":"Inherited from","url":"#inherited-from-8","depth":4},{"title":"setParent()","url":"#setparent","depth":3},{"title":"Parameters","url":"#parameters-9","depth":4},{"title":"Returns","url":"#returns-16","depth":4},{"title":"Inherited from","url":"#inherited-from-9","depth":4},{"title":"setPosition()","url":"#setposition","depth":3},{"title":"Parameters","url":"#parameters-10","depth":4},{"title":"Returns","url":"#returns-17","depth":4},{"title":"Inherited from","url":"#inherited-from-10","depth":4},{"title":"setSpecificData()","url":"#setspecificdata","depth":3},{"title":"Parameters","url":"#parameters-11","depth":4},{"title":"Returns","url":"#returns-18","depth":4},{"title":"Overrides","url":"#overrides","depth":4},{"title":"triggerTyping()","url":"#triggertyping","depth":3},{"title":"Returns","url":"#returns-19","depth":4},{"title":"Inherited from","url":"#inherited-from-11","depth":4},{"title":"unarchive()","url":"#unarchive","depth":3},{"title":"Returns","url":"#returns-20","depth":4},{"title":"unlock()","url":"#unlock","depth":3},{"title":"Returns","url":"#returns-21","depth":4}],"structuredData":{"contents":[{"heading":"extends","content":"BaseGuildChannel<Type>"},{"heading":"type-parameters","content":"Type Parameter"},{"heading":"type-parameters","content":"Type extends ThreadChannelType"},{"heading":"new-guildthreadchannel","content":"new GuildThreadChannel<Type>(client, rawDataOrId): GuildThreadChannel<Type>"},{"heading":"parameters","content":"Parameter"},{"heading":"parameters","content":"Type"},{"heading":"parameters","content":"client"},{"heading":"parameters","content":"Client"},{"heading":"parameters","content":"rawDataOrId"},{"heading":"parameters","content":"string | Extract<APIDMChannel, object> | Extract<APIGroupDMChannel, object> | Extract<APIGuildCategoryChannel, object> | Extract<APIGuildForumChannel, object> | Extract<APIGuildMediaChannel, object> | Extract<APIGuildStageVoiceChannel, object> | Extract<APIGuildVoiceChannel, object> | Extract<APINewsChannel, object> | Extract<APITextChannel, object> | Extract<APIThreadChannel, object>"},{"heading":"returns","content":"GuildThreadChannel<Type>"},{"heading":"inherited-from","content":"BaseGuildChannel.constructor"},{"heading":"properties","content":"Property"},{"heading":"properties","content":"Modifier"},{"heading":"properties","content":"Type"},{"heading":"properties","content":"Default value"},{"heading":"properties","content":"Description"},{"heading":"properties","content":"Inherited from"},{"heading":"properties","content":"appliedTags?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"string[]"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The tags applied to the thread."},{"heading":"properties","content":"-"},{"heading":"properties","content":"archiveTimestamp?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The timestamp of when the thread was archived."},{"heading":"properties","content":"-"},{"heading":"properties","content":"archived?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"Whether the thread is archived."},{"heading":"properties","content":"-"},{"heading":"properties","content":"autoArchiveDuration?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"number"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The duration until the thread is auto archived."},{"heading":"properties","content":"-"},{"heading":"properties","content":"client"},{"heading":"properties","content":"public"},{"heading":"properties","content":"Client"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseGuildChannel.client"},{"heading":"properties","content":"createTimestamp?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The timestamp of when the thread was created."},{"heading":"properties","content":"-"},{"heading":"properties","content":"flags?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | number"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The flags of the channel in a bitfield. See https://discord.com/developers/docs/resources/channel#channel-object-channel-flags"},{"heading":"properties","content":"BaseGuildChannel.flags"},{"heading":"properties","content":"guildId?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The ID of the guild this channel is in"},{"heading":"properties","content":"BaseGuildChannel.guildId"},{"heading":"properties","content":"id"},{"heading":"properties","content":"public"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The id of the channel."},{"heading":"properties","content":"BaseGuildChannel.id"},{"heading":"properties","content":"invitable?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"Whether non-moderators can add other non-moderators to a thread; only available on private threads"},{"heading":"properties","content":"-"},{"heading":"properties","content":"locked?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"Whether the thread is locked."},{"heading":"properties","content":"-"},{"heading":"properties","content":"memberCount?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"number"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The number of members in the thread. Remarks This is only accurate until 50, after that, Discord stops counting."},{"heading":"properties","content":"-"},{"heading":"properties","content":"messageCount?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"number"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The number of messages in the thread."},{"heading":"properties","content":"-"},{"heading":"properties","content":"name?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The name of the channel."},{"heading":"properties","content":"BaseGuildChannel.name"},{"heading":"properties","content":"nsfw?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"Whether the channel is marked as nsfw."},{"heading":"properties","content":"BaseGuildChannel.nsfw"},{"heading":"properties","content":"ownerId?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The ID of the owner of the thread."},{"heading":"properties","content":"-"},{"heading":"properties","content":"parentId?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The ID of the parent category for the channel."},{"heading":"properties","content":"BaseGuildChannel.parentId"},{"heading":"properties","content":"partial"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"Whether the channel is a partial channel (meaning it does not have all the data). If this is true, you should use BaseChannel.fetch to get the full data of the channel."},{"heading":"properties","content":"BaseGuildChannel.partial"},{"heading":"properties","content":"position?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"number"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The position of the channel in the channel list."},{"heading":"properties","content":"BaseGuildChannel.position"},{"heading":"properties","content":"rawData"},{"heading":"properties","content":"protected"},{"heading":"properties","content":"null | Extract<APIDMChannel, object> | Extract<APIGroupDMChannel, object> | Extract<APIGuildCategoryChannel, object> | Extract<APIGuildForumChannel, object> | Extract<APIGuildMediaChannel, object> | Extract<APIGuildStageVoiceChannel, object> | Extract<APIGuildVoiceChannel, object> | Extract<APINewsChannel, object> | Extract<APITextChannel, object> | Extract<APIThreadChannel, object>"},{"heading":"properties","content":"null"},{"heading":"properties","content":"The raw data of the channel."},{"heading":"properties","content":"BaseGuildChannel.rawData"},{"heading":"properties","content":"totalMessageSent?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"number"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The number of messages sent in the thread."},{"heading":"properties","content":"-"},{"heading":"properties","content":"type?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"Type"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The type of the channel."},{"heading":"properties","content":"BaseGuildChannel.type"},{"heading":"guild","content":"get guild(): Guild"},{"heading":"guild","content":"The guild this channel is in"},{"heading":"returns-1","content":"Guild"},{"heading":"inherited-from-1","content":"BaseGuildChannel.guild"},{"heading":"addmember","content":"addMember(userId): Promise<void>"},{"heading":"addmember","content":"Add a member to the thread"},{"heading":"parameters-1","content":"Parameter"},{"heading":"parameters-1","content":"Type"},{"heading":"parameters-1","content":"userId"},{"heading":"parameters-1","content":"string"},{"heading":"returns-2","content":"Promise<void>"},{"heading":"archive","content":"archive(): Promise<void>"},{"heading":"archive","content":"Archive the thread"},{"heading":"returns-3","content":"Promise<void>"},{"heading":"createinvite","content":"createInvite(options?): Promise<APIExtendedInvite>"},{"heading":"createinvite","content":"Create an invite for the channel"},{"heading":"parameters-2","content":"Parameter"},{"heading":"parameters-2","content":"Type"},{"heading":"parameters-2","content":"options?"},{"heading":"parameters-2","content":"RESTPostAPIChannelInviteJSONBody"},{"heading":"returns-4","content":"Promise<APIExtendedInvite>"},{"heading":"inherited-from-2","content":"BaseGuildChannel.createInvite"},{"heading":"fetch","content":"fetch(): Promise<void>"},{"heading":"fetch","content":"Fetches the channel from the API."},{"heading":"returns-5","content":"Promise<void>"},{"heading":"returns-5","content":"The channel data."},{"heading":"inherited-from-3","content":"BaseGuildChannel.fetch"},{"heading":"getinvites","content":"getInvites(): Promise<RESTGetAPIGuildInvitesResult>"},{"heading":"getinvites","content":"Get the invites for the channel"},{"heading":"returns-6","content":"Promise<RESTGetAPIGuildInvitesResult>"},{"heading":"inherited-from-4","content":"BaseGuildChannel.getInvites"},{"heading":"join","content":"join(): Promise<void>"},{"heading":"join","content":"Join the thread"},{"heading":"returns-7","content":"Promise<void>"},{"heading":"leave","content":"leave(): Promise<void>"},{"heading":"leave","content":"Leave the thread"},{"heading":"returns-8","content":"Promise<void>"},{"heading":"lock","content":"lock(): Promise<void>"},{"heading":"lock","content":"Lock the thread"},{"heading":"returns-9","content":"Promise<void>"},{"heading":"removemember","content":"removeMember(userId): Promise<void>"},{"heading":"removemember","content":"Get the pinned messages in the thread"},{"heading":"parameters-3","content":"Parameter"},{"heading":"parameters-3","content":"Type"},{"heading":"parameters-3","content":"userId"},{"heading":"parameters-3","content":"string"},{"heading":"returns-10","content":"Promise<void>"},{"heading":"send","content":"send(message): Promise<void>"},{"heading":"send","content":"Send a message to the channel"},{"heading":"parameters-4","content":"Parameter"},{"heading":"parameters-4","content":"Type"},{"heading":"parameters-4","content":"message"},{"heading":"parameters-4","content":"APIMessage"},{"heading":"returns-11","content":"Promise<void>"},{"heading":"inherited-from-5","content":"BaseGuildChannel.send"},{"heading":"setautoarchiveduration","content":"setAutoArchiveDuration(duration): Promise<void>"},{"heading":"setautoarchiveduration","content":"Set the auto archive duration of the thread"},{"heading":"parameters-5","content":"Parameter"},{"heading":"parameters-5","content":"Type"},{"heading":"parameters-5","content":"duration"},{"heading":"parameters-5","content":"number"},{"heading":"returns-12","content":"Promise<void>"},{"heading":"setdata","content":"protected setData(data): void"},{"heading":"parameters-6","content":"Parameter"},{"heading":"parameters-6","content":"Type"},{"heading":"parameters-6","content":"data"},{"heading":"parameters-6","content":"APIGuildChannel<Type>"},{"heading":"returns-13","content":"void"},{"heading":"inherited-from-6","content":"BaseGuildChannel.setData"},{"heading":"setname","content":"setName(name): Promise<void>"},{"heading":"setname","content":"Set the name of the channel"},{"heading":"parameters-7","content":"Parameter"},{"heading":"parameters-7","content":"Type"},{"heading":"parameters-7","content":"Description"},{"heading":"parameters-7","content":"name"},{"heading":"parameters-7","content":"string"},{"heading":"parameters-7","content":"The new name of the channel"},{"heading":"returns-14","content":"Promise<void>"},{"heading":"inherited-from-7","content":"BaseGuildChannel.setName"},{"heading":"setnsfw","content":"setNsfw(nsfw): Promise<void>"},{"heading":"setnsfw","content":"Set whether the channel is nsfw"},{"heading":"parameters-8","content":"Parameter"},{"heading":"parameters-8","content":"Type"},{"heading":"parameters-8","content":"Description"},{"heading":"parameters-8","content":"nsfw"},{"heading":"parameters-8","content":"boolean"},{"heading":"parameters-8","content":"The new nsfw status of the channel"},{"heading":"returns-15","content":"Promise<void>"},{"heading":"inherited-from-8","content":"BaseGuildChannel.setNsfw"},{"heading":"setparent","content":"setParent(parent): Promise<void>"},{"heading":"setparent","content":"Set the parent ID of the channel"},{"heading":"parameters-9","content":"Parameter"},{"heading":"parameters-9","content":"Type"},{"heading":"parameters-9","content":"Description"},{"heading":"parameters-9","content":"parent"},{"heading":"parameters-9","content":"string | GuildCategoryChannel"},{"heading":"parameters-9","content":"The new category channel or ID to set"},{"heading":"returns-16","content":"Promise<void>"},{"heading":"inherited-from-9","content":"BaseGuildChannel.setParent"},{"heading":"setposition","content":"setPosition(position): Promise<void>"},{"heading":"setposition","content":"Set the position of the channel"},{"heading":"parameters-10","content":"Parameter"},{"heading":"parameters-10","content":"Type"},{"heading":"parameters-10","content":"Description"},{"heading":"parameters-10","content":"position"},{"heading":"parameters-10","content":"number"},{"heading":"parameters-10","content":"The new position of the channel"},{"heading":"returns-17","content":"Promise<void>"},{"heading":"inherited-from-10","content":"BaseGuildChannel.setPosition"},{"heading":"setspecificdata","content":"protected setSpecificData(data): void"},{"heading":"parameters-11","content":"Parameter"},{"heading":"parameters-11","content":"Type"},{"heading":"parameters-11","content":"data"},{"heading":"parameters-11","content":"APIThreadChannel"},{"heading":"returns-18","content":"void"},{"heading":"overrides","content":"BaseGuildChannel.setSpecificData"},{"heading":"triggertyping","content":"triggerTyping(): Promise<void>"},{"heading":"triggertyping","content":"Trigger a typing indicator in the channel (this will expire after 10 seconds)"},{"heading":"returns-19","content":"Promise<void>"},{"heading":"inherited-from-11","content":"BaseGuildChannel.triggerTyping"},{"heading":"unarchive","content":"unarchive(): Promise<void>"},{"heading":"unarchive","content":"Unarchive the thread"},{"heading":"returns-20","content":"Promise<void>"},{"heading":"unlock","content":"unlock(): Promise<void>"},{"heading":"unlock","content":"Unlock the thread"},{"heading":"returns-21","content":"Promise<void>"}],"headings":[{"id":"extends","content":"Extends"},{"id":"type-parameters","content":"Type Parameters"},{"id":"constructors","content":"Constructors"},{"id":"new-guildthreadchannel","content":"new GuildThreadChannel()"},{"id":"parameters","content":"Parameters"},{"id":"returns","content":"Returns"},{"id":"inherited-from","content":"Inherited from"},{"id":"properties","content":"Properties"},{"id":"accessors","content":"Accessors"},{"id":"guild","content":"guild"},{"id":"returns-1","content":"Returns"},{"id":"inherited-from-1","content":"Inherited from"},{"id":"methods","content":"Methods"},{"id":"addmember","content":"addMember()"},{"id":"parameters-1","content":"Parameters"},{"id":"returns-2","content":"Returns"},{"id":"archive","content":"archive()"},{"id":"returns-3","content":"Returns"},{"id":"createinvite","content":"createInvite()"},{"id":"parameters-2","content":"Parameters"},{"id":"returns-4","content":"Returns"},{"id":"inherited-from-2","content":"Inherited from"},{"id":"fetch","content":"fetch()"},{"id":"returns-5","content":"Returns"},{"id":"inherited-from-3","content":"Inherited from"},{"id":"getinvites","content":"getInvites()"},{"id":"returns-6","content":"Returns"},{"id":"inherited-from-4","content":"Inherited from"},{"id":"join","content":"join()"},{"id":"returns-7","content":"Returns"},{"id":"leave","content":"leave()"},{"id":"returns-8","content":"Returns"},{"id":"lock","content":"lock()"},{"id":"returns-9","content":"Returns"},{"id":"removemember","content":"removeMember()"},{"id":"parameters-3","content":"Parameters"},{"id":"returns-10","content":"Returns"},{"id":"send","content":"send()"},{"id":"parameters-4","content":"Parameters"},{"id":"returns-11","content":"Returns"},{"id":"inherited-from-5","content":"Inherited from"},{"id":"setautoarchiveduration","content":"setAutoArchiveDuration()"},{"id":"parameters-5","content":"Parameters"},{"id":"returns-12","content":"Returns"},{"id":"setdata","content":"setData()"},{"id":"parameters-6","content":"Parameters"},{"id":"returns-13","content":"Returns"},{"id":"inherited-from-6","content":"Inherited from"},{"id":"setname","content":"setName()"},{"id":"parameters-7","content":"Parameters"},{"id":"returns-14","content":"Returns"},{"id":"inherited-from-7","content":"Inherited from"},{"id":"setnsfw","content":"setNsfw()"},{"id":"parameters-8","content":"Parameters"},{"id":"returns-15","content":"Returns"},{"id":"inherited-from-8","content":"Inherited from"},{"id":"setparent","content":"setParent()"},{"id":"parameters-9","content":"Parameters"},{"id":"returns-16","content":"Returns"},{"id":"inherited-from-9","content":"Inherited from"},{"id":"setposition","content":"setPosition()"},{"id":"parameters-10","content":"Parameters"},{"id":"returns-17","content":"Returns"},{"id":"inherited-from-10","content":"Inherited from"},{"id":"setspecificdata","content":"setSpecificData()"},{"id":"parameters-11","content":"Parameters"},{"id":"returns-18","content":"Returns"},{"id":"overrides","content":"Overrides"},{"id":"triggertyping","content":"triggerTyping()"},{"id":"returns-19","content":"Returns"},{"id":"inherited-from-11","content":"Inherited from"},{"id":"unarchive","content":"unarchive()"},{"id":"returns-20","content":"Returns"},{"id":"unlock","content":"unlock()"},{"id":"returns-21","content":"Returns"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/api/classes/GuildThreadOnlyChannel.mdx","data":{"frontmatter":{"title":"GuildThreadOnlyChannel","index":false},"toc":[{"title":"Extends","url":"#extends","depth":2},{"title":"Extended by","url":"#extended-by","depth":2},{"title":"Type Parameters","url":"#type-parameters","depth":2},{"title":"Constructors","url":"#constructors","depth":2},{"title":"new GuildThreadOnlyChannel()","url":"#new-guildthreadonlychannel","depth":3},{"title":"Parameters","url":"#parameters","depth":4},{"title":"Returns","url":"#returns","depth":4},{"title":"Inherited from","url":"#inherited-from","depth":4},{"title":"Properties","url":"#properties","depth":2},{"title":"Accessors","url":"#accessors","depth":2},{"title":"guild","url":"#guild","depth":3},{"title":"Returns","url":"#returns-1","depth":4},{"title":"Inherited from","url":"#inherited-from-1","depth":4},{"title":"Methods","url":"#methods","depth":2},{"title":"createInvite()","url":"#createinvite","depth":3},{"title":"Parameters","url":"#parameters-1","depth":4},{"title":"Returns","url":"#returns-2","depth":4},{"title":"Inherited from","url":"#inherited-from-2","depth":4},{"title":"fetch()","url":"#fetch","depth":3},{"title":"Returns","url":"#returns-3","depth":4},{"title":"Inherited from","url":"#inherited-from-3","depth":4},{"title":"getInvites()","url":"#getinvites","depth":3},{"title":"Returns","url":"#returns-4","depth":4},{"title":"Inherited from","url":"#inherited-from-4","depth":4},{"title":"send()","url":"#send","depth":3},{"title":"Returns","url":"#returns-5","depth":4},{"title":"Overrides","url":"#overrides","depth":4},{"title":"sendToPost()","url":"#sendtopost","depth":3},{"title":"Parameters","url":"#parameters-2","depth":4},{"title":"Returns","url":"#returns-6","depth":4},{"title":"Remarks","url":"#remarks","depth":4},{"title":"setData()","url":"#setdata","depth":3},{"title":"Parameters","url":"#parameters-3","depth":4},{"title":"Returns","url":"#returns-7","depth":4},{"title":"Inherited from","url":"#inherited-from-5","depth":4},{"title":"setMoreSpecificData()","url":"#setmorespecificdata","depth":3},{"title":"Parameters","url":"#parameters-4","depth":4},{"title":"Returns","url":"#returns-8","depth":4},{"title":"setName()","url":"#setname","depth":3},{"title":"Parameters","url":"#parameters-5","depth":4},{"title":"Returns","url":"#returns-9","depth":4},{"title":"Inherited from","url":"#inherited-from-6","depth":4},{"title":"setNsfw()","url":"#setnsfw","depth":3},{"title":"Parameters","url":"#parameters-6","depth":4},{"title":"Returns","url":"#returns-10","depth":4},{"title":"Inherited from","url":"#inherited-from-7","depth":4},{"title":"setParent()","url":"#setparent","depth":3},{"title":"Parameters","url":"#parameters-7","depth":4},{"title":"Returns","url":"#returns-11","depth":4},{"title":"Inherited from","url":"#inherited-from-8","depth":4},{"title":"setPosition()","url":"#setposition","depth":3},{"title":"Parameters","url":"#parameters-8","depth":4},{"title":"Returns","url":"#returns-12","depth":4},{"title":"Inherited from","url":"#inherited-from-9","depth":4},{"title":"setSpecificData()","url":"#setspecificdata","depth":3},{"title":"Parameters","url":"#parameters-9","depth":4},{"title":"Returns","url":"#returns-13","depth":4},{"title":"Overrides","url":"#overrides-1","depth":4},{"title":"triggerTyping()","url":"#triggertyping","depth":3},{"title":"Returns","url":"#returns-14","depth":4},{"title":"Inherited from","url":"#inherited-from-10","depth":4}],"structuredData":{"contents":[{"heading":"extends","content":"BaseGuildChannel<Type>"},{"heading":"extended-by","content":"GuildForumChannel"},{"heading":"extended-by","content":"GuildMediaChannel"},{"heading":"type-parameters","content":"Type Parameter"},{"heading":"type-parameters","content":"Type extends ChannelType.GuildForum | ChannelType.GuildMedia"},{"heading":"new-guildthreadonlychannel","content":"new GuildThreadOnlyChannel<Type>(client, rawDataOrId): GuildThreadOnlyChannel<Type>"},{"heading":"parameters","content":"Parameter"},{"heading":"parameters","content":"Type"},{"heading":"parameters","content":"client"},{"heading":"parameters","content":"Client"},{"heading":"parameters","content":"rawDataOrId"},{"heading":"parameters","content":"string | Extract<APIDMChannel, object> | Extract<APIGroupDMChannel, object> | Extract<APIGuildCategoryChannel, object> | Extract<APIGuildForumChannel, object> | Extract<APIGuildMediaChannel, object> | Extract<APIGuildStageVoiceChannel, object> | Extract<APIGuildVoiceChannel, object> | Extract<APINewsChannel, object> | Extract<APITextChannel, object> | Extract<APIThreadChannel, object>"},{"heading":"returns","content":"GuildThreadOnlyChannel<Type>"},{"heading":"inherited-from","content":"BaseGuildChannel.constructor"},{"heading":"properties","content":"Property"},{"heading":"properties","content":"Modifier"},{"heading":"properties","content":"Type"},{"heading":"properties","content":"Default value"},{"heading":"properties","content":"Description"},{"heading":"properties","content":"Inherited from"},{"heading":"properties","content":"availableTags?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"APIGuildForumTag[]"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The available tags to set on posts in the channel."},{"heading":"properties","content":"-"},{"heading":"properties","content":"client"},{"heading":"properties","content":"public"},{"heading":"properties","content":"Client"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseGuildChannel.client"},{"heading":"properties","content":"defaultAutoArchiveDuration?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | number"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The default auto archive duration of the channel."},{"heading":"properties","content":"-"},{"heading":"properties","content":"defaultReactionEmoji?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | APIGuildForumDefaultReactionEmoji"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The default reaction emoji for the channel."},{"heading":"properties","content":"-"},{"heading":"properties","content":"defaultSortOrder?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | SortOrderType"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The default sort order for the channel, by latest activity or by creation date."},{"heading":"properties","content":"-"},{"heading":"properties","content":"defaultThreadRateLimitPerUser?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | number"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The default thread rate limit per user for the channel."},{"heading":"properties","content":"-"},{"heading":"properties","content":"flags?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | number"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The flags of the channel in a bitfield. See https://discord.com/developers/docs/resources/channel#channel-object-channel-flags"},{"heading":"properties","content":"BaseGuildChannel.flags"},{"heading":"properties","content":"guildId?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The ID of the guild this channel is in"},{"heading":"properties","content":"BaseGuildChannel.guildId"},{"heading":"properties","content":"id"},{"heading":"properties","content":"public"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The id of the channel."},{"heading":"properties","content":"BaseGuildChannel.id"},{"heading":"properties","content":"name?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The name of the channel."},{"heading":"properties","content":"BaseGuildChannel.name"},{"heading":"properties","content":"nsfw?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"Whether the channel is marked as nsfw."},{"heading":"properties","content":"BaseGuildChannel.nsfw"},{"heading":"properties","content":"parentId?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The ID of the parent category for the channel."},{"heading":"properties","content":"BaseGuildChannel.parentId"},{"heading":"properties","content":"partial"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"Whether the channel is a partial channel (meaning it does not have all the data). If this is true, you should use BaseChannel.fetch to get the full data of the channel."},{"heading":"properties","content":"BaseGuildChannel.partial"},{"heading":"properties","content":"position?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"number"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The position of the channel in the channel list."},{"heading":"properties","content":"BaseGuildChannel.position"},{"heading":"properties","content":"rawData"},{"heading":"properties","content":"protected"},{"heading":"properties","content":"null | Extract<APIDMChannel, object> | Extract<APIGroupDMChannel, object> | Extract<APIGuildCategoryChannel, object> | Extract<APIGuildForumChannel, object> | Extract<APIGuildMediaChannel, object> | Extract<APIGuildStageVoiceChannel, object> | Extract<APIGuildVoiceChannel, object> | Extract<APINewsChannel, object> | Extract<APITextChannel, object> | Extract<APIThreadChannel, object>"},{"heading":"properties","content":"null"},{"heading":"properties","content":"The raw data of the channel."},{"heading":"properties","content":"BaseGuildChannel.rawData"},{"heading":"properties","content":"topic?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The topic of the channel."},{"heading":"properties","content":"-"},{"heading":"properties","content":"type?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"Type"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The type of the channel."},{"heading":"properties","content":"BaseGuildChannel.type"},{"heading":"guild","content":"get guild(): Guild"},{"heading":"guild","content":"The guild this channel is in"},{"heading":"returns-1","content":"Guild"},{"heading":"inherited-from-1","content":"BaseGuildChannel.guild"},{"heading":"createinvite","content":"createInvite(options?): Promise<APIExtendedInvite>"},{"heading":"createinvite","content":"Create an invite for the channel"},{"heading":"parameters-1","content":"Parameter"},{"heading":"parameters-1","content":"Type"},{"heading":"parameters-1","content":"options?"},{"heading":"parameters-1","content":"RESTPostAPIChannelInviteJSONBody"},{"heading":"returns-2","content":"Promise<APIExtendedInvite>"},{"heading":"inherited-from-2","content":"BaseGuildChannel.createInvite"},{"heading":"fetch","content":"fetch(): Promise<void>"},{"heading":"fetch","content":"Fetches the channel from the API."},{"heading":"returns-3","content":"Promise<void>"},{"heading":"returns-3","content":"The channel data."},{"heading":"inherited-from-3","content":"BaseGuildChannel.fetch"},{"heading":"getinvites","content":"getInvites(): Promise<RESTGetAPIGuildInvitesResult>"},{"heading":"getinvites","content":"Get the invites for the channel"},{"heading":"returns-4","content":"Promise<RESTGetAPIGuildInvitesResult>"},{"heading":"inherited-from-4","content":"BaseGuildChannel.getInvites"},{"heading":"send","content":"send(): Promise<void>"},{"heading":"send","content":"You cannot send a message directly to a forum or media channel, so this method throws an error.\nUse GuildThreadChannel.send instead, or the alias GuildThreadOnlyChannel.sendToPost instead, to send a message to the channel's posts."},{"heading":"returns-5","content":"Promise<void>"},{"heading":"overrides","content":"BaseGuildChannel.send"},{"heading":"sendtopost","content":"sendToPost(message, postId): Promise<void>"},{"heading":"sendtopost","content":"Send a message to a post in the channel"},{"heading":"parameters-2","content":"Parameter"},{"heading":"parameters-2","content":"Type"},{"heading":"parameters-2","content":"message"},{"heading":"parameters-2","content":"APIMessage"},{"heading":"parameters-2","content":"postId"},{"heading":"parameters-2","content":"string"},{"heading":"returns-6","content":"Promise<void>"},{"heading":"remarks","content":"This is an alias for GuildThreadChannel.send that will fetch the channel, but if you already have the channel, you can use GuildThreadChannel.send instead."},{"heading":"setdata","content":"protected setData(data): void"},{"heading":"parameters-3","content":"Parameter"},{"heading":"parameters-3","content":"Type"},{"heading":"parameters-3","content":"data"},{"heading":"parameters-3","content":"APIGuildChannel<Type>"},{"heading":"returns-7","content":"void"},{"heading":"inherited-from-5","content":"BaseGuildChannel.setData"},{"heading":"setmorespecificdata","content":"abstract protected setMoreSpecificData(data): void"},{"heading":"parameters-4","content":"Parameter"},{"heading":"parameters-4","content":"Type"},{"heading":"parameters-4","content":"data"},{"heading":"parameters-4","content":"APIThreadOnlyChannel<Type>"},{"heading":"returns-8","content":"void"},{"heading":"setname","content":"setName(name): Promise<void>"},{"heading":"setname","content":"Set the name of the channel"},{"heading":"parameters-5","content":"Parameter"},{"heading":"parameters-5","content":"Type"},{"heading":"parameters-5","content":"Description"},{"heading":"parameters-5","content":"name"},{"heading":"parameters-5","content":"string"},{"heading":"parameters-5","content":"The new name of the channel"},{"heading":"returns-9","content":"Promise<void>"},{"heading":"inherited-from-6","content":"BaseGuildChannel.setName"},{"heading":"setnsfw","content":"setNsfw(nsfw): Promise<void>"},{"heading":"setnsfw","content":"Set whether the channel is nsfw"},{"heading":"parameters-6","content":"Parameter"},{"heading":"parameters-6","content":"Type"},{"heading":"parameters-6","content":"Description"},{"heading":"parameters-6","content":"nsfw"},{"heading":"parameters-6","content":"boolean"},{"heading":"parameters-6","content":"The new nsfw status of the channel"},{"heading":"returns-10","content":"Promise<void>"},{"heading":"inherited-from-7","content":"BaseGuildChannel.setNsfw"},{"heading":"setparent","content":"setParent(parent): Promise<void>"},{"heading":"setparent","content":"Set the parent ID of the channel"},{"heading":"parameters-7","content":"Parameter"},{"heading":"parameters-7","content":"Type"},{"heading":"parameters-7","content":"Description"},{"heading":"parameters-7","content":"parent"},{"heading":"parameters-7","content":"string | GuildCategoryChannel"},{"heading":"parameters-7","content":"The new category channel or ID to set"},{"heading":"returns-11","content":"Promise<void>"},{"heading":"inherited-from-8","content":"BaseGuildChannel.setParent"},{"heading":"setposition","content":"setPosition(position): Promise<void>"},{"heading":"setposition","content":"Set the position of the channel"},{"heading":"parameters-8","content":"Parameter"},{"heading":"parameters-8","content":"Type"},{"heading":"parameters-8","content":"Description"},{"heading":"parameters-8","content":"position"},{"heading":"parameters-8","content":"number"},{"heading":"parameters-8","content":"The new position of the channel"},{"heading":"returns-12","content":"Promise<void>"},{"heading":"inherited-from-9","content":"BaseGuildChannel.setPosition"},{"heading":"setspecificdata","content":"protected setSpecificData(data): void"},{"heading":"parameters-9","content":"Parameter"},{"heading":"parameters-9","content":"Type"},{"heading":"parameters-9","content":"data"},{"heading":"parameters-9","content":"APIThreadOnlyChannel<Type>"},{"heading":"returns-13","content":"void"},{"heading":"overrides-1","content":"BaseGuildChannel.setSpecificData"},{"heading":"triggertyping","content":"triggerTyping(): Promise<void>"},{"heading":"triggertyping","content":"Trigger a typing indicator in the channel (this will expire after 10 seconds)"},{"heading":"returns-14","content":"Promise<void>"},{"heading":"inherited-from-10","content":"BaseGuildChannel.triggerTyping"}],"headings":[{"id":"extends","content":"Extends"},{"id":"extended-by","content":"Extended by"},{"id":"type-parameters","content":"Type Parameters"},{"id":"constructors","content":"Constructors"},{"id":"new-guildthreadonlychannel","content":"new GuildThreadOnlyChannel()"},{"id":"parameters","content":"Parameters"},{"id":"returns","content":"Returns"},{"id":"inherited-from","content":"Inherited from"},{"id":"properties","content":"Properties"},{"id":"accessors","content":"Accessors"},{"id":"guild","content":"guild"},{"id":"returns-1","content":"Returns"},{"id":"inherited-from-1","content":"Inherited from"},{"id":"methods","content":"Methods"},{"id":"createinvite","content":"createInvite()"},{"id":"parameters-1","content":"Parameters"},{"id":"returns-2","content":"Returns"},{"id":"inherited-from-2","content":"Inherited from"},{"id":"fetch","content":"fetch()"},{"id":"returns-3","content":"Returns"},{"id":"inherited-from-3","content":"Inherited from"},{"id":"getinvites","content":"getInvites()"},{"id":"returns-4","content":"Returns"},{"id":"inherited-from-4","content":"Inherited from"},{"id":"send","content":"send()"},{"id":"returns-5","content":"Returns"},{"id":"overrides","content":"Overrides"},{"id":"sendtopost","content":"sendToPost()"},{"id":"parameters-2","content":"Parameters"},{"id":"returns-6","content":"Returns"},{"id":"remarks","content":"Remarks"},{"id":"setdata","content":"setData()"},{"id":"parameters-3","content":"Parameters"},{"id":"returns-7","content":"Returns"},{"id":"inherited-from-5","content":"Inherited from"},{"id":"setmorespecificdata","content":"setMoreSpecificData()"},{"id":"parameters-4","content":"Parameters"},{"id":"returns-8","content":"Returns"},{"id":"setname","content":"setName()"},{"id":"parameters-5","content":"Parameters"},{"id":"returns-9","content":"Returns"},{"id":"inherited-from-6","content":"Inherited from"},{"id":"setnsfw","content":"setNsfw()"},{"id":"parameters-6","content":"Parameters"},{"id":"returns-10","content":"Returns"},{"id":"inherited-from-7","content":"Inherited from"},{"id":"setparent","content":"setParent()"},{"id":"parameters-7","content":"Parameters"},{"id":"returns-11","content":"Returns"},{"id":"inherited-from-8","content":"Inherited from"},{"id":"setposition","content":"setPosition()"},{"id":"parameters-8","content":"Parameters"},{"id":"returns-12","content":"Returns"},{"id":"inherited-from-9","content":"Inherited from"},{"id":"setspecificdata","content":"setSpecificData()"},{"id":"parameters-9","content":"Parameters"},{"id":"returns-13","content":"Returns"},{"id":"overrides-1","content":"Overrides"},{"id":"triggertyping","content":"triggerTyping()"},{"id":"returns-14","content":"Returns"},{"id":"inherited-from-10","content":"Inherited from"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/api/classes/GuildVoiceChannel.mdx","data":{"frontmatter":{"title":"GuildVoiceChannel","index":false},"toc":[{"title":"Extends","url":"#extends","depth":2},{"title":"Constructors","url":"#constructors","depth":2},{"title":"new GuildVoiceChannel()","url":"#new-guildvoicechannel","depth":3},{"title":"Parameters","url":"#parameters","depth":4},{"title":"Returns","url":"#returns","depth":4},{"title":"Inherited from","url":"#inherited-from","depth":4},{"title":"Properties","url":"#properties","depth":2},{"title":"Accessors","url":"#accessors","depth":2},{"title":"guild","url":"#guild","depth":3},{"title":"Returns","url":"#returns-1","depth":4},{"title":"Inherited from","url":"#inherited-from-1","depth":4},{"title":"Methods","url":"#methods","depth":2},{"title":"createInvite()","url":"#createinvite","depth":3},{"title":"Parameters","url":"#parameters-1","depth":4},{"title":"Returns","url":"#returns-2","depth":4},{"title":"Inherited from","url":"#inherited-from-2","depth":4},{"title":"fetch()","url":"#fetch","depth":3},{"title":"Returns","url":"#returns-3","depth":4},{"title":"Inherited from","url":"#inherited-from-3","depth":4},{"title":"getInvites()","url":"#getinvites","depth":3},{"title":"Returns","url":"#returns-4","depth":4},{"title":"Inherited from","url":"#inherited-from-4","depth":4},{"title":"send()","url":"#send","depth":3},{"title":"Parameters","url":"#parameters-2","depth":4},{"title":"Returns","url":"#returns-5","depth":4},{"title":"Inherited from","url":"#inherited-from-5","depth":4},{"title":"setData()","url":"#setdata","depth":3},{"title":"Parameters","url":"#parameters-3","depth":4},{"title":"Returns","url":"#returns-6","depth":4},{"title":"Inherited from","url":"#inherited-from-6","depth":4},{"title":"setName()","url":"#setname","depth":3},{"title":"Parameters","url":"#parameters-4","depth":4},{"title":"Returns","url":"#returns-7","depth":4},{"title":"Inherited from","url":"#inherited-from-7","depth":4},{"title":"setNsfw()","url":"#setnsfw","depth":3},{"title":"Parameters","url":"#parameters-5","depth":4},{"title":"Returns","url":"#returns-8","depth":4},{"title":"Inherited from","url":"#inherited-from-8","depth":4},{"title":"setParent()","url":"#setparent","depth":3},{"title":"Parameters","url":"#parameters-6","depth":4},{"title":"Returns","url":"#returns-9","depth":4},{"title":"Inherited from","url":"#inherited-from-9","depth":4},{"title":"setPosition()","url":"#setposition","depth":3},{"title":"Parameters","url":"#parameters-7","depth":4},{"title":"Returns","url":"#returns-10","depth":4},{"title":"Inherited from","url":"#inherited-from-10","depth":4},{"title":"setSpecificData()","url":"#setspecificdata","depth":3},{"title":"Returns","url":"#returns-11","depth":4},{"title":"Overrides","url":"#overrides","depth":4},{"title":"triggerTyping()","url":"#triggertyping","depth":3},{"title":"Returns","url":"#returns-12","depth":4},{"title":"Inherited from","url":"#inherited-from-11","depth":4}],"structuredData":{"contents":[{"heading":"extends","content":"BaseGuildChannel<ChannelType.GuildVoice>"},{"heading":"new-guildvoicechannel","content":"new GuildVoiceChannel(client, rawDataOrId): GuildVoiceChannel"},{"heading":"parameters","content":"Parameter"},{"heading":"parameters","content":"Type"},{"heading":"parameters","content":"client"},{"heading":"parameters","content":"Client"},{"heading":"parameters","content":"rawDataOrId"},{"heading":"parameters","content":"string | APIGuildVoiceChannel"},{"heading":"returns","content":"GuildVoiceChannel"},{"heading":"inherited-from","content":"BaseGuildChannel.constructor"},{"heading":"properties","content":"Property"},{"heading":"properties","content":"Modifier"},{"heading":"properties","content":"Type"},{"heading":"properties","content":"Default value"},{"heading":"properties","content":"Description"},{"heading":"properties","content":"Inherited from"},{"heading":"properties","content":"client"},{"heading":"properties","content":"public"},{"heading":"properties","content":"Client"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseGuildChannel.client"},{"heading":"properties","content":"flags?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | number"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The flags of the channel in a bitfield. See https://discord.com/developers/docs/resources/channel#channel-object-channel-flags"},{"heading":"properties","content":"BaseGuildChannel.flags"},{"heading":"properties","content":"guildId?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The ID of the guild this channel is in"},{"heading":"properties","content":"BaseGuildChannel.guildId"},{"heading":"properties","content":"id"},{"heading":"properties","content":"public"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The id of the channel."},{"heading":"properties","content":"BaseGuildChannel.id"},{"heading":"properties","content":"name?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The name of the channel."},{"heading":"properties","content":"BaseGuildChannel.name"},{"heading":"properties","content":"nsfw?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"Whether the channel is marked as nsfw."},{"heading":"properties","content":"BaseGuildChannel.nsfw"},{"heading":"properties","content":"parentId?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The ID of the parent category for the channel."},{"heading":"properties","content":"BaseGuildChannel.parentId"},{"heading":"properties","content":"partial"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"Whether the channel is a partial channel (meaning it does not have all the data). If this is true, you should use BaseChannel.fetch to get the full data of the channel."},{"heading":"properties","content":"BaseGuildChannel.partial"},{"heading":"properties","content":"position?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"number"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The position of the channel in the channel list."},{"heading":"properties","content":"BaseGuildChannel.position"},{"heading":"properties","content":"rawData"},{"heading":"properties","content":"protected"},{"heading":"properties","content":"null | APIGuildVoiceChannel"},{"heading":"properties","content":"null"},{"heading":"properties","content":"The raw data of the channel."},{"heading":"properties","content":"BaseGuildChannel.rawData"},{"heading":"properties","content":"type?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"GuildVoice"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The type of the channel."},{"heading":"properties","content":"BaseGuildChannel.type"},{"heading":"guild","content":"get guild(): Guild"},{"heading":"guild","content":"The guild this channel is in"},{"heading":"returns-1","content":"Guild"},{"heading":"inherited-from-1","content":"BaseGuildChannel.guild"},{"heading":"createinvite","content":"createInvite(options?): Promise<APIExtendedInvite>"},{"heading":"createinvite","content":"Create an invite for the channel"},{"heading":"parameters-1","content":"Parameter"},{"heading":"parameters-1","content":"Type"},{"heading":"parameters-1","content":"options?"},{"heading":"parameters-1","content":"RESTPostAPIChannelInviteJSONBody"},{"heading":"returns-2","content":"Promise<APIExtendedInvite>"},{"heading":"inherited-from-2","content":"BaseGuildChannel.createInvite"},{"heading":"fetch","content":"fetch(): Promise<void>"},{"heading":"fetch","content":"Fetches the channel from the API."},{"heading":"returns-3","content":"Promise<void>"},{"heading":"returns-3","content":"The channel data."},{"heading":"inherited-from-3","content":"BaseGuildChannel.fetch"},{"heading":"getinvites","content":"getInvites(): Promise<RESTGetAPIGuildInvitesResult>"},{"heading":"getinvites","content":"Get the invites for the channel"},{"heading":"returns-4","content":"Promise<RESTGetAPIGuildInvitesResult>"},{"heading":"inherited-from-4","content":"BaseGuildChannel.getInvites"},{"heading":"send","content":"send(message): Promise<void>"},{"heading":"send","content":"Send a message to the channel"},{"heading":"parameters-2","content":"Parameter"},{"heading":"parameters-2","content":"Type"},{"heading":"parameters-2","content":"message"},{"heading":"parameters-2","content":"APIMessage"},{"heading":"returns-5","content":"Promise<void>"},{"heading":"inherited-from-5","content":"BaseGuildChannel.send"},{"heading":"setdata","content":"protected setData(data): void"},{"heading":"parameters-3","content":"Parameter"},{"heading":"parameters-3","content":"Type"},{"heading":"parameters-3","content":"data"},{"heading":"parameters-3","content":"APIGuildChannel<GuildVoice>"},{"heading":"returns-6","content":"void"},{"heading":"inherited-from-6","content":"BaseGuildChannel.setData"},{"heading":"setname","content":"setName(name): Promise<void>"},{"heading":"setname","content":"Set the name of the channel"},{"heading":"parameters-4","content":"Parameter"},{"heading":"parameters-4","content":"Type"},{"heading":"parameters-4","content":"Description"},{"heading":"parameters-4","content":"name"},{"heading":"parameters-4","content":"string"},{"heading":"parameters-4","content":"The new name of the channel"},{"heading":"returns-7","content":"Promise<void>"},{"heading":"inherited-from-7","content":"BaseGuildChannel.setName"},{"heading":"setnsfw","content":"setNsfw(nsfw): Promise<void>"},{"heading":"setnsfw","content":"Set whether the channel is nsfw"},{"heading":"parameters-5","content":"Parameter"},{"heading":"parameters-5","content":"Type"},{"heading":"parameters-5","content":"Description"},{"heading":"parameters-5","content":"nsfw"},{"heading":"parameters-5","content":"boolean"},{"heading":"parameters-5","content":"The new nsfw status of the channel"},{"heading":"returns-8","content":"Promise<void>"},{"heading":"inherited-from-8","content":"BaseGuildChannel.setNsfw"},{"heading":"setparent","content":"setParent(parent): Promise<void>"},{"heading":"setparent","content":"Set the parent ID of the channel"},{"heading":"parameters-6","content":"Parameter"},{"heading":"parameters-6","content":"Type"},{"heading":"parameters-6","content":"Description"},{"heading":"parameters-6","content":"parent"},{"heading":"parameters-6","content":"string | GuildCategoryChannel"},{"heading":"parameters-6","content":"The new category channel or ID to set"},{"heading":"returns-9","content":"Promise<void>"},{"heading":"inherited-from-9","content":"BaseGuildChannel.setParent"},{"heading":"setposition","content":"setPosition(position): Promise<void>"},{"heading":"setposition","content":"Set the position of the channel"},{"heading":"parameters-7","content":"Parameter"},{"heading":"parameters-7","content":"Type"},{"heading":"parameters-7","content":"Description"},{"heading":"parameters-7","content":"position"},{"heading":"parameters-7","content":"number"},{"heading":"parameters-7","content":"The new position of the channel"},{"heading":"returns-10","content":"Promise<void>"},{"heading":"inherited-from-10","content":"BaseGuildChannel.setPosition"},{"heading":"setspecificdata","content":"protected setSpecificData(): void"},{"heading":"returns-11","content":"void"},{"heading":"overrides","content":"BaseGuildChannel.setSpecificData"},{"heading":"triggertyping","content":"triggerTyping(): Promise<void>"},{"heading":"triggertyping","content":"Trigger a typing indicator in the channel (this will expire after 10 seconds)"},{"heading":"returns-12","content":"Promise<void>"},{"heading":"inherited-from-11","content":"BaseGuildChannel.triggerTyping"}],"headings":[{"id":"extends","content":"Extends"},{"id":"constructors","content":"Constructors"},{"id":"new-guildvoicechannel","content":"new GuildVoiceChannel()"},{"id":"parameters","content":"Parameters"},{"id":"returns","content":"Returns"},{"id":"inherited-from","content":"Inherited from"},{"id":"properties","content":"Properties"},{"id":"accessors","content":"Accessors"},{"id":"guild","content":"guild"},{"id":"returns-1","content":"Returns"},{"id":"inherited-from-1","content":"Inherited from"},{"id":"methods","content":"Methods"},{"id":"createinvite","content":"createInvite()"},{"id":"parameters-1","content":"Parameters"},{"id":"returns-2","content":"Returns"},{"id":"inherited-from-2","content":"Inherited from"},{"id":"fetch","content":"fetch()"},{"id":"returns-3","content":"Returns"},{"id":"inherited-from-3","content":"Inherited from"},{"id":"getinvites","content":"getInvites()"},{"id":"returns-4","content":"Returns"},{"id":"inherited-from-4","content":"Inherited from"},{"id":"send","content":"send()"},{"id":"parameters-2","content":"Parameters"},{"id":"returns-5","content":"Returns"},{"id":"inherited-from-5","content":"Inherited from"},{"id":"setdata","content":"setData()"},{"id":"parameters-3","content":"Parameters"},{"id":"returns-6","content":"Returns"},{"id":"inherited-from-6","content":"Inherited from"},{"id":"setname","content":"setName()"},{"id":"parameters-4","content":"Parameters"},{"id":"returns-7","content":"Returns"},{"id":"inherited-from-7","content":"Inherited from"},{"id":"setnsfw","content":"setNsfw()"},{"id":"parameters-5","content":"Parameters"},{"id":"returns-8","content":"Returns"},{"id":"inherited-from-8","content":"Inherited from"},{"id":"setparent","content":"setParent()"},{"id":"parameters-6","content":"Parameters"},{"id":"returns-9","content":"Returns"},{"id":"inherited-from-9","content":"Inherited from"},{"id":"setposition","content":"setPosition()"},{"id":"parameters-7","content":"Parameters"},{"id":"returns-10","content":"Returns"},{"id":"inherited-from-10","content":"Inherited from"},{"id":"setspecificdata","content":"setSpecificData()"},{"id":"returns-11","content":"Returns"},{"id":"overrides","content":"Overrides"},{"id":"triggertyping","content":"triggerTyping()"},{"id":"returns-12","content":"Returns"},{"id":"inherited-from-11","content":"Inherited from"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/api/classes/LinkButton.mdx","data":{"frontmatter":{"title":"LinkButton","index":false},"toc":[{"title":"Extends","url":"#extends","depth":2},{"title":"Constructors","url":"#constructors","depth":2},{"title":"new LinkButton()","url":"#new-linkbutton","depth":3},{"title":"Parameters","url":"#parameters","depth":4},{"title":"Returns","url":"#returns","depth":4},{"title":"Inherited from","url":"#inherited-from","depth":4},{"title":"Properties","url":"#properties","depth":2},{"title":"Methods","url":"#methods","depth":2},{"title":"createId()","url":"#createid","depth":3},{"title":"Parameters","url":"#parameters-1","depth":4},{"title":"Returns","url":"#returns-1","depth":4},{"title":"Inherited from","url":"#inherited-from-1","depth":4},{"title":"serialize()","url":"#serialize","depth":3},{"title":"Returns","url":"#returns-2","depth":4},{"title":"Overrides","url":"#overrides","depth":4}],"structuredData":{"contents":[{"heading":"extends","content":"BaseButton"},{"heading":"new-linkbutton","content":"new LinkButton(data?): LinkButton"},{"heading":"parameters","content":"Parameter"},{"heading":"parameters","content":"Type"},{"heading":"parameters","content":"data?"},{"heading":"parameters","content":"object"},{"heading":"parameters","content":"data.additionalData?"},{"heading":"parameters","content":"ComponentAdditionalData"},{"heading":"returns","content":"LinkButton"},{"heading":"inherited-from","content":"BaseButton.constructor"},{"heading":"properties","content":"Property"},{"heading":"properties","content":"Modifier"},{"heading":"properties","content":"Type"},{"heading":"properties","content":"Default value"},{"heading":"properties","content":"Description"},{"heading":"properties","content":"Overrides"},{"heading":"properties","content":"Inherited from"},{"heading":"properties","content":"additionalData"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | ComponentAdditionalData"},{"heading":"properties","content":"null"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseButton.additionalData"},{"heading":"properties","content":"customId"},{"heading":"properties","content":"public"},{"heading":"properties","content":"string"},{"heading":"properties","content":"\"\""},{"heading":"properties","content":"The custom ID of the component"},{"heading":"properties","content":"BaseButton.customId"},{"heading":"properties","content":"-"},{"heading":"properties","content":"defer"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"false"},{"heading":"properties","content":"Whether the component response should be automatically deferred"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseButton.defer"},{"heading":"properties","content":"disabled"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"false"},{"heading":"properties","content":"The disabled state of the button"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseButton.disabled"},{"heading":"properties","content":"emoji?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"object"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The emoji of the button"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseButton.emoji"},{"heading":"properties","content":"emoji.animated?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"emoji.id?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"emoji.name"},{"heading":"properties","content":"public"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"ephemeral"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"false"},{"heading":"properties","content":"Whether the component response should be ephemeral"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseButton.ephemeral"},{"heading":"properties","content":"label"},{"heading":"properties","content":"abstract"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The label of the button"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseButton.label"},{"heading":"properties","content":"style"},{"heading":"properties","content":"public"},{"heading":"properties","content":"Link"},{"heading":"properties","content":"ButtonStyle.Link"},{"heading":"properties","content":"The style of the button"},{"heading":"properties","content":"BaseButton.style"},{"heading":"properties","content":"-"},{"heading":"properties","content":"type"},{"heading":"properties","content":"public"},{"heading":"properties","content":"ComponentType"},{"heading":"properties","content":"ComponentType.Button"},{"heading":"properties","content":"The type of the component"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseButton.type"},{"heading":"properties","content":"url"},{"heading":"properties","content":"abstract"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The URL that the button links to"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"createid","content":"createId(additionalData): string"},{"heading":"createid","content":"Create a custom ID to use for this component that embeds additional data that you want to be handed"},{"heading":"parameters-1","content":"Parameter"},{"heading":"parameters-1","content":"Type"},{"heading":"parameters-1","content":"Description"},{"heading":"parameters-1","content":"additionalData"},{"heading":"parameters-1","content":"null | ComponentAdditionalData"},{"heading":"parameters-1","content":"The additional data that you want to be passed in this component's custom ID"},{"heading":"returns-1","content":"string"},{"heading":"returns-1","content":"The custom ID to use"},{"heading":"inherited-from-1","content":"BaseButton.createId"},{"heading":"serialize","content":"serialize(): APIButtonComponentWithURL"},{"heading":"returns-2","content":"APIButtonComponentWithURL"},{"heading":"overrides","content":"BaseButton.serialize"}],"headings":[{"id":"extends","content":"Extends"},{"id":"constructors","content":"Constructors"},{"id":"new-linkbutton","content":"new LinkButton()"},{"id":"parameters","content":"Parameters"},{"id":"returns","content":"Returns"},{"id":"inherited-from","content":"Inherited from"},{"id":"properties","content":"Properties"},{"id":"methods","content":"Methods"},{"id":"createid","content":"createId()"},{"id":"parameters-1","content":"Parameters"},{"id":"returns-1","content":"Returns"},{"id":"inherited-from-1","content":"Inherited from"},{"id":"serialize","content":"serialize()"},{"id":"returns-2","content":"Returns"},{"id":"overrides","content":"Overrides"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/api/classes/MentionableSelectMenu.mdx","data":{"frontmatter":{"title":"MentionableSelectMenu","index":false},"toc":[{"title":"Extends","url":"#extends","depth":2},{"title":"Constructors","url":"#constructors","depth":2},{"title":"new MentionableSelectMenu()","url":"#new-mentionableselectmenu","depth":3},{"title":"Parameters","url":"#parameters","depth":4},{"title":"Returns","url":"#returns","depth":4},{"title":"Inherited from","url":"#inherited-from","depth":4},{"title":"Properties","url":"#properties","depth":2},{"title":"Methods","url":"#methods","depth":2},{"title":"createId()","url":"#createid","depth":3},{"title":"Parameters","url":"#parameters-1","depth":4},{"title":"Returns","url":"#returns-1","depth":4},{"title":"Inherited from","url":"#inherited-from-1","depth":4},{"title":"run()","url":"#run","depth":3},{"title":"Parameters","url":"#parameters-2","depth":4},{"title":"Returns","url":"#returns-2","depth":4},{"title":"Overrides","url":"#overrides","depth":4},{"title":"serialize()","url":"#serialize","depth":3},{"title":"Returns","url":"#returns-3","depth":4},{"title":"Inherited from","url":"#inherited-from-2","depth":4},{"title":"serializeOptions()","url":"#serializeoptions","depth":3},{"title":"Returns","url":"#returns-4","depth":4},{"title":"Overrides","url":"#overrides-1","depth":4}],"structuredData":{"contents":[{"heading":"extends","content":"AnySelectMenu"},{"heading":"new-mentionableselectmenu","content":"new MentionableSelectMenu(data?): MentionableSelectMenu"},{"heading":"parameters","content":"Parameter"},{"heading":"parameters","content":"Type"},{"heading":"parameters","content":"data?"},{"heading":"parameters","content":"object"},{"heading":"parameters","content":"data.additionalData?"},{"heading":"parameters","content":"ComponentAdditionalData"},{"heading":"returns","content":"MentionableSelectMenu"},{"heading":"inherited-from","content":"AnySelectMenu.constructor"},{"heading":"properties","content":"Property"},{"heading":"properties","content":"Modifier"},{"heading":"properties","content":"Type"},{"heading":"properties","content":"Default value"},{"heading":"properties","content":"Description"},{"heading":"properties","content":"Overrides"},{"heading":"properties","content":"Inherited from"},{"heading":"properties","content":"additionalData"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | ComponentAdditionalData"},{"heading":"properties","content":"null"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"AnySelectMenu.additionalData"},{"heading":"properties","content":"customId"},{"heading":"properties","content":"abstract"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The custom ID of the component"},{"heading":"properties","content":"-"},{"heading":"properties","content":"AnySelectMenu.customId"},{"heading":"properties","content":"defaultValues?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"APISelectMenuDefaultValue<Role | User>[]"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"defer"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"false"},{"heading":"properties","content":"Whether the component response should be automatically deferred"},{"heading":"properties","content":"-"},{"heading":"properties","content":"AnySelectMenu.defer"},{"heading":"properties","content":"disabled?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"AnySelectMenu.disabled"},{"heading":"properties","content":"ephemeral"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"false"},{"heading":"properties","content":"Whether the component response should be ephemeral"},{"heading":"properties","content":"-"},{"heading":"properties","content":"AnySelectMenu.ephemeral"},{"heading":"properties","content":"maxValues?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"number"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"AnySelectMenu.maxValues"},{"heading":"properties","content":"minValues?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"number"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"AnySelectMenu.minValues"},{"heading":"properties","content":"placeholder?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"AnySelectMenu.placeholder"},{"heading":"properties","content":"type"},{"heading":"properties","content":"public"},{"heading":"properties","content":"MentionableSelect"},{"heading":"properties","content":"ComponentType.MentionableSelect"},{"heading":"properties","content":"The type of the component"},{"heading":"properties","content":"AnySelectMenu.type"},{"heading":"properties","content":"-"},{"heading":"createid","content":"createId(additionalData): string"},{"heading":"createid","content":"Create a custom ID to use for this component that embeds additional data that you want to be handed"},{"heading":"parameters-1","content":"Parameter"},{"heading":"parameters-1","content":"Type"},{"heading":"parameters-1","content":"Description"},{"heading":"parameters-1","content":"additionalData"},{"heading":"parameters-1","content":"null | ComponentAdditionalData"},{"heading":"parameters-1","content":"The additional data that you want to be passed in this component's custom ID"},{"heading":"returns-1","content":"string"},{"heading":"returns-1","content":"The custom ID to use"},{"heading":"inherited-from-1","content":"AnySelectMenu.createId"},{"heading":"run","content":"abstract run(interaction): Promise<void>"},{"heading":"parameters-2","content":"Parameter"},{"heading":"parameters-2","content":"Type"},{"heading":"parameters-2","content":"interaction"},{"heading":"parameters-2","content":"MentionableSelectMenuInteraction"},{"heading":"returns-2","content":"Promise<void>"},{"heading":"overrides","content":"AnySelectMenu.run"},{"heading":"serialize","content":"serialize(): APISelectMenuComponent"},{"heading":"returns-3","content":"APISelectMenuComponent"},{"heading":"inherited-from-2","content":"AnySelectMenu.serialize"},{"heading":"serializeoptions","content":"serializeOptions(): object"},{"heading":"returns-4","content":"object"},{"heading":"returns-4","content":"Name"},{"heading":"returns-4","content":"Type"},{"heading":"returns-4","content":"default_values"},{"heading":"returns-4","content":"undefined | APISelectMenuDefaultValue<Role | User>[]"},{"heading":"returns-4","content":"type"},{"heading":"returns-4","content":"MentionableSelect"},{"heading":"overrides-1","content":"AnySelectMenu.serializeOptions"}],"headings":[{"id":"extends","content":"Extends"},{"id":"constructors","content":"Constructors"},{"id":"new-mentionableselectmenu","content":"new MentionableSelectMenu()"},{"id":"parameters","content":"Parameters"},{"id":"returns","content":"Returns"},{"id":"inherited-from","content":"Inherited from"},{"id":"properties","content":"Properties"},{"id":"methods","content":"Methods"},{"id":"createid","content":"createId()"},{"id":"parameters-1","content":"Parameters"},{"id":"returns-1","content":"Returns"},{"id":"inherited-from-1","content":"Inherited from"},{"id":"run","content":"run()"},{"id":"parameters-2","content":"Parameters"},{"id":"returns-2","content":"Returns"},{"id":"overrides","content":"Overrides"},{"id":"serialize","content":"serialize()"},{"id":"returns-3","content":"Returns"},{"id":"inherited-from-2","content":"Inherited from"},{"id":"serializeoptions","content":"serializeOptions()"},{"id":"returns-4","content":"Returns"},{"id":"overrides-1","content":"Overrides"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/api/classes/MentionableSelectMenuInteraction.mdx","data":{"frontmatter":{"title":"MentionableSelectMenuInteraction","index":false},"toc":[{"title":"Extends","url":"#extends","depth":2},{"title":"Constructors","url":"#constructors","depth":2},{"title":"new MentionableSelectMenuInteraction()","url":"#new-mentionableselectmenuinteraction","depth":3},{"title":"Parameters","url":"#parameters","depth":4},{"title":"Returns","url":"#returns","depth":4},{"title":"Overrides","url":"#overrides","depth":4},{"title":"Properties","url":"#properties","depth":2},{"title":"Accessors","url":"#accessors","depth":2},{"title":"channel","url":"#channel","depth":3},{"title":"Returns","url":"#returns-1","depth":4},{"title":"Inherited from","url":"#inherited-from","depth":4},{"title":"guild","url":"#guild","depth":3},{"title":"Returns","url":"#returns-2","depth":4},{"title":"Inherited from","url":"#inherited-from-1","depth":4},{"title":"member","url":"#member","depth":3},{"title":"Returns","url":"#returns-3","depth":4},{"title":"Inherited from","url":"#inherited-from-2","depth":4},{"title":"message","url":"#message","depth":3},{"title":"Returns","url":"#returns-4","depth":4},{"title":"Inherited from","url":"#inherited-from-3","depth":4},{"title":"user","url":"#user","depth":3},{"title":"Returns","url":"#returns-5","depth":4},{"title":"Inherited from","url":"#inherited-from-4","depth":4},{"title":"values","url":"#values","depth":3},{"title":"Returns","url":"#returns-6","depth":4},{"title":"Overrides","url":"#overrides-1","depth":4},{"title":"Methods","url":"#methods","depth":2},{"title":"defer()","url":"#defer","depth":3},{"title":"Returns","url":"#returns-7","depth":4},{"title":"Inherited from","url":"#inherited-from-5","depth":4},{"title":"reply()","url":"#reply","depth":3},{"title":"Parameters","url":"#parameters-1","depth":4},{"title":"Returns","url":"#returns-8","depth":4},{"title":"Inherited from","url":"#inherited-from-6","depth":4},{"title":"showModal()","url":"#showmodal","depth":3},{"title":"Parameters","url":"#parameters-2","depth":4},{"title":"Returns","url":"#returns-9","depth":4},{"title":"Inherited from","url":"#inherited-from-7","depth":4}],"structuredData":{"contents":[{"heading":"","content":"This is the base type interaction, all interaction types extend from this"},{"heading":"extends","content":"AnySelectMenuInteraction"},{"heading":"new-mentionableselectmenuinteraction","content":"new MentionableSelectMenuInteraction(client, data): MentionableSelectMenuInteraction"},{"heading":"parameters","content":"Parameter"},{"heading":"parameters","content":"Type"},{"heading":"parameters","content":"client"},{"heading":"parameters","content":"Client"},{"heading":"parameters","content":"data"},{"heading":"parameters","content":"APIMessageComponentSelectMenuInteraction"},{"heading":"returns","content":"MentionableSelectMenuInteraction"},{"heading":"overrides","content":"AnySelectMenuInteraction.constructor"},{"heading":"properties","content":"Property"},{"heading":"properties","content":"Type"},{"heading":"properties","content":"Default value"},{"heading":"properties","content":"Description"},{"heading":"properties","content":"Inherited from"},{"heading":"properties","content":"_deferred"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"false"},{"heading":"properties","content":"Internal Whether the interaction is deferred already"},{"heading":"properties","content":"AnySelectMenuInteraction._deferred"},{"heading":"properties","content":"client"},{"heading":"properties","content":"Client"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"AnySelectMenuInteraction.client"},{"heading":"properties","content":"componentType"},{"heading":"properties","content":"ComponentType"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"AnySelectMenuInteraction.componentType"},{"heading":"properties","content":"customId"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"AnySelectMenuInteraction.customId"},{"heading":"properties","content":"rawData"},{"heading":"properties","content":"APIMessageComponentInteraction"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The raw data of the interaction"},{"heading":"properties","content":"AnySelectMenuInteraction.rawData"},{"heading":"properties","content":"type"},{"heading":"properties","content":"InteractionType"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The type of interaction"},{"heading":"properties","content":"AnySelectMenuInteraction.type"},{"heading":"properties","content":"userId"},{"heading":"properties","content":"undefined | string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The user who sent the interaction"},{"heading":"properties","content":"AnySelectMenuInteraction.userId"},{"heading":"channel","content":"get channel(): null | DmChannel | GuildCategoryChannel | GroupDmChannel | GuildTextChannel | GuildVoiceChannel | GuildAnnouncementChannel | GuildThreadChannel<ThreadChannelType> | GuildStageChannel | GuildForumChannel | GuildMediaChannel"},{"heading":"returns-1","content":"null | DmChannel | GuildCategoryChannel | GroupDmChannel | GuildTextChannel | GuildVoiceChannel | GuildAnnouncementChannel | GuildThreadChannel<ThreadChannelType> | GuildStageChannel | GuildForumChannel | GuildMediaChannel"},{"heading":"inherited-from","content":"AnySelectMenuInteraction.channel"},{"heading":"guild","content":"get guild(): null | Guild"},{"heading":"returns-2","content":"null | Guild"},{"heading":"inherited-from-1","content":"AnySelectMenuInteraction.guild"},{"heading":"member","content":"get member(): null | GuildMember"},{"heading":"returns-3","content":"null | GuildMember"},{"heading":"inherited-from-2","content":"AnySelectMenuInteraction.member"},{"heading":"message","content":"get message(): null | Message"},{"heading":"returns-4","content":"null | Message"},{"heading":"inherited-from-3","content":"AnySelectMenuInteraction.message"},{"heading":"user","content":"get user(): null | User"},{"heading":"returns-5","content":"null | User"},{"heading":"inherited-from-4","content":"AnySelectMenuInteraction.user"},{"heading":"values","content":"get values(): string[]"},{"heading":"values","content":"The raw IDs of the selected options (either role/string/channel IDs or the IDs you provided in your options)"},{"heading":"returns-6","content":"string[]"},{"heading":"overrides-1","content":"AnySelectMenuInteraction.values"},{"heading":"defer","content":"defer(): Promise<void>"},{"heading":"defer","content":"Internal"},{"heading":"defer","content":"Defer the interaction response. This is used automatically by commands that are set to defer.\nIf the interaction is already deferred, this will do nothing."},{"heading":"returns-7","content":"Promise<void>"},{"heading":"inherited-from-5","content":"AnySelectMenuInteraction.defer"},{"heading":"reply","content":"reply(data, options): Promise<void>"},{"heading":"reply","content":"Reply to an interaction.\nIf the interaction is deferred, this will edit the original response."},{"heading":"parameters-1","content":"Parameter"},{"heading":"parameters-1","content":"Type"},{"heading":"parameters-1","content":"Description"},{"heading":"parameters-1","content":"data"},{"heading":"parameters-1","content":"InteractionReplyData"},{"heading":"parameters-1","content":"The response data"},{"heading":"parameters-1","content":"options"},{"heading":"parameters-1","content":"InteractionReplyOptions"},{"heading":"parameters-1","content":"-"},{"heading":"returns-8","content":"Promise<void>"},{"heading":"inherited-from-6","content":"AnySelectMenuInteraction.reply"},{"heading":"showmodal","content":"showModal(modal): Promise<void>"},{"heading":"parameters-2","content":"Parameter"},{"heading":"parameters-2","content":"Type"},{"heading":"parameters-2","content":"modal"},{"heading":"parameters-2","content":"Modal"},{"heading":"returns-9","content":"Promise<void>"},{"heading":"inherited-from-7","content":"AnySelectMenuInteraction.showModal"}],"headings":[{"id":"extends","content":"Extends"},{"id":"constructors","content":"Constructors"},{"id":"new-mentionableselectmenuinteraction","content":"new MentionableSelectMenuInteraction()"},{"id":"parameters","content":"Parameters"},{"id":"returns","content":"Returns"},{"id":"overrides","content":"Overrides"},{"id":"properties","content":"Properties"},{"id":"accessors","content":"Accessors"},{"id":"channel","content":"channel"},{"id":"returns-1","content":"Returns"},{"id":"inherited-from","content":"Inherited from"},{"id":"guild","content":"guild"},{"id":"returns-2","content":"Returns"},{"id":"inherited-from-1","content":"Inherited from"},{"id":"member","content":"member"},{"id":"returns-3","content":"Returns"},{"id":"inherited-from-2","content":"Inherited from"},{"id":"message","content":"message"},{"id":"returns-4","content":"Returns"},{"id":"inherited-from-3","content":"Inherited from"},{"id":"user","content":"user"},{"id":"returns-5","content":"Returns"},{"id":"inherited-from-4","content":"Inherited from"},{"id":"values","content":"values"},{"id":"returns-6","content":"Returns"},{"id":"overrides-1","content":"Overrides"},{"id":"methods","content":"Methods"},{"id":"defer","content":"defer()"},{"id":"returns-7","content":"Returns"},{"id":"inherited-from-5","content":"Inherited from"},{"id":"reply","content":"reply()"},{"id":"parameters-1","content":"Parameters"},{"id":"returns-8","content":"Returns"},{"id":"inherited-from-6","content":"Inherited from"},{"id":"showmodal","content":"showModal()"},{"id":"parameters-2","content":"Parameters"},{"id":"returns-9","content":"Returns"},{"id":"inherited-from-7","content":"Inherited from"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/api/classes/Message.mdx","data":{"frontmatter":{"title":"Message","index":false},"toc":[{"title":"Extends","url":"#extends","depth":2},{"title":"Constructors","url":"#constructors","depth":2},{"title":"new Message()","url":"#new-message","depth":3},{"title":"Parameters","url":"#parameters","depth":4},{"title":"Returns","url":"#returns","depth":4},{"title":"Overrides","url":"#overrides","depth":4},{"title":"Properties","url":"#properties","depth":2},{"title":"Accessors","url":"#accessors","depth":2},{"title":"author","url":"#author","depth":3},{"title":"Returns","url":"#returns-1","depth":4},{"title":"Methods","url":"#methods","depth":2},{"title":"delete()","url":"#delete","depth":3},{"title":"Returns","url":"#returns-2","depth":4},{"title":"fetch()","url":"#fetch","depth":3},{"title":"Returns","url":"#returns-3","depth":4},{"title":"fetchChannel()","url":"#fetchchannel","depth":3},{"title":"Returns","url":"#returns-4","depth":4},{"title":"pin()","url":"#pin","depth":3},{"title":"Returns","url":"#returns-5","depth":4},{"title":"startThread()","url":"#startthread","depth":3},{"title":"Parameters","url":"#parameters-1","depth":4},{"title":"Returns","url":"#returns-6","depth":4},{"title":"unpin()","url":"#unpin","depth":3},{"title":"Returns","url":"#returns-7","depth":4}],"structuredData":{"contents":[{"heading":"extends","content":"Base"},{"heading":"new-message","content":"new Message(client, rawDataOrIds): Message"},{"heading":"parameters","content":"Parameter"},{"heading":"parameters","content":"Type"},{"heading":"parameters","content":"client"},{"heading":"parameters","content":"Client"},{"heading":"parameters","content":"rawDataOrIds"},{"heading":"parameters","content":"APIMessage | object"},{"heading":"returns","content":"Message"},{"heading":"overrides","content":"Base.constructor"},{"heading":"properties","content":"Property"},{"heading":"properties","content":"Type"},{"heading":"properties","content":"Description"},{"heading":"properties","content":"Inherited from"},{"heading":"properties","content":"channelId"},{"heading":"properties","content":"string"},{"heading":"properties","content":"The ID of the channel the message is in"},{"heading":"properties","content":"-"},{"heading":"properties","content":"client"},{"heading":"properties","content":"Client"},{"heading":"properties","content":"-"},{"heading":"properties","content":"Base.client"},{"heading":"properties","content":"id"},{"heading":"properties","content":"string"},{"heading":"properties","content":"The ID of the message"},{"heading":"properties","content":"-"},{"heading":"properties","content":"partial"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"Whether the message is a partial message (meaning it does not have all the data). If this is true, you should use Message.fetch to get the full data of the message."},{"heading":"properties","content":"-"},{"heading":"author","content":"get author(): null | User"},{"heading":"returns-1","content":"null | User"},{"heading":"delete","content":"delete(): Promise<unknown>"},{"heading":"delete","content":"Delete this message from Discord"},{"heading":"returns-2","content":"Promise<unknown>"},{"heading":"fetch","content":"fetch(): Promise<void>"},{"heading":"fetch","content":"Fetch updated data for this message.\nIf the message is partial, this will fetch all the data for the message and populate the fields.\nIf the message is not partial, all fields will be updated with new values from Discord."},{"heading":"returns-3","content":"Promise<void>"},{"heading":"fetchchannel","content":"fetchChannel(): Promise<null | DmChannel | GuildCategoryChannel | GroupDmChannel | GuildTextChannel | GuildVoiceChannel | GuildAnnouncementChannel | GuildThreadChannel<ThreadChannelType> | GuildStageChannel | GuildForumChannel | GuildMediaChannel>"},{"heading":"returns-4","content":"Promise<null | DmChannel | GuildCategoryChannel | GroupDmChannel | GuildTextChannel | GuildVoiceChannel | GuildAnnouncementChannel | GuildThreadChannel<ThreadChannelType> | GuildStageChannel | GuildForumChannel | GuildMediaChannel>"},{"heading":"pin","content":"pin(): Promise<void>"},{"heading":"pin","content":"Pin this message"},{"heading":"returns-5","content":"Promise<void>"},{"heading":"startthread","content":"startThread(data): Promise<GuildThreadChannel<ThreadChannelType>>"},{"heading":"startthread","content":"Start a thread with this message as the associated start message.\nIf you want to start a thread without a start message, use BaseGuildTextChannel.startThread"},{"heading":"parameters-1","content":"Parameter"},{"heading":"parameters-1","content":"Type"},{"heading":"parameters-1","content":"data"},{"heading":"parameters-1","content":"RESTPostAPIChannelThreadsJSONBody"},{"heading":"returns-6","content":"Promise<GuildThreadChannel<ThreadChannelType>>"},{"heading":"unpin","content":"unpin(): Promise<void>"},{"heading":"unpin","content":"Unpin this message"},{"heading":"returns-7","content":"Promise<void>"}],"headings":[{"id":"extends","content":"Extends"},{"id":"constructors","content":"Constructors"},{"id":"new-message","content":"new Message()"},{"id":"parameters","content":"Parameters"},{"id":"returns","content":"Returns"},{"id":"overrides","content":"Overrides"},{"id":"properties","content":"Properties"},{"id":"accessors","content":"Accessors"},{"id":"author","content":"author"},{"id":"returns-1","content":"Returns"},{"id":"methods","content":"Methods"},{"id":"delete","content":"delete()"},{"id":"returns-2","content":"Returns"},{"id":"fetch","content":"fetch()"},{"id":"returns-3","content":"Returns"},{"id":"fetchchannel","content":"fetchChannel()"},{"id":"returns-4","content":"Returns"},{"id":"pin","content":"pin()"},{"id":"returns-5","content":"Returns"},{"id":"startthread","content":"startThread()"},{"id":"parameters-1","content":"Parameters"},{"id":"returns-6","content":"Returns"},{"id":"unpin","content":"unpin()"},{"id":"returns-7","content":"Returns"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/api/classes/Modal.mdx","data":{"frontmatter":{"title":"Modal","index":false},"toc":[{"title":"Constructors","url":"#constructors","depth":2},{"title":"new Modal()","url":"#new-modal","depth":3},{"title":"Returns","url":"#returns","depth":4},{"title":"Properties","url":"#properties","depth":2},{"title":"Methods","url":"#methods","depth":2},{"title":"run()","url":"#run","depth":3},{"title":"Parameters","url":"#parameters","depth":4},{"title":"Returns","url":"#returns-1","depth":4},{"title":"serialize()","url":"#serialize","depth":3},{"title":"Returns","url":"#returns-2","depth":4}],"structuredData":{"contents":[{"heading":"new-modal","content":"new Modal(): Modal"},{"heading":"returns","content":"Modal"},{"heading":"properties","content":"Property"},{"heading":"properties","content":"Modifier"},{"heading":"properties","content":"Type"},{"heading":"properties","content":"Default value"},{"heading":"properties","content":"Description"},{"heading":"properties","content":"components"},{"heading":"properties","content":"public"},{"heading":"properties","content":"Row<TextInput>[]"},{"heading":"properties","content":"[]"},{"heading":"properties","content":"The components of the modal"},{"heading":"properties","content":"customId"},{"heading":"properties","content":"abstract"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The custom ID of the modal"},{"heading":"properties","content":"title"},{"heading":"properties","content":"abstract"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The title of the modal"},{"heading":"run","content":"abstract run(interaction): Promise<void>"},{"heading":"parameters","content":"Parameter"},{"heading":"parameters","content":"Type"},{"heading":"parameters","content":"interaction"},{"heading":"parameters","content":"ModalInteraction"},{"heading":"returns-1","content":"Promise<void>"},{"heading":"serialize","content":"serialize(): APIModalInteractionResponseCallbackData"},{"heading":"returns-2","content":"APIModalInteractionResponseCallbackData"}],"headings":[{"id":"constructors","content":"Constructors"},{"id":"new-modal","content":"new Modal()"},{"id":"returns","content":"Returns"},{"id":"properties","content":"Properties"},{"id":"methods","content":"Methods"},{"id":"run","content":"run()"},{"id":"parameters","content":"Parameters"},{"id":"returns-1","content":"Returns"},{"id":"serialize","content":"serialize()"},{"id":"returns-2","content":"Returns"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/api/classes/ModalInteraction.mdx","data":{"frontmatter":{"title":"ModalInteraction","index":false},"toc":[{"title":"Extends","url":"#extends","depth":2},{"title":"Constructors","url":"#constructors","depth":2},{"title":"new ModalInteraction()","url":"#new-modalinteraction","depth":3},{"title":"Parameters","url":"#parameters","depth":4},{"title":"Returns","url":"#returns","depth":4},{"title":"Overrides","url":"#overrides","depth":4},{"title":"Properties","url":"#properties","depth":2},{"title":"Accessors","url":"#accessors","depth":2},{"title":"channel","url":"#channel","depth":3},{"title":"Returns","url":"#returns-1","depth":4},{"title":"Inherited from","url":"#inherited-from","depth":4},{"title":"guild","url":"#guild","depth":3},{"title":"Returns","url":"#returns-2","depth":4},{"title":"Inherited from","url":"#inherited-from-1","depth":4},{"title":"member","url":"#member","depth":3},{"title":"Returns","url":"#returns-3","depth":4},{"title":"Inherited from","url":"#inherited-from-2","depth":4},{"title":"message","url":"#message","depth":3},{"title":"Returns","url":"#returns-4","depth":4},{"title":"Inherited from","url":"#inherited-from-3","depth":4},{"title":"user","url":"#user","depth":3},{"title":"Returns","url":"#returns-5","depth":4},{"title":"Inherited from","url":"#inherited-from-4","depth":4},{"title":"Methods","url":"#methods","depth":2},{"title":"defer()","url":"#defer","depth":3},{"title":"Returns","url":"#returns-6","depth":4},{"title":"Inherited from","url":"#inherited-from-5","depth":4},{"title":"reply()","url":"#reply","depth":3},{"title":"Parameters","url":"#parameters-1","depth":4},{"title":"Returns","url":"#returns-7","depth":4},{"title":"Inherited from","url":"#inherited-from-6","depth":4},{"title":"showModal()","url":"#showmodal","depth":3},{"title":"Parameters","url":"#parameters-2","depth":4},{"title":"Returns","url":"#returns-8","depth":4},{"title":"Inherited from","url":"#inherited-from-7","depth":4}],"structuredData":{"contents":[{"heading":"","content":"This is the base type interaction, all interaction types extend from this"},{"heading":"extends","content":"BaseInteraction<APIModalSubmitInteraction>"},{"heading":"new-modalinteraction","content":"new ModalInteraction(client, data): ModalInteraction"},{"heading":"parameters","content":"Parameter"},{"heading":"parameters","content":"Type"},{"heading":"parameters","content":"client"},{"heading":"parameters","content":"Client"},{"heading":"parameters","content":"data"},{"heading":"parameters","content":"APIModalSubmitInteraction"},{"heading":"returns","content":"ModalInteraction"},{"heading":"overrides","content":"BaseInteraction.constructor"},{"heading":"properties","content":"Property"},{"heading":"properties","content":"Type"},{"heading":"properties","content":"Default value"},{"heading":"properties","content":"Description"},{"heading":"properties","content":"Inherited from"},{"heading":"properties","content":"_deferred"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"false"},{"heading":"properties","content":"Internal Whether the interaction is deferred already"},{"heading":"properties","content":"BaseInteraction._deferred"},{"heading":"properties","content":"client"},{"heading":"properties","content":"Client"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseInteraction.client"},{"heading":"properties","content":"customId"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"rawData"},{"heading":"properties","content":"APIModalSubmitInteraction"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The raw data of the interaction"},{"heading":"properties","content":"BaseInteraction.rawData"},{"heading":"properties","content":"type"},{"heading":"properties","content":"InteractionType"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The type of interaction"},{"heading":"properties","content":"BaseInteraction.type"},{"heading":"properties","content":"userId"},{"heading":"properties","content":"undefined | string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The user who sent the interaction"},{"heading":"properties","content":"BaseInteraction.userId"},{"heading":"properties","content":"values"},{"heading":"properties","content":"object"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"channel","content":"get channel(): null | DmChannel | GuildCategoryChannel | GroupDmChannel | GuildTextChannel | GuildVoiceChannel | GuildAnnouncementChannel | GuildThreadChannel<ThreadChannelType> | GuildStageChannel | GuildForumChannel | GuildMediaChannel"},{"heading":"returns-1","content":"null | DmChannel | GuildCategoryChannel | GroupDmChannel | GuildTextChannel | GuildVoiceChannel | GuildAnnouncementChannel | GuildThreadChannel<ThreadChannelType> | GuildStageChannel | GuildForumChannel | GuildMediaChannel"},{"heading":"inherited-from","content":"BaseInteraction.channel"},{"heading":"guild","content":"get guild(): null | Guild"},{"heading":"returns-2","content":"null | Guild"},{"heading":"inherited-from-1","content":"BaseInteraction.guild"},{"heading":"member","content":"get member(): null | GuildMember"},{"heading":"returns-3","content":"null | GuildMember"},{"heading":"inherited-from-2","content":"BaseInteraction.member"},{"heading":"message","content":"get message(): null | Message"},{"heading":"returns-4","content":"null | Message"},{"heading":"inherited-from-3","content":"BaseInteraction.message"},{"heading":"user","content":"get user(): null | User"},{"heading":"returns-5","content":"null | User"},{"heading":"inherited-from-4","content":"BaseInteraction.user"},{"heading":"defer","content":"defer(): Promise<void>"},{"heading":"defer","content":"Internal"},{"heading":"defer","content":"Defer the interaction response. This is used automatically by commands that are set to defer.\nIf the interaction is already deferred, this will do nothing."},{"heading":"returns-6","content":"Promise<void>"},{"heading":"inherited-from-5","content":"BaseInteraction.defer"},{"heading":"reply","content":"reply(data, options): Promise<void>"},{"heading":"reply","content":"Reply to an interaction.\nIf the interaction is deferred, this will edit the original response."},{"heading":"parameters-1","content":"Parameter"},{"heading":"parameters-1","content":"Type"},{"heading":"parameters-1","content":"Description"},{"heading":"parameters-1","content":"data"},{"heading":"parameters-1","content":"InteractionReplyData"},{"heading":"parameters-1","content":"The response data"},{"heading":"parameters-1","content":"options"},{"heading":"parameters-1","content":"InteractionReplyOptions"},{"heading":"parameters-1","content":"-"},{"heading":"returns-7","content":"Promise<void>"},{"heading":"inherited-from-6","content":"BaseInteraction.reply"},{"heading":"showmodal","content":"showModal(modal): Promise<void>"},{"heading":"parameters-2","content":"Parameter"},{"heading":"parameters-2","content":"Type"},{"heading":"parameters-2","content":"modal"},{"heading":"parameters-2","content":"Modal"},{"heading":"returns-8","content":"Promise<void>"},{"heading":"inherited-from-7","content":"BaseInteraction.showModal"}],"headings":[{"id":"extends","content":"Extends"},{"id":"constructors","content":"Constructors"},{"id":"new-modalinteraction","content":"new ModalInteraction()"},{"id":"parameters","content":"Parameters"},{"id":"returns","content":"Returns"},{"id":"overrides","content":"Overrides"},{"id":"properties","content":"Properties"},{"id":"accessors","content":"Accessors"},{"id":"channel","content":"channel"},{"id":"returns-1","content":"Returns"},{"id":"inherited-from","content":"Inherited from"},{"id":"guild","content":"guild"},{"id":"returns-2","content":"Returns"},{"id":"inherited-from-1","content":"Inherited from"},{"id":"member","content":"member"},{"id":"returns-3","content":"Returns"},{"id":"inherited-from-2","content":"Inherited from"},{"id":"message","content":"message"},{"id":"returns-4","content":"Returns"},{"id":"inherited-from-3","content":"Inherited from"},{"id":"user","content":"user"},{"id":"returns-5","content":"Returns"},{"id":"inherited-from-4","content":"Inherited from"},{"id":"methods","content":"Methods"},{"id":"defer","content":"defer()"},{"id":"returns-6","content":"Returns"},{"id":"inherited-from-5","content":"Inherited from"},{"id":"reply","content":"reply()"},{"id":"parameters-1","content":"Parameters"},{"id":"returns-7","content":"Returns"},{"id":"inherited-from-6","content":"Inherited from"},{"id":"showmodal","content":"showModal()"},{"id":"parameters-2","content":"Parameters"},{"id":"returns-8","content":"Returns"},{"id":"inherited-from-7","content":"Inherited from"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/api/classes/OptionsHandler.mdx","data":{"frontmatter":{"title":"OptionsHandler","index":false},"toc":[{"title":"Extends","url":"#extends","depth":2},{"title":"Extended by","url":"#extended-by","depth":2},{"title":"Constructors","url":"#constructors","depth":2},{"title":"new OptionsHandler()","url":"#new-optionshandler","depth":3},{"title":"Parameters","url":"#parameters","depth":4},{"title":"Returns","url":"#returns","depth":4},{"title":"Overrides","url":"#overrides","depth":4},{"title":"Properties","url":"#properties","depth":2},{"title":"Methods","url":"#methods","depth":2},{"title":"getBoolean()","url":"#getboolean","depth":3},{"title":"Parameters","url":"#parameters-1","depth":4},{"title":"Returns","url":"#returns-1","depth":4},{"title":"getChannel()","url":"#getchannel","depth":3},{"title":"Parameters","url":"#parameters-2","depth":4},{"title":"Returns","url":"#returns-2","depth":4},{"title":"getInteger()","url":"#getinteger","depth":3},{"title":"Parameters","url":"#parameters-3","depth":4},{"title":"Returns","url":"#returns-3","depth":4},{"title":"getMentionable()","url":"#getmentionable","depth":3},{"title":"Parameters","url":"#parameters-4","depth":4},{"title":"Returns","url":"#returns-4","depth":4},{"title":"getNumber()","url":"#getnumber","depth":3},{"title":"Parameters","url":"#parameters-5","depth":4},{"title":"Returns","url":"#returns-5","depth":4},{"title":"getRole()","url":"#getrole","depth":3},{"title":"Parameters","url":"#parameters-6","depth":4},{"title":"Returns","url":"#returns-6","depth":4},{"title":"getString()","url":"#getstring","depth":3},{"title":"Parameters","url":"#parameters-7","depth":4},{"title":"Returns","url":"#returns-7","depth":4},{"title":"getUser()","url":"#getuser","depth":3},{"title":"Parameters","url":"#parameters-8","depth":4},{"title":"Returns","url":"#returns-8","depth":4}],"structuredData":{"contents":[{"heading":"","content":"This class is used to parse the options of a command, and provide errors for any missing or invalid options.\nIt is used internally by the Command class."},{"heading":"extends","content":"Base"},{"heading":"extended-by","content":"AutocompleteOptionsHandler"},{"heading":"new-optionshandler","content":"new OptionsHandler(client, options): OptionsHandler"},{"heading":"parameters","content":"Parameter"},{"heading":"parameters","content":"Type"},{"heading":"parameters","content":"client"},{"heading":"parameters","content":"Client"},{"heading":"parameters","content":"options"},{"heading":"parameters","content":"APIApplicationCommandInteractionDataBasicOption[]"},{"heading":"returns","content":"OptionsHandler"},{"heading":"overrides","content":"Base.constructor"},{"heading":"properties","content":"Property"},{"heading":"properties","content":"Modifier"},{"heading":"properties","content":"Type"},{"heading":"properties","content":"Default value"},{"heading":"properties","content":"Description"},{"heading":"properties","content":"Inherited from"},{"heading":"properties","content":"client"},{"heading":"properties","content":"public"},{"heading":"properties","content":"Client"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"Base.client"},{"heading":"properties","content":"errors"},{"heading":"properties","content":"readonly"},{"heading":"properties","content":"string[]"},{"heading":"properties","content":"[]"},{"heading":"properties","content":"The errors that were encountered while parsing the options."},{"heading":"properties","content":"-"},{"heading":"properties","content":"raw"},{"heading":"properties","content":"readonly"},{"heading":"properties","content":"APIApplicationCommandInteractionDataBasicOption[]"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The raw options that were in the interaction data, before they were parsed."},{"heading":"properties","content":"-"},{"heading":"getboolean","content":"getBoolean(key): undefined | true"},{"heading":"getboolean","content":"Get the value of a boolean option."},{"heading":"parameters-1","content":"Parameter"},{"heading":"parameters-1","content":"Type"},{"heading":"parameters-1","content":"Description"},{"heading":"parameters-1","content":"key"},{"heading":"parameters-1","content":"string"},{"heading":"parameters-1","content":"The name of the option to get the value of."},{"heading":"returns-1","content":"undefined | true"},{"heading":"returns-1","content":"The value of the option, or undefined if the option was not provided."},{"heading":"getchannel","content":"getChannel(key): Promise<undefined | null | DmChannel | GuildCategoryChannel | GroupDmChannel | GuildTextChannel | GuildVoiceChannel | GuildAnnouncementChannel | GuildThreadChannel<ThreadChannelType> | GuildStageChannel | GuildForumChannel | GuildMediaChannel>"},{"heading":"getchannel","content":"Get the value of a channel option."},{"heading":"parameters-2","content":"Parameter"},{"heading":"parameters-2","content":"Type"},{"heading":"parameters-2","content":"Description"},{"heading":"parameters-2","content":"key"},{"heading":"parameters-2","content":"string"},{"heading":"parameters-2","content":"The name of the option to get the value of."},{"heading":"returns-2","content":"Promise<undefined | null | DmChannel | GuildCategoryChannel | GroupDmChannel | GuildTextChannel | GuildVoiceChannel | GuildAnnouncementChannel | GuildThreadChannel<ThreadChannelType> | GuildStageChannel | GuildForumChannel | GuildMediaChannel>"},{"heading":"returns-2","content":"The value of the option, or undefined if the option was not provided."},{"heading":"getinteger","content":"getInteger(key): undefined | number"},{"heading":"getinteger","content":"Get the value of an integer option."},{"heading":"parameters-3","content":"Parameter"},{"heading":"parameters-3","content":"Type"},{"heading":"parameters-3","content":"Description"},{"heading":"parameters-3","content":"key"},{"heading":"parameters-3","content":"string"},{"heading":"parameters-3","content":"The name of the option to get the value of."},{"heading":"returns-3","content":"undefined | number"},{"heading":"returns-3","content":"The value of the option, or undefined if the option was not provided."},{"heading":"getmentionable","content":"getMentionable(key): Promise<undefined | User | Role>"},{"heading":"getmentionable","content":"Get the value of a mentionable option."},{"heading":"parameters-4","content":"Parameter"},{"heading":"parameters-4","content":"Type"},{"heading":"parameters-4","content":"Description"},{"heading":"parameters-4","content":"key"},{"heading":"parameters-4","content":"string"},{"heading":"parameters-4","content":"The name of the option to get the value of."},{"heading":"returns-4","content":"Promise<undefined | User | Role>"},{"heading":"returns-4","content":"The value of the option, or undefined if the option was not provided."},{"heading":"getnumber","content":"getNumber(key): undefined | number"},{"heading":"getnumber","content":"Get the value of a number option."},{"heading":"parameters-5","content":"Parameter"},{"heading":"parameters-5","content":"Type"},{"heading":"parameters-5","content":"Description"},{"heading":"parameters-5","content":"key"},{"heading":"parameters-5","content":"string"},{"heading":"parameters-5","content":"The name of the option to get the value of."},{"heading":"returns-5","content":"undefined | number"},{"heading":"returns-5","content":"The value of the option, or undefined if the option was not provided."},{"heading":"getrole","content":"getRole(key): undefined | Role"},{"heading":"getrole","content":"Get the value of a role option."},{"heading":"parameters-6","content":"Parameter"},{"heading":"parameters-6","content":"Type"},{"heading":"parameters-6","content":"Description"},{"heading":"parameters-6","content":"key"},{"heading":"parameters-6","content":"string"},{"heading":"parameters-6","content":"The name of the option to get the value of."},{"heading":"returns-6","content":"undefined | Role"},{"heading":"returns-6","content":"The value of the option, or undefined if the option was not provided."},{"heading":"getstring","content":"getString(key): undefined | string"},{"heading":"getstring","content":"Get the value of a string option."},{"heading":"parameters-7","content":"Parameter"},{"heading":"parameters-7","content":"Type"},{"heading":"parameters-7","content":"Description"},{"heading":"parameters-7","content":"key"},{"heading":"parameters-7","content":"string"},{"heading":"parameters-7","content":"The name of the option to get the value of."},{"heading":"returns-7","content":"undefined | string"},{"heading":"returns-7","content":"The value of the option, or undefined if the option was not provided."},{"heading":"getuser","content":"getUser(key): undefined | User"},{"heading":"getuser","content":"Get the value of a user option."},{"heading":"parameters-8","content":"Parameter"},{"heading":"parameters-8","content":"Type"},{"heading":"parameters-8","content":"Description"},{"heading":"parameters-8","content":"key"},{"heading":"parameters-8","content":"string"},{"heading":"parameters-8","content":"The name of the option to get the value of."},{"heading":"returns-8","content":"undefined | User"},{"heading":"returns-8","content":"The value of the option, or undefined if the option was not provided."}],"headings":[{"id":"extends","content":"Extends"},{"id":"extended-by","content":"Extended by"},{"id":"constructors","content":"Constructors"},{"id":"new-optionshandler","content":"new OptionsHandler()"},{"id":"parameters","content":"Parameters"},{"id":"returns","content":"Returns"},{"id":"overrides","content":"Overrides"},{"id":"properties","content":"Properties"},{"id":"methods","content":"Methods"},{"id":"getboolean","content":"getBoolean()"},{"id":"parameters-1","content":"Parameters"},{"id":"returns-1","content":"Returns"},{"id":"getchannel","content":"getChannel()"},{"id":"parameters-2","content":"Parameters"},{"id":"returns-2","content":"Returns"},{"id":"getinteger","content":"getInteger()"},{"id":"parameters-3","content":"Parameters"},{"id":"returns-3","content":"Returns"},{"id":"getmentionable","content":"getMentionable()"},{"id":"parameters-4","content":"Parameters"},{"id":"returns-4","content":"Returns"},{"id":"getnumber","content":"getNumber()"},{"id":"parameters-5","content":"Parameters"},{"id":"returns-5","content":"Returns"},{"id":"getrole","content":"getRole()"},{"id":"parameters-6","content":"Parameters"},{"id":"returns-6","content":"Returns"},{"id":"getstring","content":"getString()"},{"id":"parameters-7","content":"Parameters"},{"id":"returns-7","content":"Returns"},{"id":"getuser","content":"getUser()"},{"id":"parameters-8","content":"Parameters"},{"id":"returns-8","content":"Returns"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/api/classes/PremiumButton.mdx","data":{"frontmatter":{"title":"PremiumButton","index":false},"toc":[{"title":"Extends","url":"#extends","depth":2},{"title":"Constructors","url":"#constructors","depth":2},{"title":"new PremiumButton()","url":"#new-premiumbutton","depth":3},{"title":"Parameters","url":"#parameters","depth":4},{"title":"Returns","url":"#returns","depth":4},{"title":"Inherited from","url":"#inherited-from","depth":4},{"title":"Properties","url":"#properties","depth":2},{"title":"Methods","url":"#methods","depth":2},{"title":"createId()","url":"#createid","depth":3},{"title":"Parameters","url":"#parameters-1","depth":4},{"title":"Returns","url":"#returns-1","depth":4},{"title":"Inherited from","url":"#inherited-from-1","depth":4},{"title":"serialize()","url":"#serialize","depth":3},{"title":"Returns","url":"#returns-2","depth":4},{"title":"Overrides","url":"#overrides","depth":4}],"structuredData":{"contents":[{"heading":"extends","content":"BaseButton"},{"heading":"new-premiumbutton","content":"new PremiumButton(data?): PremiumButton"},{"heading":"parameters","content":"Parameter"},{"heading":"parameters","content":"Type"},{"heading":"parameters","content":"data?"},{"heading":"parameters","content":"object"},{"heading":"parameters","content":"data.additionalData?"},{"heading":"parameters","content":"ComponentAdditionalData"},{"heading":"returns","content":"PremiumButton"},{"heading":"inherited-from","content":"BaseButton.constructor"},{"heading":"properties","content":"Property"},{"heading":"properties","content":"Modifier"},{"heading":"properties","content":"Type"},{"heading":"properties","content":"Default value"},{"heading":"properties","content":"Description"},{"heading":"properties","content":"Overrides"},{"heading":"properties","content":"Inherited from"},{"heading":"properties","content":"additionalData"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | ComponentAdditionalData"},{"heading":"properties","content":"null"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseButton.additionalData"},{"heading":"properties","content":"customId"},{"heading":"properties","content":"abstract"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The custom ID of the component"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseButton.customId"},{"heading":"properties","content":"defer"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"false"},{"heading":"properties","content":"Whether the component response should be automatically deferred"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseButton.defer"},{"heading":"properties","content":"disabled"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"false"},{"heading":"properties","content":"The disabled state of the button"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseButton.disabled"},{"heading":"properties","content":"emoji?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"object"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The emoji of the button"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseButton.emoji"},{"heading":"properties","content":"emoji.animated?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"emoji.id?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"emoji.name"},{"heading":"properties","content":"public"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"ephemeral"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"false"},{"heading":"properties","content":"Whether the component response should be ephemeral"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseButton.ephemeral"},{"heading":"properties","content":"label"},{"heading":"properties","content":"abstract"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The label of the button"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseButton.label"},{"heading":"properties","content":"sku_id"},{"heading":"properties","content":"abstract"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The SKU ID of the button"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"style"},{"heading":"properties","content":"public"},{"heading":"properties","content":"Premium"},{"heading":"properties","content":"ButtonStyle.Premium"},{"heading":"properties","content":"The style of the button"},{"heading":"properties","content":"BaseButton.style"},{"heading":"properties","content":"-"},{"heading":"properties","content":"type"},{"heading":"properties","content":"public"},{"heading":"properties","content":"ComponentType"},{"heading":"properties","content":"ComponentType.Button"},{"heading":"properties","content":"The type of the component"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseButton.type"},{"heading":"createid","content":"createId(additionalData): string"},{"heading":"createid","content":"Create a custom ID to use for this component that embeds additional data that you want to be handed"},{"heading":"parameters-1","content":"Parameter"},{"heading":"parameters-1","content":"Type"},{"heading":"parameters-1","content":"Description"},{"heading":"parameters-1","content":"additionalData"},{"heading":"parameters-1","content":"null | ComponentAdditionalData"},{"heading":"parameters-1","content":"The additional data that you want to be passed in this component's custom ID"},{"heading":"returns-1","content":"string"},{"heading":"returns-1","content":"The custom ID to use"},{"heading":"inherited-from-1","content":"BaseButton.createId"},{"heading":"serialize","content":"serialize(): APIButtonComponentWithSKUId"},{"heading":"returns-2","content":"APIButtonComponentWithSKUId"},{"heading":"overrides","content":"BaseButton.serialize"}],"headings":[{"id":"extends","content":"Extends"},{"id":"constructors","content":"Constructors"},{"id":"new-premiumbutton","content":"new PremiumButton()"},{"id":"parameters","content":"Parameters"},{"id":"returns","content":"Returns"},{"id":"inherited-from","content":"Inherited from"},{"id":"properties","content":"Properties"},{"id":"methods","content":"Methods"},{"id":"createid","content":"createId()"},{"id":"parameters-1","content":"Parameters"},{"id":"returns-1","content":"Returns"},{"id":"inherited-from-1","content":"Inherited from"},{"id":"serialize","content":"serialize()"},{"id":"returns-2","content":"Returns"},{"id":"overrides","content":"Overrides"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/api/classes/Role.mdx","data":{"frontmatter":{"title":"Role","index":false},"toc":[{"title":"Extends","url":"#extends","depth":2},{"title":"Constructors","url":"#constructors","depth":2},{"title":"new Role()","url":"#new-role","depth":3},{"title":"Parameters","url":"#parameters","depth":4},{"title":"Returns","url":"#returns","depth":4},{"title":"Overrides","url":"#overrides","depth":4},{"title":"Properties","url":"#properties","depth":2},{"title":"Accessors","url":"#accessors","depth":2},{"title":"iconUrl","url":"#iconurl","depth":3},{"title":"Returns","url":"#returns-1","depth":4},{"title":"Methods","url":"#methods","depth":2},{"title":"delete()","url":"#delete","depth":3},{"title":"Parameters","url":"#parameters-1","depth":4},{"title":"Returns","url":"#returns-2","depth":4},{"title":"fetch()","url":"#fetch","depth":3},{"title":"Parameters","url":"#parameters-2","depth":4},{"title":"Returns","url":"#returns-3","depth":4},{"title":"setColor()","url":"#setcolor","depth":3},{"title":"Parameters","url":"#parameters-3","depth":4},{"title":"Returns","url":"#returns-4","depth":4},{"title":"setHoisted()","url":"#sethoisted","depth":3},{"title":"Parameters","url":"#parameters-4","depth":4},{"title":"Returns","url":"#returns-5","depth":4},{"title":"setIcon()","url":"#seticon","depth":3},{"title":"Parameters","url":"#parameters-5","depth":4},{"title":"Returns","url":"#returns-6","depth":4},{"title":"setMentionable()","url":"#setmentionable","depth":3},{"title":"Parameters","url":"#parameters-6","depth":4},{"title":"Returns","url":"#returns-7","depth":4},{"title":"setName()","url":"#setname","depth":3},{"title":"Parameters","url":"#parameters-7","depth":4},{"title":"Returns","url":"#returns-8","depth":4},{"title":"setPermissions()","url":"#setpermissions","depth":3},{"title":"Parameters","url":"#parameters-8","depth":4},{"title":"Returns","url":"#returns-9","depth":4},{"title":"setPosition()","url":"#setposition","depth":3},{"title":"Parameters","url":"#parameters-9","depth":4},{"title":"Returns","url":"#returns-10","depth":4}],"structuredData":{"contents":[{"heading":"extends","content":"Base"},{"heading":"new-role","content":"new Role(client, rawDataOrId): Role"},{"heading":"parameters","content":"Parameter"},{"heading":"parameters","content":"Type"},{"heading":"parameters","content":"client"},{"heading":"parameters","content":"Client"},{"heading":"parameters","content":"rawDataOrId"},{"heading":"parameters","content":"string | APIRole"},{"heading":"returns","content":"Role"},{"heading":"overrides","content":"Base.constructor"},{"heading":"properties","content":"Property"},{"heading":"properties","content":"Type"},{"heading":"properties","content":"Description"},{"heading":"properties","content":"Inherited from"},{"heading":"properties","content":"client"},{"heading":"properties","content":"Client"},{"heading":"properties","content":"-"},{"heading":"properties","content":"Base.client"},{"heading":"properties","content":"color?"},{"heading":"properties","content":"null | number"},{"heading":"properties","content":"The color of the role."},{"heading":"properties","content":"-"},{"heading":"properties","content":"flags?"},{"heading":"properties","content":"null | RoleFlags"},{"heading":"properties","content":"The flags of this role. See https://discord.com/developers/docs/topics/permissions#role-object-role-flags"},{"heading":"properties","content":"-"},{"heading":"properties","content":"hoisted?"},{"heading":"properties","content":"null | boolean"},{"heading":"properties","content":"If this role is hoisted."},{"heading":"properties","content":"-"},{"heading":"properties","content":"icon?"},{"heading":"properties","content":"null | string"},{"heading":"properties","content":"The icon hash of the role. You can use Role.iconUrl to get the URL of the icon."},{"heading":"properties","content":"-"},{"heading":"properties","content":"id"},{"heading":"properties","content":"string"},{"heading":"properties","content":"The ID of the role."},{"heading":"properties","content":"-"},{"heading":"properties","content":"managed?"},{"heading":"properties","content":"null | boolean"},{"heading":"properties","content":"If this role is managed by an integration."},{"heading":"properties","content":"-"},{"heading":"properties","content":"mentionable?"},{"heading":"properties","content":"null | boolean"},{"heading":"properties","content":"If this role is mentionable."},{"heading":"properties","content":"-"},{"heading":"properties","content":"name?"},{"heading":"properties","content":"null | string"},{"heading":"properties","content":"The name of the role."},{"heading":"properties","content":"-"},{"heading":"properties","content":"partial"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"Whether the role is a partial role (meaning it does not have all the data). If this is true, you should use Role.fetch to get the full data of the role."},{"heading":"properties","content":"-"},{"heading":"properties","content":"permissions?"},{"heading":"properties","content":"null | string"},{"heading":"properties","content":"The permissions of the role."},{"heading":"properties","content":"-"},{"heading":"properties","content":"position?"},{"heading":"properties","content":"null | number"},{"heading":"properties","content":"The position of the role."},{"heading":"properties","content":"-"},{"heading":"properties","content":"tags?"},{"heading":"properties","content":"null | APIRoleTags"},{"heading":"properties","content":"The tags of this role. See https://discord.com/developers/docs/topics/permissions#role-object-role-tags-structure"},{"heading":"properties","content":"-"},{"heading":"properties","content":"unicodeEmoji?"},{"heading":"properties","content":"null | string"},{"heading":"properties","content":"The unicode emoji for the role."},{"heading":"properties","content":"-"},{"heading":"iconurl","content":"get iconUrl(): null | string"},{"heading":"iconurl","content":"Get the URL of the role's icon"},{"heading":"returns-1","content":"null | string"},{"heading":"delete","content":"delete(guildId): Promise<void>"},{"heading":"parameters-1","content":"Parameter"},{"heading":"parameters-1","content":"Type"},{"heading":"parameters-1","content":"guildId"},{"heading":"parameters-1","content":"string"},{"heading":"returns-2","content":"Promise<void>"},{"heading":"fetch","content":"fetch(guildId): Promise<void>"},{"heading":"fetch","content":"Fetch updated data for this role.\nIf the role is partial, this will fetch all the data for the role and populate the fields.\nIf the role is not partial, all fields will be updated with new values from Discord."},{"heading":"parameters-2","content":"Parameter"},{"heading":"parameters-2","content":"Type"},{"heading":"parameters-2","content":"guildId"},{"heading":"parameters-2","content":"string"},{"heading":"returns-3","content":"Promise<void>"},{"heading":"setcolor","content":"setColor(guildId, color): Promise<void>"},{"heading":"setcolor","content":"Set the color of the role"},{"heading":"parameters-3","content":"Parameter"},{"heading":"parameters-3","content":"Type"},{"heading":"parameters-3","content":"guildId"},{"heading":"parameters-3","content":"string"},{"heading":"parameters-3","content":"color"},{"heading":"parameters-3","content":"number"},{"heading":"returns-4","content":"Promise<void>"},{"heading":"sethoisted","content":"setHoisted(guildId, hoisted): Promise<void>"},{"heading":"sethoisted","content":"Set the hoisted status of the role"},{"heading":"parameters-4","content":"Parameter"},{"heading":"parameters-4","content":"Type"},{"heading":"parameters-4","content":"guildId"},{"heading":"parameters-4","content":"string"},{"heading":"parameters-4","content":"hoisted"},{"heading":"parameters-4","content":"boolean"},{"heading":"returns-5","content":"Promise<void>"},{"heading":"seticon","content":"setIcon(guildId, icon): Promise<void>"},{"heading":"seticon","content":"Set the icon of the role"},{"heading":"parameters-5","content":"Parameter"},{"heading":"parameters-5","content":"Type"},{"heading":"parameters-5","content":"Description"},{"heading":"parameters-5","content":"guildId"},{"heading":"parameters-5","content":"string"},{"heading":"parameters-5","content":"-"},{"heading":"parameters-5","content":"icon"},{"heading":"parameters-5","content":"string"},{"heading":"parameters-5","content":"The unicode emoji or icon URL to set"},{"heading":"returns-6","content":"Promise<void>"},{"heading":"setmentionable","content":"setMentionable(guildId, mentionable): Promise<void>"},{"heading":"setmentionable","content":"Set the mentionable status of the role"},{"heading":"parameters-6","content":"Parameter"},{"heading":"parameters-6","content":"Type"},{"heading":"parameters-6","content":"guildId"},{"heading":"parameters-6","content":"string"},{"heading":"parameters-6","content":"mentionable"},{"heading":"parameters-6","content":"boolean"},{"heading":"returns-7","content":"Promise<void>"},{"heading":"setname","content":"setName(guildId, name): Promise<void>"},{"heading":"setname","content":"Set the name of the role"},{"heading":"parameters-7","content":"Parameter"},{"heading":"parameters-7","content":"Type"},{"heading":"parameters-7","content":"guildId"},{"heading":"parameters-7","content":"string"},{"heading":"parameters-7","content":"name"},{"heading":"parameters-7","content":"string"},{"heading":"returns-8","content":"Promise<void>"},{"heading":"setpermissions","content":"setPermissions(guildId, permissions): Promise<void>"},{"heading":"setpermissions","content":"Set the permissions of the role"},{"heading":"parameters-8","content":"Parameter"},{"heading":"parameters-8","content":"Type"},{"heading":"parameters-8","content":"Description"},{"heading":"parameters-8","content":"guildId"},{"heading":"parameters-8","content":"string"},{"heading":"parameters-8","content":"-"},{"heading":"parameters-8","content":"permissions"},{"heading":"parameters-8","content":"string"},{"heading":"parameters-8","content":"The permissions to set as a BitField string, until a better permission structure is implemented"},{"heading":"returns-9","content":"Promise<void>"},{"heading":"setposition","content":"setPosition(guildId, position): Promise<void>"},{"heading":"setposition","content":"Set the position of the role"},{"heading":"parameters-9","content":"Parameter"},{"heading":"parameters-9","content":"Type"},{"heading":"parameters-9","content":"guildId"},{"heading":"parameters-9","content":"string"},{"heading":"parameters-9","content":"position"},{"heading":"parameters-9","content":"number"},{"heading":"returns-10","content":"Promise<void>"}],"headings":[{"id":"extends","content":"Extends"},{"id":"constructors","content":"Constructors"},{"id":"new-role","content":"new Role()"},{"id":"parameters","content":"Parameters"},{"id":"returns","content":"Returns"},{"id":"overrides","content":"Overrides"},{"id":"properties","content":"Properties"},{"id":"accessors","content":"Accessors"},{"id":"iconurl","content":"iconUrl"},{"id":"returns-1","content":"Returns"},{"id":"methods","content":"Methods"},{"id":"delete","content":"delete()"},{"id":"parameters-1","content":"Parameters"},{"id":"returns-2","content":"Returns"},{"id":"fetch","content":"fetch()"},{"id":"parameters-2","content":"Parameters"},{"id":"returns-3","content":"Returns"},{"id":"setcolor","content":"setColor()"},{"id":"parameters-3","content":"Parameters"},{"id":"returns-4","content":"Returns"},{"id":"sethoisted","content":"setHoisted()"},{"id":"parameters-4","content":"Parameters"},{"id":"returns-5","content":"Returns"},{"id":"seticon","content":"setIcon()"},{"id":"parameters-5","content":"Parameters"},{"id":"returns-6","content":"Returns"},{"id":"setmentionable","content":"setMentionable()"},{"id":"parameters-6","content":"Parameters"},{"id":"returns-7","content":"Returns"},{"id":"setname","content":"setName()"},{"id":"parameters-7","content":"Parameters"},{"id":"returns-8","content":"Returns"},{"id":"setpermissions","content":"setPermissions()"},{"id":"parameters-8","content":"Parameters"},{"id":"returns-9","content":"Returns"},{"id":"setposition","content":"setPosition()"},{"id":"parameters-9","content":"Parameters"},{"id":"returns-10","content":"Returns"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/api/classes/RoleSelectMenu.mdx","data":{"frontmatter":{"title":"RoleSelectMenu","index":false},"toc":[{"title":"Extends","url":"#extends","depth":2},{"title":"Constructors","url":"#constructors","depth":2},{"title":"new RoleSelectMenu()","url":"#new-roleselectmenu","depth":3},{"title":"Parameters","url":"#parameters","depth":4},{"title":"Returns","url":"#returns","depth":4},{"title":"Inherited from","url":"#inherited-from","depth":4},{"title":"Properties","url":"#properties","depth":2},{"title":"Methods","url":"#methods","depth":2},{"title":"createId()","url":"#createid","depth":3},{"title":"Parameters","url":"#parameters-1","depth":4},{"title":"Returns","url":"#returns-1","depth":4},{"title":"Inherited from","url":"#inherited-from-1","depth":4},{"title":"run()","url":"#run","depth":3},{"title":"Parameters","url":"#parameters-2","depth":4},{"title":"Returns","url":"#returns-2","depth":4},{"title":"Overrides","url":"#overrides","depth":4},{"title":"serialize()","url":"#serialize","depth":3},{"title":"Returns","url":"#returns-3","depth":4},{"title":"Inherited from","url":"#inherited-from-2","depth":4},{"title":"serializeOptions()","url":"#serializeoptions","depth":3},{"title":"Returns","url":"#returns-4","depth":4},{"title":"Overrides","url":"#overrides-1","depth":4}],"structuredData":{"contents":[{"heading":"extends","content":"AnySelectMenu"},{"heading":"new-roleselectmenu","content":"new RoleSelectMenu(data?): RoleSelectMenu"},{"heading":"parameters","content":"Parameter"},{"heading":"parameters","content":"Type"},{"heading":"parameters","content":"data?"},{"heading":"parameters","content":"object"},{"heading":"parameters","content":"data.additionalData?"},{"heading":"parameters","content":"ComponentAdditionalData"},{"heading":"returns","content":"RoleSelectMenu"},{"heading":"inherited-from","content":"AnySelectMenu.constructor"},{"heading":"properties","content":"Property"},{"heading":"properties","content":"Modifier"},{"heading":"properties","content":"Type"},{"heading":"properties","content":"Default value"},{"heading":"properties","content":"Description"},{"heading":"properties","content":"Overrides"},{"heading":"properties","content":"Inherited from"},{"heading":"properties","content":"additionalData"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | ComponentAdditionalData"},{"heading":"properties","content":"null"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"AnySelectMenu.additionalData"},{"heading":"properties","content":"customId"},{"heading":"properties","content":"abstract"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The custom ID of the component"},{"heading":"properties","content":"-"},{"heading":"properties","content":"AnySelectMenu.customId"},{"heading":"properties","content":"defaultValues?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"APISelectMenuDefaultValue<Role>[]"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"defer"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"false"},{"heading":"properties","content":"Whether the component response should be automatically deferred"},{"heading":"properties","content":"-"},{"heading":"properties","content":"AnySelectMenu.defer"},{"heading":"properties","content":"disabled?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"AnySelectMenu.disabled"},{"heading":"properties","content":"ephemeral"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"false"},{"heading":"properties","content":"Whether the component response should be ephemeral"},{"heading":"properties","content":"-"},{"heading":"properties","content":"AnySelectMenu.ephemeral"},{"heading":"properties","content":"maxValues?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"number"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"AnySelectMenu.maxValues"},{"heading":"properties","content":"minValues?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"number"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"AnySelectMenu.minValues"},{"heading":"properties","content":"placeholder?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"AnySelectMenu.placeholder"},{"heading":"properties","content":"type"},{"heading":"properties","content":"public"},{"heading":"properties","content":"RoleSelect"},{"heading":"properties","content":"ComponentType.RoleSelect"},{"heading":"properties","content":"The type of the component"},{"heading":"properties","content":"AnySelectMenu.type"},{"heading":"properties","content":"-"},{"heading":"createid","content":"createId(additionalData): string"},{"heading":"createid","content":"Create a custom ID to use for this component that embeds additional data that you want to be handed"},{"heading":"parameters-1","content":"Parameter"},{"heading":"parameters-1","content":"Type"},{"heading":"parameters-1","content":"Description"},{"heading":"parameters-1","content":"additionalData"},{"heading":"parameters-1","content":"null | ComponentAdditionalData"},{"heading":"parameters-1","content":"The additional data that you want to be passed in this component's custom ID"},{"heading":"returns-1","content":"string"},{"heading":"returns-1","content":"The custom ID to use"},{"heading":"inherited-from-1","content":"AnySelectMenu.createId"},{"heading":"run","content":"abstract run(interaction): Promise<void>"},{"heading":"parameters-2","content":"Parameter"},{"heading":"parameters-2","content":"Type"},{"heading":"parameters-2","content":"interaction"},{"heading":"parameters-2","content":"RoleSelectMenuInteraction"},{"heading":"returns-2","content":"Promise<void>"},{"heading":"overrides","content":"AnySelectMenu.run"},{"heading":"serialize","content":"serialize(): APISelectMenuComponent"},{"heading":"returns-3","content":"APISelectMenuComponent"},{"heading":"inherited-from-2","content":"AnySelectMenu.serialize"},{"heading":"serializeoptions","content":"serializeOptions(): object"},{"heading":"returns-4","content":"object"},{"heading":"returns-4","content":"Name"},{"heading":"returns-4","content":"Type"},{"heading":"returns-4","content":"default_values"},{"heading":"returns-4","content":"undefined | APISelectMenuDefaultValue<Role>[]"},{"heading":"returns-4","content":"type"},{"heading":"returns-4","content":"RoleSelect"},{"heading":"overrides-1","content":"AnySelectMenu.serializeOptions"}],"headings":[{"id":"extends","content":"Extends"},{"id":"constructors","content":"Constructors"},{"id":"new-roleselectmenu","content":"new RoleSelectMenu()"},{"id":"parameters","content":"Parameters"},{"id":"returns","content":"Returns"},{"id":"inherited-from","content":"Inherited from"},{"id":"properties","content":"Properties"},{"id":"methods","content":"Methods"},{"id":"createid","content":"createId()"},{"id":"parameters-1","content":"Parameters"},{"id":"returns-1","content":"Returns"},{"id":"inherited-from-1","content":"Inherited from"},{"id":"run","content":"run()"},{"id":"parameters-2","content":"Parameters"},{"id":"returns-2","content":"Returns"},{"id":"overrides","content":"Overrides"},{"id":"serialize","content":"serialize()"},{"id":"returns-3","content":"Returns"},{"id":"inherited-from-2","content":"Inherited from"},{"id":"serializeoptions","content":"serializeOptions()"},{"id":"returns-4","content":"Returns"},{"id":"overrides-1","content":"Overrides"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/api/classes/RoleSelectMenuInteraction.mdx","data":{"frontmatter":{"title":"RoleSelectMenuInteraction","index":false},"toc":[{"title":"Extends","url":"#extends","depth":2},{"title":"Constructors","url":"#constructors","depth":2},{"title":"new RoleSelectMenuInteraction()","url":"#new-roleselectmenuinteraction","depth":3},{"title":"Parameters","url":"#parameters","depth":4},{"title":"Returns","url":"#returns","depth":4},{"title":"Overrides","url":"#overrides","depth":4},{"title":"Properties","url":"#properties","depth":2},{"title":"Accessors","url":"#accessors","depth":2},{"title":"channel","url":"#channel","depth":3},{"title":"Returns","url":"#returns-1","depth":4},{"title":"Inherited from","url":"#inherited-from","depth":4},{"title":"guild","url":"#guild","depth":3},{"title":"Returns","url":"#returns-2","depth":4},{"title":"Inherited from","url":"#inherited-from-1","depth":4},{"title":"member","url":"#member","depth":3},{"title":"Returns","url":"#returns-3","depth":4},{"title":"Inherited from","url":"#inherited-from-2","depth":4},{"title":"message","url":"#message","depth":3},{"title":"Returns","url":"#returns-4","depth":4},{"title":"Inherited from","url":"#inherited-from-3","depth":4},{"title":"user","url":"#user","depth":3},{"title":"Returns","url":"#returns-5","depth":4},{"title":"Inherited from","url":"#inherited-from-4","depth":4},{"title":"values","url":"#values","depth":3},{"title":"Returns","url":"#returns-6","depth":4},{"title":"Overrides","url":"#overrides-1","depth":4},{"title":"Methods","url":"#methods","depth":2},{"title":"defer()","url":"#defer","depth":3},{"title":"Returns","url":"#returns-7","depth":4},{"title":"Inherited from","url":"#inherited-from-5","depth":4},{"title":"reply()","url":"#reply","depth":3},{"title":"Parameters","url":"#parameters-1","depth":4},{"title":"Returns","url":"#returns-8","depth":4},{"title":"Inherited from","url":"#inherited-from-6","depth":4},{"title":"showModal()","url":"#showmodal","depth":3},{"title":"Parameters","url":"#parameters-2","depth":4},{"title":"Returns","url":"#returns-9","depth":4},{"title":"Inherited from","url":"#inherited-from-7","depth":4}],"structuredData":{"contents":[{"heading":"","content":"This is the base type interaction, all interaction types extend from this"},{"heading":"extends","content":"AnySelectMenuInteraction"},{"heading":"new-roleselectmenuinteraction","content":"new RoleSelectMenuInteraction(client, data): RoleSelectMenuInteraction"},{"heading":"parameters","content":"Parameter"},{"heading":"parameters","content":"Type"},{"heading":"parameters","content":"client"},{"heading":"parameters","content":"Client"},{"heading":"parameters","content":"data"},{"heading":"parameters","content":"APIMessageComponentSelectMenuInteraction"},{"heading":"returns","content":"RoleSelectMenuInteraction"},{"heading":"overrides","content":"AnySelectMenuInteraction.constructor"},{"heading":"properties","content":"Property"},{"heading":"properties","content":"Type"},{"heading":"properties","content":"Default value"},{"heading":"properties","content":"Description"},{"heading":"properties","content":"Inherited from"},{"heading":"properties","content":"_deferred"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"false"},{"heading":"properties","content":"Internal Whether the interaction is deferred already"},{"heading":"properties","content":"AnySelectMenuInteraction._deferred"},{"heading":"properties","content":"client"},{"heading":"properties","content":"Client"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"AnySelectMenuInteraction.client"},{"heading":"properties","content":"componentType"},{"heading":"properties","content":"ComponentType"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"AnySelectMenuInteraction.componentType"},{"heading":"properties","content":"customId"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"AnySelectMenuInteraction.customId"},{"heading":"properties","content":"rawData"},{"heading":"properties","content":"APIMessageComponentInteraction"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The raw data of the interaction"},{"heading":"properties","content":"AnySelectMenuInteraction.rawData"},{"heading":"properties","content":"type"},{"heading":"properties","content":"InteractionType"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The type of interaction"},{"heading":"properties","content":"AnySelectMenuInteraction.type"},{"heading":"properties","content":"userId"},{"heading":"properties","content":"undefined | string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The user who sent the interaction"},{"heading":"properties","content":"AnySelectMenuInteraction.userId"},{"heading":"channel","content":"get channel(): null | DmChannel | GuildCategoryChannel | GroupDmChannel | GuildTextChannel | GuildVoiceChannel | GuildAnnouncementChannel | GuildThreadChannel<ThreadChannelType> | GuildStageChannel | GuildForumChannel | GuildMediaChannel"},{"heading":"returns-1","content":"null | DmChannel | GuildCategoryChannel | GroupDmChannel | GuildTextChannel | GuildVoiceChannel | GuildAnnouncementChannel | GuildThreadChannel<ThreadChannelType> | GuildStageChannel | GuildForumChannel | GuildMediaChannel"},{"heading":"inherited-from","content":"AnySelectMenuInteraction.channel"},{"heading":"guild","content":"get guild(): null | Guild"},{"heading":"returns-2","content":"null | Guild"},{"heading":"inherited-from-1","content":"AnySelectMenuInteraction.guild"},{"heading":"member","content":"get member(): null | GuildMember"},{"heading":"returns-3","content":"null | GuildMember"},{"heading":"inherited-from-2","content":"AnySelectMenuInteraction.member"},{"heading":"message","content":"get message(): null | Message"},{"heading":"returns-4","content":"null | Message"},{"heading":"inherited-from-3","content":"AnySelectMenuInteraction.message"},{"heading":"user","content":"get user(): null | User"},{"heading":"returns-5","content":"null | User"},{"heading":"inherited-from-4","content":"AnySelectMenuInteraction.user"},{"heading":"values","content":"get values(): string[]"},{"heading":"values","content":"The raw IDs of the selected options (either role/string/channel IDs or the IDs you provided in your options)"},{"heading":"returns-6","content":"string[]"},{"heading":"overrides-1","content":"AnySelectMenuInteraction.values"},{"heading":"defer","content":"defer(): Promise<void>"},{"heading":"defer","content":"Internal"},{"heading":"defer","content":"Defer the interaction response. This is used automatically by commands that are set to defer.\nIf the interaction is already deferred, this will do nothing."},{"heading":"returns-7","content":"Promise<void>"},{"heading":"inherited-from-5","content":"AnySelectMenuInteraction.defer"},{"heading":"reply","content":"reply(data, options): Promise<void>"},{"heading":"reply","content":"Reply to an interaction.\nIf the interaction is deferred, this will edit the original response."},{"heading":"parameters-1","content":"Parameter"},{"heading":"parameters-1","content":"Type"},{"heading":"parameters-1","content":"Description"},{"heading":"parameters-1","content":"data"},{"heading":"parameters-1","content":"InteractionReplyData"},{"heading":"parameters-1","content":"The response data"},{"heading":"parameters-1","content":"options"},{"heading":"parameters-1","content":"InteractionReplyOptions"},{"heading":"parameters-1","content":"-"},{"heading":"returns-8","content":"Promise<void>"},{"heading":"inherited-from-6","content":"AnySelectMenuInteraction.reply"},{"heading":"showmodal","content":"showModal(modal): Promise<void>"},{"heading":"parameters-2","content":"Parameter"},{"heading":"parameters-2","content":"Type"},{"heading":"parameters-2","content":"modal"},{"heading":"parameters-2","content":"Modal"},{"heading":"returns-9","content":"Promise<void>"},{"heading":"inherited-from-7","content":"AnySelectMenuInteraction.showModal"}],"headings":[{"id":"extends","content":"Extends"},{"id":"constructors","content":"Constructors"},{"id":"new-roleselectmenuinteraction","content":"new RoleSelectMenuInteraction()"},{"id":"parameters","content":"Parameters"},{"id":"returns","content":"Returns"},{"id":"overrides","content":"Overrides"},{"id":"properties","content":"Properties"},{"id":"accessors","content":"Accessors"},{"id":"channel","content":"channel"},{"id":"returns-1","content":"Returns"},{"id":"inherited-from","content":"Inherited from"},{"id":"guild","content":"guild"},{"id":"returns-2","content":"Returns"},{"id":"inherited-from-1","content":"Inherited from"},{"id":"member","content":"member"},{"id":"returns-3","content":"Returns"},{"id":"inherited-from-2","content":"Inherited from"},{"id":"message","content":"message"},{"id":"returns-4","content":"Returns"},{"id":"inherited-from-3","content":"Inherited from"},{"id":"user","content":"user"},{"id":"returns-5","content":"Returns"},{"id":"inherited-from-4","content":"Inherited from"},{"id":"values","content":"values"},{"id":"returns-6","content":"Returns"},{"id":"overrides-1","content":"Overrides"},{"id":"methods","content":"Methods"},{"id":"defer","content":"defer()"},{"id":"returns-7","content":"Returns"},{"id":"inherited-from-5","content":"Inherited from"},{"id":"reply","content":"reply()"},{"id":"parameters-1","content":"Parameters"},{"id":"returns-8","content":"Returns"},{"id":"inherited-from-6","content":"Inherited from"},{"id":"showmodal","content":"showModal()"},{"id":"parameters-2","content":"Parameters"},{"id":"returns-9","content":"Returns"},{"id":"inherited-from-7","content":"Inherited from"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/api/classes/Row.mdx","data":{"frontmatter":{"title":"Row","index":false},"toc":[{"title":"Type Parameters","url":"#type-parameters","depth":2},{"title":"Constructors","url":"#constructors","depth":2},{"title":"new Row()","url":"#new-row","depth":3},{"title":"Parameters","url":"#parameters","depth":4},{"title":"Returns","url":"#returns","depth":4},{"title":"Properties","url":"#properties","depth":2},{"title":"Methods","url":"#methods","depth":2},{"title":"addComponent()","url":"#addcomponent","depth":3},{"title":"Parameters","url":"#parameters-1","depth":4},{"title":"Returns","url":"#returns-1","depth":4},{"title":"removeAllComponents()","url":"#removeallcomponents","depth":3},{"title":"Returns","url":"#returns-2","depth":4},{"title":"removeComponent()","url":"#removecomponent","depth":3},{"title":"Parameters","url":"#parameters-2","depth":4},{"title":"Returns","url":"#returns-3","depth":4},{"title":"serialize()","url":"#serialize","depth":3},{"title":"Returns","url":"#returns-4","depth":4}],"structuredData":{"contents":[{"heading":"type-parameters","content":"Type Parameter"},{"heading":"type-parameters","content":"Default type"},{"heading":"type-parameters","content":"T extends BaseComponent"},{"heading":"type-parameters","content":"BaseComponent"},{"heading":"new-row","content":"new Row<T>(components?): Row<T>"},{"heading":"parameters","content":"Parameter"},{"heading":"parameters","content":"Type"},{"heading":"parameters","content":"components?"},{"heading":"parameters","content":"T[]"},{"heading":"returns","content":"Row<T>"},{"heading":"properties","content":"Property"},{"heading":"properties","content":"Type"},{"heading":"properties","content":"Default value"},{"heading":"properties","content":"Description"},{"heading":"properties","content":"components"},{"heading":"properties","content":"T[]"},{"heading":"properties","content":"[]"},{"heading":"properties","content":"The components in the action row"},{"heading":"addcomponent","content":"addComponent(component): void"},{"heading":"addcomponent","content":"Add a component to the action row"},{"heading":"parameters-1","content":"Parameter"},{"heading":"parameters-1","content":"Type"},{"heading":"parameters-1","content":"Description"},{"heading":"parameters-1","content":"component"},{"heading":"parameters-1","content":"T"},{"heading":"parameters-1","content":"The component to add"},{"heading":"returns-1","content":"void"},{"heading":"removeallcomponents","content":"removeAllComponents(): void"},{"heading":"removeallcomponents","content":"Remove all components from the action row"},{"heading":"returns-2","content":"void"},{"heading":"removecomponent","content":"removeComponent(component): void"},{"heading":"removecomponent","content":"Remove a component from the action row"},{"heading":"parameters-2","content":"Parameter"},{"heading":"parameters-2","content":"Type"},{"heading":"parameters-2","content":"Description"},{"heading":"parameters-2","content":"component"},{"heading":"parameters-2","content":"T"},{"heading":"parameters-2","content":"The component to remove"},{"heading":"returns-3","content":"void"},{"heading":"serialize","content":"serialize(): APIActionRowComponent<APIActionRowComponentTypes>"},{"heading":"returns-4","content":"APIActionRowComponent<APIActionRowComponentTypes>"}],"headings":[{"id":"type-parameters","content":"Type Parameters"},{"id":"constructors","content":"Constructors"},{"id":"new-row","content":"new Row()"},{"id":"parameters","content":"Parameters"},{"id":"returns","content":"Returns"},{"id":"properties","content":"Properties"},{"id":"methods","content":"Methods"},{"id":"addcomponent","content":"addComponent()"},{"id":"parameters-1","content":"Parameters"},{"id":"returns-1","content":"Returns"},{"id":"removeallcomponents","content":"removeAllComponents()"},{"id":"returns-2","content":"Returns"},{"id":"removecomponent","content":"removeComponent()"},{"id":"parameters-2","content":"Parameters"},{"id":"returns-3","content":"Returns"},{"id":"serialize","content":"serialize()"},{"id":"returns-4","content":"Returns"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/api/classes/StringSelectMenu.mdx","data":{"frontmatter":{"title":"StringSelectMenu","index":false},"toc":[{"title":"Extends","url":"#extends","depth":2},{"title":"Constructors","url":"#constructors","depth":2},{"title":"new StringSelectMenu()","url":"#new-stringselectmenu","depth":3},{"title":"Parameters","url":"#parameters","depth":4},{"title":"Returns","url":"#returns","depth":4},{"title":"Inherited from","url":"#inherited-from","depth":4},{"title":"Properties","url":"#properties","depth":2},{"title":"Methods","url":"#methods","depth":2},{"title":"createId()","url":"#createid","depth":3},{"title":"Parameters","url":"#parameters-1","depth":4},{"title":"Returns","url":"#returns-1","depth":4},{"title":"Inherited from","url":"#inherited-from-1","depth":4},{"title":"run()","url":"#run","depth":3},{"title":"Parameters","url":"#parameters-2","depth":4},{"title":"Returns","url":"#returns-2","depth":4},{"title":"Overrides","url":"#overrides","depth":4},{"title":"serialize()","url":"#serialize","depth":3},{"title":"Returns","url":"#returns-3","depth":4},{"title":"Inherited from","url":"#inherited-from-2","depth":4},{"title":"serializeOptions()","url":"#serializeoptions","depth":3},{"title":"Returns","url":"#returns-4","depth":4},{"title":"Overrides","url":"#overrides-1","depth":4}],"structuredData":{"contents":[{"heading":"extends","content":"AnySelectMenu"},{"heading":"new-stringselectmenu","content":"new StringSelectMenu(data?): StringSelectMenu"},{"heading":"parameters","content":"Parameter"},{"heading":"parameters","content":"Type"},{"heading":"parameters","content":"data?"},{"heading":"parameters","content":"object"},{"heading":"parameters","content":"data.additionalData?"},{"heading":"parameters","content":"ComponentAdditionalData"},{"heading":"returns","content":"StringSelectMenu"},{"heading":"inherited-from","content":"AnySelectMenu.constructor"},{"heading":"properties","content":"Property"},{"heading":"properties","content":"Modifier"},{"heading":"properties","content":"Type"},{"heading":"properties","content":"Default value"},{"heading":"properties","content":"Description"},{"heading":"properties","content":"Overrides"},{"heading":"properties","content":"Inherited from"},{"heading":"properties","content":"additionalData"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | ComponentAdditionalData"},{"heading":"properties","content":"null"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"AnySelectMenu.additionalData"},{"heading":"properties","content":"customId"},{"heading":"properties","content":"abstract"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The custom ID of the component"},{"heading":"properties","content":"-"},{"heading":"properties","content":"AnySelectMenu.customId"},{"heading":"properties","content":"defer"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"false"},{"heading":"properties","content":"Whether the component response should be automatically deferred"},{"heading":"properties","content":"-"},{"heading":"properties","content":"AnySelectMenu.defer"},{"heading":"properties","content":"disabled?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"AnySelectMenu.disabled"},{"heading":"properties","content":"ephemeral"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"false"},{"heading":"properties","content":"Whether the component response should be ephemeral"},{"heading":"properties","content":"-"},{"heading":"properties","content":"AnySelectMenu.ephemeral"},{"heading":"properties","content":"maxValues?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"number"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"AnySelectMenu.maxValues"},{"heading":"properties","content":"minValues?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"number"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"AnySelectMenu.minValues"},{"heading":"properties","content":"options"},{"heading":"properties","content":"abstract"},{"heading":"properties","content":"APISelectMenuOption[]"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"placeholder?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"AnySelectMenu.placeholder"},{"heading":"properties","content":"type"},{"heading":"properties","content":"public"},{"heading":"properties","content":"StringSelect"},{"heading":"properties","content":"ComponentType.StringSelect"},{"heading":"properties","content":"The type of the component"},{"heading":"properties","content":"AnySelectMenu.type"},{"heading":"properties","content":"-"},{"heading":"createid","content":"createId(additionalData): string"},{"heading":"createid","content":"Create a custom ID to use for this component that embeds additional data that you want to be handed"},{"heading":"parameters-1","content":"Parameter"},{"heading":"parameters-1","content":"Type"},{"heading":"parameters-1","content":"Description"},{"heading":"parameters-1","content":"additionalData"},{"heading":"parameters-1","content":"null | ComponentAdditionalData"},{"heading":"parameters-1","content":"The additional data that you want to be passed in this component's custom ID"},{"heading":"returns-1","content":"string"},{"heading":"returns-1","content":"The custom ID to use"},{"heading":"inherited-from-1","content":"AnySelectMenu.createId"},{"heading":"run","content":"abstract run(interaction): Promise<void>"},{"heading":"parameters-2","content":"Parameter"},{"heading":"parameters-2","content":"Type"},{"heading":"parameters-2","content":"interaction"},{"heading":"parameters-2","content":"StringSelectMenuInteraction"},{"heading":"returns-2","content":"Promise<void>"},{"heading":"overrides","content":"AnySelectMenu.run"},{"heading":"serialize","content":"serialize(): APISelectMenuComponent"},{"heading":"returns-3","content":"APISelectMenuComponent"},{"heading":"inherited-from-2","content":"AnySelectMenu.serialize"},{"heading":"serializeoptions","content":"serializeOptions(): object"},{"heading":"returns-4","content":"object"},{"heading":"returns-4","content":"Name"},{"heading":"returns-4","content":"Type"},{"heading":"returns-4","content":"options"},{"heading":"returns-4","content":"APISelectMenuOption[]"},{"heading":"returns-4","content":"type"},{"heading":"returns-4","content":"StringSelect"},{"heading":"overrides-1","content":"AnySelectMenu.serializeOptions"}],"headings":[{"id":"extends","content":"Extends"},{"id":"constructors","content":"Constructors"},{"id":"new-stringselectmenu","content":"new StringSelectMenu()"},{"id":"parameters","content":"Parameters"},{"id":"returns","content":"Returns"},{"id":"inherited-from","content":"Inherited from"},{"id":"properties","content":"Properties"},{"id":"methods","content":"Methods"},{"id":"createid","content":"createId()"},{"id":"parameters-1","content":"Parameters"},{"id":"returns-1","content":"Returns"},{"id":"inherited-from-1","content":"Inherited from"},{"id":"run","content":"run()"},{"id":"parameters-2","content":"Parameters"},{"id":"returns-2","content":"Returns"},{"id":"overrides","content":"Overrides"},{"id":"serialize","content":"serialize()"},{"id":"returns-3","content":"Returns"},{"id":"inherited-from-2","content":"Inherited from"},{"id":"serializeoptions","content":"serializeOptions()"},{"id":"returns-4","content":"Returns"},{"id":"overrides-1","content":"Overrides"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/api/classes/StringSelectMenuInteraction.mdx","data":{"frontmatter":{"title":"StringSelectMenuInteraction","index":false},"toc":[{"title":"Extends","url":"#extends","depth":2},{"title":"Constructors","url":"#constructors","depth":2},{"title":"new StringSelectMenuInteraction()","url":"#new-stringselectmenuinteraction","depth":3},{"title":"Parameters","url":"#parameters","depth":4},{"title":"Returns","url":"#returns","depth":4},{"title":"Overrides","url":"#overrides","depth":4},{"title":"Properties","url":"#properties","depth":2},{"title":"Accessors","url":"#accessors","depth":2},{"title":"channel","url":"#channel","depth":3},{"title":"Returns","url":"#returns-1","depth":4},{"title":"Inherited from","url":"#inherited-from","depth":4},{"title":"guild","url":"#guild","depth":3},{"title":"Returns","url":"#returns-2","depth":4},{"title":"Inherited from","url":"#inherited-from-1","depth":4},{"title":"member","url":"#member","depth":3},{"title":"Returns","url":"#returns-3","depth":4},{"title":"Inherited from","url":"#inherited-from-2","depth":4},{"title":"message","url":"#message","depth":3},{"title":"Returns","url":"#returns-4","depth":4},{"title":"Inherited from","url":"#inherited-from-3","depth":4},{"title":"user","url":"#user","depth":3},{"title":"Returns","url":"#returns-5","depth":4},{"title":"Inherited from","url":"#inherited-from-4","depth":4},{"title":"values","url":"#values","depth":3},{"title":"Returns","url":"#returns-6","depth":4},{"title":"Overrides","url":"#overrides-1","depth":4},{"title":"Methods","url":"#methods","depth":2},{"title":"defer()","url":"#defer","depth":3},{"title":"Returns","url":"#returns-7","depth":4},{"title":"Inherited from","url":"#inherited-from-5","depth":4},{"title":"reply()","url":"#reply","depth":3},{"title":"Parameters","url":"#parameters-1","depth":4},{"title":"Returns","url":"#returns-8","depth":4},{"title":"Inherited from","url":"#inherited-from-6","depth":4},{"title":"showModal()","url":"#showmodal","depth":3},{"title":"Parameters","url":"#parameters-2","depth":4},{"title":"Returns","url":"#returns-9","depth":4},{"title":"Inherited from","url":"#inherited-from-7","depth":4}],"structuredData":{"contents":[{"heading":"","content":"This is the base type interaction, all interaction types extend from this"},{"heading":"extends","content":"AnySelectMenuInteraction"},{"heading":"new-stringselectmenuinteraction","content":"new StringSelectMenuInteraction(client, data): StringSelectMenuInteraction"},{"heading":"parameters","content":"Parameter"},{"heading":"parameters","content":"Type"},{"heading":"parameters","content":"client"},{"heading":"parameters","content":"Client"},{"heading":"parameters","content":"data"},{"heading":"parameters","content":"APIMessageComponentSelectMenuInteraction"},{"heading":"returns","content":"StringSelectMenuInteraction"},{"heading":"overrides","content":"AnySelectMenuInteraction.constructor"},{"heading":"properties","content":"Property"},{"heading":"properties","content":"Type"},{"heading":"properties","content":"Default value"},{"heading":"properties","content":"Description"},{"heading":"properties","content":"Inherited from"},{"heading":"properties","content":"_deferred"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"false"},{"heading":"properties","content":"Internal Whether the interaction is deferred already"},{"heading":"properties","content":"AnySelectMenuInteraction._deferred"},{"heading":"properties","content":"client"},{"heading":"properties","content":"Client"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"AnySelectMenuInteraction.client"},{"heading":"properties","content":"componentType"},{"heading":"properties","content":"ComponentType"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"AnySelectMenuInteraction.componentType"},{"heading":"properties","content":"customId"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"AnySelectMenuInteraction.customId"},{"heading":"properties","content":"rawData"},{"heading":"properties","content":"APIMessageComponentInteraction"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The raw data of the interaction"},{"heading":"properties","content":"AnySelectMenuInteraction.rawData"},{"heading":"properties","content":"type"},{"heading":"properties","content":"InteractionType"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The type of interaction"},{"heading":"properties","content":"AnySelectMenuInteraction.type"},{"heading":"properties","content":"userId"},{"heading":"properties","content":"undefined | string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The user who sent the interaction"},{"heading":"properties","content":"AnySelectMenuInteraction.userId"},{"heading":"channel","content":"get channel(): null | DmChannel | GuildCategoryChannel | GroupDmChannel | GuildTextChannel | GuildVoiceChannel | GuildAnnouncementChannel | GuildThreadChannel<ThreadChannelType> | GuildStageChannel | GuildForumChannel | GuildMediaChannel"},{"heading":"returns-1","content":"null | DmChannel | GuildCategoryChannel | GroupDmChannel | GuildTextChannel | GuildVoiceChannel | GuildAnnouncementChannel | GuildThreadChannel<ThreadChannelType> | GuildStageChannel | GuildForumChannel | GuildMediaChannel"},{"heading":"inherited-from","content":"AnySelectMenuInteraction.channel"},{"heading":"guild","content":"get guild(): null | Guild"},{"heading":"returns-2","content":"null | Guild"},{"heading":"inherited-from-1","content":"AnySelectMenuInteraction.guild"},{"heading":"member","content":"get member(): null | GuildMember"},{"heading":"returns-3","content":"null | GuildMember"},{"heading":"inherited-from-2","content":"AnySelectMenuInteraction.member"},{"heading":"message","content":"get message(): null | Message"},{"heading":"returns-4","content":"null | Message"},{"heading":"inherited-from-3","content":"AnySelectMenuInteraction.message"},{"heading":"user","content":"get user(): null | User"},{"heading":"returns-5","content":"null | User"},{"heading":"inherited-from-4","content":"AnySelectMenuInteraction.user"},{"heading":"values","content":"get values(): string[]"},{"heading":"values","content":"The raw IDs of the selected options (either role/string/channel IDs or the IDs you provided in your options)"},{"heading":"returns-6","content":"string[]"},{"heading":"overrides-1","content":"AnySelectMenuInteraction.values"},{"heading":"defer","content":"defer(): Promise<void>"},{"heading":"defer","content":"Internal"},{"heading":"defer","content":"Defer the interaction response. This is used automatically by commands that are set to defer.\nIf the interaction is already deferred, this will do nothing."},{"heading":"returns-7","content":"Promise<void>"},{"heading":"inherited-from-5","content":"AnySelectMenuInteraction.defer"},{"heading":"reply","content":"reply(data, options): Promise<void>"},{"heading":"reply","content":"Reply to an interaction.\nIf the interaction is deferred, this will edit the original response."},{"heading":"parameters-1","content":"Parameter"},{"heading":"parameters-1","content":"Type"},{"heading":"parameters-1","content":"Description"},{"heading":"parameters-1","content":"data"},{"heading":"parameters-1","content":"InteractionReplyData"},{"heading":"parameters-1","content":"The response data"},{"heading":"parameters-1","content":"options"},{"heading":"parameters-1","content":"InteractionReplyOptions"},{"heading":"parameters-1","content":"-"},{"heading":"returns-8","content":"Promise<void>"},{"heading":"inherited-from-6","content":"AnySelectMenuInteraction.reply"},{"heading":"showmodal","content":"showModal(modal): Promise<void>"},{"heading":"parameters-2","content":"Parameter"},{"heading":"parameters-2","content":"Type"},{"heading":"parameters-2","content":"modal"},{"heading":"parameters-2","content":"Modal"},{"heading":"returns-9","content":"Promise<void>"},{"heading":"inherited-from-7","content":"AnySelectMenuInteraction.showModal"}],"headings":[{"id":"extends","content":"Extends"},{"id":"constructors","content":"Constructors"},{"id":"new-stringselectmenuinteraction","content":"new StringSelectMenuInteraction()"},{"id":"parameters","content":"Parameters"},{"id":"returns","content":"Returns"},{"id":"overrides","content":"Overrides"},{"id":"properties","content":"Properties"},{"id":"accessors","content":"Accessors"},{"id":"channel","content":"channel"},{"id":"returns-1","content":"Returns"},{"id":"inherited-from","content":"Inherited from"},{"id":"guild","content":"guild"},{"id":"returns-2","content":"Returns"},{"id":"inherited-from-1","content":"Inherited from"},{"id":"member","content":"member"},{"id":"returns-3","content":"Returns"},{"id":"inherited-from-2","content":"Inherited from"},{"id":"message","content":"message"},{"id":"returns-4","content":"Returns"},{"id":"inherited-from-3","content":"Inherited from"},{"id":"user","content":"user"},{"id":"returns-5","content":"Returns"},{"id":"inherited-from-4","content":"Inherited from"},{"id":"values","content":"values"},{"id":"returns-6","content":"Returns"},{"id":"overrides-1","content":"Overrides"},{"id":"methods","content":"Methods"},{"id":"defer","content":"defer()"},{"id":"returns-7","content":"Returns"},{"id":"inherited-from-5","content":"Inherited from"},{"id":"reply","content":"reply()"},{"id":"parameters-1","content":"Parameters"},{"id":"returns-8","content":"Returns"},{"id":"inherited-from-6","content":"Inherited from"},{"id":"showmodal","content":"showModal()"},{"id":"parameters-2","content":"Parameters"},{"id":"returns-9","content":"Returns"},{"id":"inherited-from-7","content":"Inherited from"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/api/classes/TextInput.mdx","data":{"frontmatter":{"title":"TextInput","index":false},"toc":[{"title":"Extends","url":"#extends","depth":2},{"title":"Constructors","url":"#constructors","depth":2},{"title":"new TextInput()","url":"#new-textinput","depth":3},{"title":"Parameters","url":"#parameters","depth":4},{"title":"Returns","url":"#returns","depth":4},{"title":"Inherited from","url":"#inherited-from","depth":4},{"title":"Properties","url":"#properties","depth":2},{"title":"Methods","url":"#methods","depth":2},{"title":"createId()","url":"#createid","depth":3},{"title":"Parameters","url":"#parameters-1","depth":4},{"title":"Returns","url":"#returns-1","depth":4},{"title":"Inherited from","url":"#inherited-from-1","depth":4},{"title":"serialize()","url":"#serialize","depth":3},{"title":"Returns","url":"#returns-2","depth":4},{"title":"Overrides","url":"#overrides","depth":4}],"structuredData":{"contents":[{"heading":"extends","content":"BaseComponent"},{"heading":"new-textinput","content":"new TextInput(data?): TextInput"},{"heading":"parameters","content":"Parameter"},{"heading":"parameters","content":"Type"},{"heading":"parameters","content":"data?"},{"heading":"parameters","content":"object"},{"heading":"parameters","content":"data.additionalData?"},{"heading":"parameters","content":"ComponentAdditionalData"},{"heading":"returns","content":"TextInput"},{"heading":"inherited-from","content":"BaseComponent.constructor"},{"heading":"properties","content":"Property"},{"heading":"properties","content":"Modifier"},{"heading":"properties","content":"Type"},{"heading":"properties","content":"Default value"},{"heading":"properties","content":"Description"},{"heading":"properties","content":"Overrides"},{"heading":"properties","content":"Inherited from"},{"heading":"properties","content":"additionalData"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | ComponentAdditionalData"},{"heading":"properties","content":"null"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseComponent.additionalData"},{"heading":"properties","content":"customId"},{"heading":"properties","content":"abstract"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The custom ID of the text input"},{"heading":"properties","content":"BaseComponent.customId"},{"heading":"properties","content":"-"},{"heading":"properties","content":"defer"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"false"},{"heading":"properties","content":"Whether the component response should be automatically deferred"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseComponent.defer"},{"heading":"properties","content":"ephemeral"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"false"},{"heading":"properties","content":"Whether the component response should be ephemeral"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseComponent.ephemeral"},{"heading":"properties","content":"label"},{"heading":"properties","content":"abstract"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The label of the text input"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"maxLength?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"number"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The maximum length of the text input"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"minLength?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"number"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The minimum length of the text input"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"placeholder?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The placeholder of the text input"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"required?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"Whether the text input is required"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"style"},{"heading":"properties","content":"public"},{"heading":"properties","content":"TextInputStyle"},{"heading":"properties","content":"TextInputStyle.Short"},{"heading":"properties","content":"The style of the text input Default TextInputStyle.Short"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"type"},{"heading":"properties","content":"public"},{"heading":"properties","content":"ComponentType"},{"heading":"properties","content":"ComponentType.TextInput"},{"heading":"properties","content":"The type of the component"},{"heading":"properties","content":"BaseComponent.type"},{"heading":"properties","content":"-"},{"heading":"properties","content":"value?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The value of the text input"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"createid","content":"createId(additionalData): string"},{"heading":"createid","content":"Create a custom ID to use for this component that embeds additional data that you want to be handed"},{"heading":"parameters-1","content":"Parameter"},{"heading":"parameters-1","content":"Type"},{"heading":"parameters-1","content":"Description"},{"heading":"parameters-1","content":"additionalData"},{"heading":"parameters-1","content":"null | ComponentAdditionalData"},{"heading":"parameters-1","content":"The additional data that you want to be passed in this component's custom ID"},{"heading":"returns-1","content":"string"},{"heading":"returns-1","content":"The custom ID to use"},{"heading":"inherited-from-1","content":"BaseComponent.createId"},{"heading":"serialize","content":"serialize(): APITextInputComponent"},{"heading":"returns-2","content":"APITextInputComponent"},{"heading":"overrides","content":"BaseComponent.serialize"}],"headings":[{"id":"extends","content":"Extends"},{"id":"constructors","content":"Constructors"},{"id":"new-textinput","content":"new TextInput()"},{"id":"parameters","content":"Parameters"},{"id":"returns","content":"Returns"},{"id":"inherited-from","content":"Inherited from"},{"id":"properties","content":"Properties"},{"id":"methods","content":"Methods"},{"id":"createid","content":"createId()"},{"id":"parameters-1","content":"Parameters"},{"id":"returns-1","content":"Returns"},{"id":"inherited-from-1","content":"Inherited from"},{"id":"serialize","content":"serialize()"},{"id":"returns-2","content":"Returns"},{"id":"overrides","content":"Overrides"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/api/classes/User.mdx","data":{"frontmatter":{"title":"User","index":false},"toc":[{"title":"Extends","url":"#extends","depth":2},{"title":"Constructors","url":"#constructors","depth":2},{"title":"new User()","url":"#new-user","depth":3},{"title":"Parameters","url":"#parameters","depth":4},{"title":"Returns","url":"#returns","depth":4},{"title":"Overrides","url":"#overrides","depth":4},{"title":"Properties","url":"#properties","depth":2},{"title":"Accessors","url":"#accessors","depth":2},{"title":"avatarUrl","url":"#avatarurl","depth":3},{"title":"Returns","url":"#returns-1","depth":4},{"title":"bannerUrl","url":"#bannerurl","depth":3},{"title":"Returns","url":"#returns-2","depth":4},{"title":"Methods","url":"#methods","depth":2},{"title":"createDm()","url":"#createdm","depth":3},{"title":"Parameters","url":"#parameters-1","depth":4},{"title":"Returns","url":"#returns-3","depth":4},{"title":"fetch()","url":"#fetch","depth":3},{"title":"Returns","url":"#returns-4","depth":4},{"title":"send()","url":"#send","depth":3},{"title":"Parameters","url":"#parameters-2","depth":4},{"title":"Returns","url":"#returns-5","depth":4}],"structuredData":{"contents":[{"heading":"extends","content":"Base"},{"heading":"new-user","content":"new User(client, rawDataOrId): User"},{"heading":"parameters","content":"Parameter"},{"heading":"parameters","content":"Type"},{"heading":"parameters","content":"client"},{"heading":"parameters","content":"Client"},{"heading":"parameters","content":"rawDataOrId"},{"heading":"parameters","content":"string | APIUser"},{"heading":"returns","content":"User"},{"heading":"overrides","content":"Base.constructor"},{"heading":"properties","content":"Property"},{"heading":"properties","content":"Type"},{"heading":"properties","content":"Description"},{"heading":"properties","content":"Inherited from"},{"heading":"properties","content":"accentColor?"},{"heading":"properties","content":"null | number"},{"heading":"properties","content":"The accent color of the user."},{"heading":"properties","content":"-"},{"heading":"properties","content":"avatar?"},{"heading":"properties","content":"null | string"},{"heading":"properties","content":"The avatar hash of the user. You can use User.avatarUrl to get the URL of the avatar."},{"heading":"properties","content":"-"},{"heading":"properties","content":"banner?"},{"heading":"properties","content":"null | string"},{"heading":"properties","content":"The banner hash of the user. You can use User.bannerUrl to get the URL of the banner."},{"heading":"properties","content":"-"},{"heading":"properties","content":"bot?"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"Is this user a bot?"},{"heading":"properties","content":"-"},{"heading":"properties","content":"client"},{"heading":"properties","content":"Client"},{"heading":"properties","content":"-"},{"heading":"properties","content":"Base.client"},{"heading":"properties","content":"discriminator?"},{"heading":"properties","content":"string"},{"heading":"properties","content":"The discriminator of the user."},{"heading":"properties","content":"-"},{"heading":"properties","content":"flags?"},{"heading":"properties","content":"UserFlags"},{"heading":"properties","content":"The public flags of the user. (Bitfield) See https://discord.com/developers/docs/resources/user#user-object-user-flags"},{"heading":"properties","content":"-"},{"heading":"properties","content":"globalName?"},{"heading":"properties","content":"null | string"},{"heading":"properties","content":"The global name of the user."},{"heading":"properties","content":"-"},{"heading":"properties","content":"id"},{"heading":"properties","content":"string"},{"heading":"properties","content":"The ID of the user"},{"heading":"properties","content":"-"},{"heading":"properties","content":"partial"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"Whether the user is a partial user (meaning it does not have all the data). If this is true, you should use User.fetch to get the full data of the user."},{"heading":"properties","content":"-"},{"heading":"properties","content":"system?"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"Is this user a system user?"},{"heading":"properties","content":"-"},{"heading":"properties","content":"username?"},{"heading":"properties","content":"string"},{"heading":"properties","content":"The username of the user."},{"heading":"properties","content":"-"},{"heading":"avatarurl","content":"get avatarUrl(): null | string"},{"heading":"avatarurl","content":"Get the URL of the user's avatar"},{"heading":"returns-1","content":"null | string"},{"heading":"bannerurl","content":"get bannerUrl(): null | string"},{"heading":"bannerurl","content":"Get the URL of the user's banner"},{"heading":"returns-2","content":"null | string"},{"heading":"createdm","content":"createDm(userId): Promise<APIDMChannel>"},{"heading":"createdm","content":"Instantiate a new DM channel with this user."},{"heading":"parameters-1","content":"Parameter"},{"heading":"parameters-1","content":"Type"},{"heading":"parameters-1","content":"userId"},{"heading":"parameters-1","content":"string"},{"heading":"returns-3","content":"Promise<APIDMChannel>"},{"heading":"fetch","content":"fetch(): Promise<void>"},{"heading":"fetch","content":"Fetch updated data for this user.\nIf the user is partial, this will fetch all the data for the user and populate the fields.\nIf the user is not partial, all fields will be updated with new values from Discord."},{"heading":"returns-4","content":"Promise<void>"},{"heading":"send","content":"send(data): Promise<Message>"},{"heading":"send","content":"Send a message to this user."},{"heading":"parameters-2","content":"Parameter"},{"heading":"parameters-2","content":"Type"},{"heading":"parameters-2","content":"data"},{"heading":"parameters-2","content":"RESTPostAPIChannelMessageJSONBody"},{"heading":"returns-5","content":"Promise<Message>"}],"headings":[{"id":"extends","content":"Extends"},{"id":"constructors","content":"Constructors"},{"id":"new-user","content":"new User()"},{"id":"parameters","content":"Parameters"},{"id":"returns","content":"Returns"},{"id":"overrides","content":"Overrides"},{"id":"properties","content":"Properties"},{"id":"accessors","content":"Accessors"},{"id":"avatarurl","content":"avatarUrl"},{"id":"returns-1","content":"Returns"},{"id":"bannerurl","content":"bannerUrl"},{"id":"returns-2","content":"Returns"},{"id":"methods","content":"Methods"},{"id":"createdm","content":"createDm()"},{"id":"parameters-1","content":"Parameters"},{"id":"returns-3","content":"Returns"},{"id":"fetch","content":"fetch()"},{"id":"returns-4","content":"Returns"},{"id":"send","content":"send()"},{"id":"parameters-2","content":"Parameters"},{"id":"returns-5","content":"Returns"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/api/classes/UserSelectMenu.mdx","data":{"frontmatter":{"title":"UserSelectMenu","index":false},"toc":[{"title":"Extends","url":"#extends","depth":2},{"title":"Constructors","url":"#constructors","depth":2},{"title":"new UserSelectMenu()","url":"#new-userselectmenu","depth":3},{"title":"Parameters","url":"#parameters","depth":4},{"title":"Returns","url":"#returns","depth":4},{"title":"Inherited from","url":"#inherited-from","depth":4},{"title":"Properties","url":"#properties","depth":2},{"title":"Methods","url":"#methods","depth":2},{"title":"createId()","url":"#createid","depth":3},{"title":"Parameters","url":"#parameters-1","depth":4},{"title":"Returns","url":"#returns-1","depth":4},{"title":"Inherited from","url":"#inherited-from-1","depth":4},{"title":"run()","url":"#run","depth":3},{"title":"Parameters","url":"#parameters-2","depth":4},{"title":"Returns","url":"#returns-2","depth":4},{"title":"Overrides","url":"#overrides","depth":4},{"title":"serialize()","url":"#serialize","depth":3},{"title":"Returns","url":"#returns-3","depth":4},{"title":"Inherited from","url":"#inherited-from-2","depth":4},{"title":"serializeOptions()","url":"#serializeoptions","depth":3},{"title":"Returns","url":"#returns-4","depth":4},{"title":"Overrides","url":"#overrides-1","depth":4}],"structuredData":{"contents":[{"heading":"extends","content":"AnySelectMenu"},{"heading":"new-userselectmenu","content":"new UserSelectMenu(data?): UserSelectMenu"},{"heading":"parameters","content":"Parameter"},{"heading":"parameters","content":"Type"},{"heading":"parameters","content":"data?"},{"heading":"parameters","content":"object"},{"heading":"parameters","content":"data.additionalData?"},{"heading":"parameters","content":"ComponentAdditionalData"},{"heading":"returns","content":"UserSelectMenu"},{"heading":"inherited-from","content":"AnySelectMenu.constructor"},{"heading":"properties","content":"Property"},{"heading":"properties","content":"Modifier"},{"heading":"properties","content":"Type"},{"heading":"properties","content":"Default value"},{"heading":"properties","content":"Description"},{"heading":"properties","content":"Overrides"},{"heading":"properties","content":"Inherited from"},{"heading":"properties","content":"additionalData"},{"heading":"properties","content":"public"},{"heading":"properties","content":"null | ComponentAdditionalData"},{"heading":"properties","content":"null"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"AnySelectMenu.additionalData"},{"heading":"properties","content":"customId"},{"heading":"properties","content":"abstract"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The custom ID of the component"},{"heading":"properties","content":"-"},{"heading":"properties","content":"AnySelectMenu.customId"},{"heading":"properties","content":"defaultValues?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"APISelectMenuDefaultValue<User>[]"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"defer"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"false"},{"heading":"properties","content":"Whether the component response should be automatically deferred"},{"heading":"properties","content":"-"},{"heading":"properties","content":"AnySelectMenu.defer"},{"heading":"properties","content":"disabled?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"AnySelectMenu.disabled"},{"heading":"properties","content":"ephemeral"},{"heading":"properties","content":"public"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"false"},{"heading":"properties","content":"Whether the component response should be ephemeral"},{"heading":"properties","content":"-"},{"heading":"properties","content":"AnySelectMenu.ephemeral"},{"heading":"properties","content":"maxValues?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"number"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"AnySelectMenu.maxValues"},{"heading":"properties","content":"minValues?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"number"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"AnySelectMenu.minValues"},{"heading":"properties","content":"placeholder?"},{"heading":"properties","content":"public"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"AnySelectMenu.placeholder"},{"heading":"properties","content":"type"},{"heading":"properties","content":"public"},{"heading":"properties","content":"UserSelect"},{"heading":"properties","content":"ComponentType.UserSelect"},{"heading":"properties","content":"The type of the component"},{"heading":"properties","content":"AnySelectMenu.type"},{"heading":"properties","content":"-"},{"heading":"createid","content":"createId(additionalData): string"},{"heading":"createid","content":"Create a custom ID to use for this component that embeds additional data that you want to be handed"},{"heading":"parameters-1","content":"Parameter"},{"heading":"parameters-1","content":"Type"},{"heading":"parameters-1","content":"Description"},{"heading":"parameters-1","content":"additionalData"},{"heading":"parameters-1","content":"null | ComponentAdditionalData"},{"heading":"parameters-1","content":"The additional data that you want to be passed in this component's custom ID"},{"heading":"returns-1","content":"string"},{"heading":"returns-1","content":"The custom ID to use"},{"heading":"inherited-from-1","content":"AnySelectMenu.createId"},{"heading":"run","content":"abstract run(interaction): Promise<void>"},{"heading":"parameters-2","content":"Parameter"},{"heading":"parameters-2","content":"Type"},{"heading":"parameters-2","content":"interaction"},{"heading":"parameters-2","content":"UserSelectMenuInteraction"},{"heading":"returns-2","content":"Promise<void>"},{"heading":"overrides","content":"AnySelectMenu.run"},{"heading":"serialize","content":"serialize(): APISelectMenuComponent"},{"heading":"returns-3","content":"APISelectMenuComponent"},{"heading":"inherited-from-2","content":"AnySelectMenu.serialize"},{"heading":"serializeoptions","content":"serializeOptions(): object"},{"heading":"returns-4","content":"object"},{"heading":"returns-4","content":"Name"},{"heading":"returns-4","content":"Type"},{"heading":"returns-4","content":"default_values"},{"heading":"returns-4","content":"undefined | APISelectMenuDefaultValue<User>[]"},{"heading":"returns-4","content":"type"},{"heading":"returns-4","content":"UserSelect"},{"heading":"overrides-1","content":"AnySelectMenu.serializeOptions"}],"headings":[{"id":"extends","content":"Extends"},{"id":"constructors","content":"Constructors"},{"id":"new-userselectmenu","content":"new UserSelectMenu()"},{"id":"parameters","content":"Parameters"},{"id":"returns","content":"Returns"},{"id":"inherited-from","content":"Inherited from"},{"id":"properties","content":"Properties"},{"id":"methods","content":"Methods"},{"id":"createid","content":"createId()"},{"id":"parameters-1","content":"Parameters"},{"id":"returns-1","content":"Returns"},{"id":"inherited-from-1","content":"Inherited from"},{"id":"run","content":"run()"},{"id":"parameters-2","content":"Parameters"},{"id":"returns-2","content":"Returns"},{"id":"overrides","content":"Overrides"},{"id":"serialize","content":"serialize()"},{"id":"returns-3","content":"Returns"},{"id":"inherited-from-2","content":"Inherited from"},{"id":"serializeoptions","content":"serializeOptions()"},{"id":"returns-4","content":"Returns"},{"id":"overrides-1","content":"Overrides"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/api/classes/UserSelectMenuInteraction.mdx","data":{"frontmatter":{"title":"UserSelectMenuInteraction","index":false},"toc":[{"title":"Extends","url":"#extends","depth":2},{"title":"Constructors","url":"#constructors","depth":2},{"title":"new UserSelectMenuInteraction()","url":"#new-userselectmenuinteraction","depth":3},{"title":"Parameters","url":"#parameters","depth":4},{"title":"Returns","url":"#returns","depth":4},{"title":"Overrides","url":"#overrides","depth":4},{"title":"Properties","url":"#properties","depth":2},{"title":"Accessors","url":"#accessors","depth":2},{"title":"channel","url":"#channel","depth":3},{"title":"Returns","url":"#returns-1","depth":4},{"title":"Inherited from","url":"#inherited-from","depth":4},{"title":"guild","url":"#guild","depth":3},{"title":"Returns","url":"#returns-2","depth":4},{"title":"Inherited from","url":"#inherited-from-1","depth":4},{"title":"member","url":"#member","depth":3},{"title":"Returns","url":"#returns-3","depth":4},{"title":"Inherited from","url":"#inherited-from-2","depth":4},{"title":"message","url":"#message","depth":3},{"title":"Returns","url":"#returns-4","depth":4},{"title":"Inherited from","url":"#inherited-from-3","depth":4},{"title":"user","url":"#user","depth":3},{"title":"Returns","url":"#returns-5","depth":4},{"title":"Inherited from","url":"#inherited-from-4","depth":4},{"title":"values","url":"#values","depth":3},{"title":"Returns","url":"#returns-6","depth":4},{"title":"Overrides","url":"#overrides-1","depth":4},{"title":"Methods","url":"#methods","depth":2},{"title":"defer()","url":"#defer","depth":3},{"title":"Returns","url":"#returns-7","depth":4},{"title":"Inherited from","url":"#inherited-from-5","depth":4},{"title":"reply()","url":"#reply","depth":3},{"title":"Parameters","url":"#parameters-1","depth":4},{"title":"Returns","url":"#returns-8","depth":4},{"title":"Inherited from","url":"#inherited-from-6","depth":4},{"title":"showModal()","url":"#showmodal","depth":3},{"title":"Parameters","url":"#parameters-2","depth":4},{"title":"Returns","url":"#returns-9","depth":4},{"title":"Inherited from","url":"#inherited-from-7","depth":4}],"structuredData":{"contents":[{"heading":"","content":"This is the base type interaction, all interaction types extend from this"},{"heading":"extends","content":"AnySelectMenuInteraction"},{"heading":"new-userselectmenuinteraction","content":"new UserSelectMenuInteraction(client, data): UserSelectMenuInteraction"},{"heading":"parameters","content":"Parameter"},{"heading":"parameters","content":"Type"},{"heading":"parameters","content":"client"},{"heading":"parameters","content":"Client"},{"heading":"parameters","content":"data"},{"heading":"parameters","content":"APIMessageComponentSelectMenuInteraction"},{"heading":"returns","content":"UserSelectMenuInteraction"},{"heading":"overrides","content":"AnySelectMenuInteraction.constructor"},{"heading":"properties","content":"Property"},{"heading":"properties","content":"Type"},{"heading":"properties","content":"Default value"},{"heading":"properties","content":"Description"},{"heading":"properties","content":"Inherited from"},{"heading":"properties","content":"_deferred"},{"heading":"properties","content":"boolean"},{"heading":"properties","content":"false"},{"heading":"properties","content":"Internal Whether the interaction is deferred already"},{"heading":"properties","content":"AnySelectMenuInteraction._deferred"},{"heading":"properties","content":"client"},{"heading":"properties","content":"Client"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"AnySelectMenuInteraction.client"},{"heading":"properties","content":"componentType"},{"heading":"properties","content":"ComponentType"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"AnySelectMenuInteraction.componentType"},{"heading":"properties","content":"customId"},{"heading":"properties","content":"string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"-"},{"heading":"properties","content":"AnySelectMenuInteraction.customId"},{"heading":"properties","content":"rawData"},{"heading":"properties","content":"APIMessageComponentInteraction"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The raw data of the interaction"},{"heading":"properties","content":"AnySelectMenuInteraction.rawData"},{"heading":"properties","content":"type"},{"heading":"properties","content":"InteractionType"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The type of interaction"},{"heading":"properties","content":"AnySelectMenuInteraction.type"},{"heading":"properties","content":"userId"},{"heading":"properties","content":"undefined | string"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The user who sent the interaction"},{"heading":"properties","content":"AnySelectMenuInteraction.userId"},{"heading":"channel","content":"get channel(): null | DmChannel | GuildCategoryChannel | GroupDmChannel | GuildTextChannel | GuildVoiceChannel | GuildAnnouncementChannel | GuildThreadChannel<ThreadChannelType> | GuildStageChannel | GuildForumChannel | GuildMediaChannel"},{"heading":"returns-1","content":"null | DmChannel | GuildCategoryChannel | GroupDmChannel | GuildTextChannel | GuildVoiceChannel | GuildAnnouncementChannel | GuildThreadChannel<ThreadChannelType> | GuildStageChannel | GuildForumChannel | GuildMediaChannel"},{"heading":"inherited-from","content":"AnySelectMenuInteraction.channel"},{"heading":"guild","content":"get guild(): null | Guild"},{"heading":"returns-2","content":"null | Guild"},{"heading":"inherited-from-1","content":"AnySelectMenuInteraction.guild"},{"heading":"member","content":"get member(): null | GuildMember"},{"heading":"returns-3","content":"null | GuildMember"},{"heading":"inherited-from-2","content":"AnySelectMenuInteraction.member"},{"heading":"message","content":"get message(): null | Message"},{"heading":"returns-4","content":"null | Message"},{"heading":"inherited-from-3","content":"AnySelectMenuInteraction.message"},{"heading":"user","content":"get user(): null | User"},{"heading":"returns-5","content":"null | User"},{"heading":"inherited-from-4","content":"AnySelectMenuInteraction.user"},{"heading":"values","content":"get values(): string[]"},{"heading":"values","content":"The raw IDs of the selected options (either role/string/channel IDs or the IDs you provided in your options)"},{"heading":"returns-6","content":"string[]"},{"heading":"overrides-1","content":"AnySelectMenuInteraction.values"},{"heading":"defer","content":"defer(): Promise<void>"},{"heading":"defer","content":"Internal"},{"heading":"defer","content":"Defer the interaction response. This is used automatically by commands that are set to defer.\nIf the interaction is already deferred, this will do nothing."},{"heading":"returns-7","content":"Promise<void>"},{"heading":"inherited-from-5","content":"AnySelectMenuInteraction.defer"},{"heading":"reply","content":"reply(data, options): Promise<void>"},{"heading":"reply","content":"Reply to an interaction.\nIf the interaction is deferred, this will edit the original response."},{"heading":"parameters-1","content":"Parameter"},{"heading":"parameters-1","content":"Type"},{"heading":"parameters-1","content":"Description"},{"heading":"parameters-1","content":"data"},{"heading":"parameters-1","content":"InteractionReplyData"},{"heading":"parameters-1","content":"The response data"},{"heading":"parameters-1","content":"options"},{"heading":"parameters-1","content":"InteractionReplyOptions"},{"heading":"parameters-1","content":"-"},{"heading":"returns-8","content":"Promise<void>"},{"heading":"inherited-from-6","content":"AnySelectMenuInteraction.reply"},{"heading":"showmodal","content":"showModal(modal): Promise<void>"},{"heading":"parameters-2","content":"Parameter"},{"heading":"parameters-2","content":"Type"},{"heading":"parameters-2","content":"modal"},{"heading":"parameters-2","content":"Modal"},{"heading":"returns-9","content":"Promise<void>"},{"heading":"inherited-from-7","content":"AnySelectMenuInteraction.showModal"}],"headings":[{"id":"extends","content":"Extends"},{"id":"constructors","content":"Constructors"},{"id":"new-userselectmenuinteraction","content":"new UserSelectMenuInteraction()"},{"id":"parameters","content":"Parameters"},{"id":"returns","content":"Returns"},{"id":"overrides","content":"Overrides"},{"id":"properties","content":"Properties"},{"id":"accessors","content":"Accessors"},{"id":"channel","content":"channel"},{"id":"returns-1","content":"Returns"},{"id":"inherited-from","content":"Inherited from"},{"id":"guild","content":"guild"},{"id":"returns-2","content":"Returns"},{"id":"inherited-from-1","content":"Inherited from"},{"id":"member","content":"member"},{"id":"returns-3","content":"Returns"},{"id":"inherited-from-2","content":"Inherited from"},{"id":"message","content":"message"},{"id":"returns-4","content":"Returns"},{"id":"inherited-from-3","content":"Inherited from"},{"id":"user","content":"user"},{"id":"returns-5","content":"Returns"},{"id":"inherited-from-4","content":"Inherited from"},{"id":"values","content":"values"},{"id":"returns-6","content":"Returns"},{"id":"overrides-1","content":"Overrides"},{"id":"methods","content":"Methods"},{"id":"defer","content":"defer()"},{"id":"returns-7","content":"Returns"},{"id":"inherited-from-5","content":"Inherited from"},{"id":"reply","content":"reply()"},{"id":"parameters-1","content":"Parameters"},{"id":"returns-8","content":"Returns"},{"id":"inherited-from-6","content":"Inherited from"},{"id":"showmodal","content":"showModal()"},{"id":"parameters-2","content":"Parameters"},{"id":"returns-9","content":"Returns"},{"id":"inherited-from-7","content":"Inherited from"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/api/enumerations/ClientMode.mdx","data":{"frontmatter":{"title":"ClientMode","index":false},"toc":[{"title":"Enumeration Members","url":"#enumeration-members","depth":2}],"structuredData":{"contents":[{"heading":"","content":"The mode that the client is running in.\nDifferent platforms have different requirements for how processes are handled."},{"heading":"enumeration-members","content":"Enumeration Member"},{"heading":"enumeration-members","content":"Value"},{"heading":"enumeration-members","content":"Bun"},{"heading":"enumeration-members","content":"\"bun\""},{"heading":"enumeration-members","content":"CloudflareWorkers"},{"heading":"enumeration-members","content":"\"cloudflare\""},{"heading":"enumeration-members","content":"NodeJS"},{"heading":"enumeration-members","content":"\"node\""},{"heading":"enumeration-members","content":"Vercel"},{"heading":"enumeration-members","content":"\"vercel\""},{"heading":"enumeration-members","content":"Web"},{"heading":"enumeration-members","content":"\"web\""}],"headings":[{"id":"enumeration-members","content":"Enumeration Members"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/api/functions/channelFactory.mdx","data":{"frontmatter":{"title":"channelFactory","index":false},"toc":[{"title":"Parameters","url":"#parameters","depth":2},{"title":"Returns","url":"#returns","depth":2}],"structuredData":{"contents":[{"heading":"","content":"channelFactory(client, channelData): null | DmChannel | GuildCategoryChannel | GroupDmChannel | GuildTextChannel | GuildVoiceChannel | GuildAnnouncementChannel | GuildThreadChannel<ThreadChannelType> | GuildStageChannel | GuildForumChannel | GuildMediaChannel"},{"heading":"parameters","content":"Parameter"},{"heading":"parameters","content":"Type"},{"heading":"parameters","content":"client"},{"heading":"parameters","content":"Client"},{"heading":"parameters","content":"channelData"},{"heading":"parameters","content":"APIChannel"},{"heading":"returns","content":"null | DmChannel | GuildCategoryChannel | GroupDmChannel | GuildTextChannel | GuildVoiceChannel | GuildAnnouncementChannel | GuildThreadChannel<ThreadChannelType> | GuildStageChannel | GuildForumChannel | GuildMediaChannel"}],"headings":[{"id":"parameters","content":"Parameters"},{"id":"returns","content":"Returns"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/api/type-aliases/AnySelectMenuComponentType.mdx","data":{"frontmatter":{"title":"AnySelectMenuComponentType","index":false},"toc":[],"structuredData":{"contents":[{"heading":"","content":"AnySelectMenuComponentType: ComponentType.ChannelSelect | ComponentType.RoleSelect | ComponentType.StringSelect | ComponentType.UserSelect | ComponentType.MentionableSelect"}],"headings":[]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/api/type-aliases/ClientOptions.mdx","data":{"frontmatter":{"title":"ClientOptions","index":false},"toc":[{"title":"Type declaration","url":"#type-declaration","depth":2}],"structuredData":{"contents":[{"heading":"","content":"ClientOptions: object"},{"heading":"","content":"The options used for initializing the client"},{"heading":"type-declaration","content":"Name"},{"heading":"type-declaration","content":"Type"},{"heading":"type-declaration","content":"Description"},{"heading":"type-declaration","content":"autoDeploy"},{"heading":"type-declaration","content":"boolean"},{"heading":"type-declaration","content":"Whether the commands should be deployed to Discord automatically."},{"heading":"type-declaration","content":"clientId"},{"heading":"type-declaration","content":"string"},{"heading":"type-declaration","content":"The client ID of the bot"},{"heading":"type-declaration","content":"interactionRoute"},{"heading":"type-declaration","content":"string"},{"heading":"type-declaration","content":"The route to use for interactions on your server. Default \"/interaction\""},{"heading":"type-declaration","content":"mode"},{"heading":"type-declaration","content":"ClientMode"},{"heading":"type-declaration","content":"The mode of the client, generally where you are hosting the bot. If you have a different mode for your local development, make sure to set it to the local one. Example import { Client, ClientMode } from \"@buape/carbon\" const client = new Client({ \tclientId: \"12345678901234567890\", \tpublicKey: \"c1a2f941ae8ce6d776f7704d0bb3d46b863e21fda491cdb2bdba6b8bc5fe7269\", \ttoken: \"MTA4NjEwNTYxMDUxMDE1NTg1Nw.GNt-U8.OSHy-g-5FlfESnu3Z9MEEMJLHiRthXajiXNwiE\", \tmode: process.env.NODE_ENV === \"development\" ? ClientMode.NodeJS : ClientMode.CloudflareWorkers })"},{"heading":"type-declaration","content":"port"},{"heading":"type-declaration","content":"number"},{"heading":"type-declaration","content":"The port to run the server on, if you are using ClientMode.Bun mode."},{"heading":"type-declaration","content":"publicKey"},{"heading":"type-declaration","content":"string"},{"heading":"type-declaration","content":"The public key of the bot, used for interaction verification"},{"heading":"type-declaration","content":"redirectUrl"},{"heading":"type-declaration","content":"string"},{"heading":"type-declaration","content":"If you want to have the root route for the interaction handler redirect to a different URL, you can set this."},{"heading":"type-declaration","content":"requestOptions"},{"heading":"type-declaration","content":"RequestClientOptions"},{"heading":"type-declaration","content":"The options used to initialize the request client, if you want to customize it."},{"heading":"type-declaration","content":"token"},{"heading":"type-declaration","content":"string"},{"heading":"type-declaration","content":"The token of the bot"}],"headings":[{"id":"type-declaration","content":"Type declaration"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/api/type-aliases/CommandOptions.mdx","data":{"frontmatter":{"title":"CommandOptions","index":false},"toc":[],"structuredData":{"contents":[{"heading":"","content":"CommandOptions: APIApplicationCommandBasicOption[]"}],"headings":[]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/api/type-aliases/ComponentAdditionalData.mdx","data":{"frontmatter":{"title":"ComponentAdditionalData","index":false},"toc":[{"title":"Index Signature","url":"#index-signature","depth":2}],"structuredData":{"contents":[{"heading":"","content":"ComponentAdditionalData: object"},{"heading":"index-signature","content":"[key: string]: string | number | boolean"}],"headings":[{"id":"index-signature","content":"Index Signature"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/api/type-aliases/InteractionFileData.mdx","data":{"frontmatter":{"title":"InteractionFileData","index":false},"toc":[{"title":"Type declaration","url":"#type-declaration","depth":2}],"structuredData":{"contents":[{"heading":"","content":"InteractionFileData: object"},{"heading":"","content":"The data for a file to send in an interaction"},{"heading":"type-declaration","content":"Name"},{"heading":"type-declaration","content":"Type"},{"heading":"type-declaration","content":"Description"},{"heading":"type-declaration","content":"data"},{"heading":"type-declaration","content":"Blob"},{"heading":"type-declaration","content":"The data of the file in a Blob"},{"heading":"type-declaration","content":"description"},{"heading":"type-declaration","content":"string"},{"heading":"type-declaration","content":"Alpha The alt text of the file, shown for accessibility This isn't implemented yet"},{"heading":"type-declaration","content":"name"},{"heading":"type-declaration","content":"string"},{"heading":"type-declaration","content":"The name of the file that will be given to Discord"}],"headings":[{"id":"type-declaration","content":"Type declaration"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/api/type-aliases/InteractionReplyData.mdx","data":{"frontmatter":{"title":"InteractionReplyData","index":false},"toc":[{"title":"Type declaration","url":"#type-declaration","depth":2}],"structuredData":{"contents":[{"heading":"","content":"InteractionReplyData: object"},{"heading":"","content":"The data to reply to an interaction"},{"heading":"type-declaration","content":"Name"},{"heading":"type-declaration","content":"Type"},{"heading":"type-declaration","content":"Description"},{"heading":"type-declaration","content":"components"},{"heading":"type-declaration","content":"Row[]"},{"heading":"type-declaration","content":"The components to send in the message, listed in rows"},{"heading":"type-declaration","content":"content"},{"heading":"type-declaration","content":"string"},{"heading":"type-declaration","content":"The content of the message"}],"headings":[{"id":"type-declaration","content":"Type declaration"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/api/type-aliases/InteractionReplyOptions.mdx","data":{"frontmatter":{"title":"InteractionReplyOptions","index":false},"toc":[{"title":"Type declaration","url":"#type-declaration","depth":2}],"structuredData":{"contents":[{"heading":"","content":"InteractionReplyOptions: object"},{"heading":"","content":"Additional options for replying to an interaction"},{"heading":"type-declaration","content":"Name"},{"heading":"type-declaration","content":"Type"},{"heading":"type-declaration","content":"Description"},{"heading":"type-declaration","content":"ephemeral"},{"heading":"type-declaration","content":"boolean"},{"heading":"type-declaration","content":"Whether the interaction should be ephemeral"},{"heading":"type-declaration","content":"files"},{"heading":"type-declaration","content":"InteractionFileData[]"},{"heading":"type-declaration","content":"The files to send in the interaction"}],"headings":[{"id":"type-declaration","content":"Type declaration"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/api/type-aliases/RawOptions.mdx","data":{"frontmatter":{"title":"RawOptions","index":false},"toc":[{"title":"Index Signature","url":"#index-signature","depth":2}],"structuredData":{"contents":[{"heading":"","content":"RawOptions: object"},{"heading":"index-signature","content":"[key: string]: APIApplicationCommandInteractionDataBasicOption[\"value\"] | undefined"}],"headings":[{"id":"index-signature","content":"Index Signature"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/linked-roles/api/classes/LinkedRoles.mdx","data":{"frontmatter":{"title":"LinkedRoles","index":false},"toc":[{"title":"Example","url":"#example","depth":2},{"title":"Constructors","url":"#constructors","depth":2},{"title":"new LinkedRoles()","url":"#new-linkedroles","depth":3},{"title":"Parameters","url":"#parameters","depth":4},{"title":"Returns","url":"#returns","depth":4},{"title":"Properties","url":"#properties","depth":2}],"structuredData":{"contents":[{"heading":"","content":"This class is the main class that is used for the linked roles feature of Carbon.\nIt handles all the additional routes and oauth."},{"heading":"new-linkedroles","content":"new LinkedRoles(client, options): LinkedRoles"},{"heading":"parameters","content":"Parameter"},{"heading":"parameters","content":"Type"},{"heading":"parameters","content":"client"},{"heading":"parameters","content":"Client"},{"heading":"parameters","content":"options"},{"heading":"parameters","content":"LinkedRolesOptions"},{"heading":"returns","content":"LinkedRoles"},{"heading":"properties","content":"Property"},{"heading":"properties","content":"Type"},{"heading":"properties","content":"client"},{"heading":"properties","content":"Client"},{"heading":"properties","content":"options"},{"heading":"properties","content":"Required<LinkedRolesOptions>"}],"headings":[{"id":"example","content":"Example"},{"id":"constructors","content":"Constructors"},{"id":"new-linkedroles","content":"new LinkedRoles()"},{"id":"parameters","content":"Parameters"},{"id":"returns","content":"Returns"},{"id":"properties","content":"Properties"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/helpful-guides/developer-portal/create-a-bot.mdx","data":{"lastModified":1725496146000,"frontmatter":{"title":"Create a Bot","index":false},"toc":[{"title":"Creating a Bot","url":"#creating-a-bot","depth":2}],"structuredData":{"contents":[{"heading":"","content":"The Discord Developer Portal is the main place that you can manage your bot on Discord."},{"heading":"creating-a-bot","content":"To create a Discord bot, you'll need to head over to the Discord Developer Portal and create a new application by using the New Application button in the top left. Give your application a name and click Create."},{"heading":"creating-a-bot","content":"You should now see a page that shows information about your bot. You can add an avatar and bio for your bot here."},{"heading":"creating-a-bot","content":"You'll also want to copy the Client ID and the Public Key there, you'll need those for your application."},{"heading":"creating-a-bot","content":"Once you've saved your changes, click on the Bot tab on the left panel."},{"heading":"creating-a-bot","content":"After you open the bot tab, you should see a blue button that says Reset Token. Click on it and confirm that you want to reset your bot's token. You should now see a new section called Token with a button that says Copy. When we ask you to paste your bot's token somewhere, this is the value that you need to put in."},{"heading":"creating-a-bot","content":"Tokens are in the format similar to this one:"},{"heading":"creating-a-bot","content":"If you accidentally leak your bot's token or lose it, you need to come back to this page and reset your bot's token again which will reveal the new token, invalidating all old ones."}],"headings":[{"id":"creating-a-bot","content":"Creating a Bot"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/helpful-guides/developer-portal/index.mdx","data":{"lastModified":1725496146000,"frontmatter":{"title":"Developer Portal","index":true},"toc":[],"structuredData":{"contents":[],"headings":[]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/carbon/helpful-guides/developer-portal/urls.mdx","data":{"lastModified":1725496146000,"frontmatter":{"title":"Setting URLs","index":false},"toc":[{"title":"Setting your interaction URL","url":"#setting-your-interaction-url","depth":2}],"structuredData":{"contents":[{"heading":"","content":"The Discord Developer Portal is the main place that you can manage your bot on Discord."},{"heading":"setting-your-interaction-url","content":"Once you have Carbon running, you'll want to set your interaction URL. This is the URL that Discord will send interactions to.\nUnless you've modified it, this will be at https://DOMAIN.COM/interaction, replacing DOMAIN.COM with your domain."},{"heading":"setting-your-interaction-url","content":"Go to the Information tab on the left panel for your bot, and look below the public key."},{"heading":"setting-your-interaction-url","content":"Put your interaction URL in the Interaction URL field, and click Save Changes.\nDiscord will then attempt to send a test interaction to your URL, and if it succeeds, you're good to go!\nIf not, make sure you've set the URL correctly, and make sure that Carbon is actually running."}],"headings":[{"id":"setting-your-interaction-url","content":"Setting your interaction URL"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/linked-roles/api/enumerations/ApplicationRoleConnectionMetadataType.mdx","data":{"frontmatter":{"title":"ApplicationRoleConnectionMetadataType","index":false},"toc":[{"title":"Enumeration Members","url":"#enumeration-members","depth":2}],"structuredData":{"contents":[{"heading":"","content":"The type of metadata that you can check for"},{"heading":"enumeration-members","content":"Enumeration Member"},{"heading":"enumeration-members","content":"Value"},{"heading":"enumeration-members","content":"Description"},{"heading":"enumeration-members","content":"BooleanEqual"},{"heading":"enumeration-members","content":"7"},{"heading":"enumeration-members","content":"The metadata value (integer) is equal to the guild's configured value (integer; 1)"},{"heading":"enumeration-members","content":"BooleanNotEqual"},{"heading":"enumeration-members","content":"8"},{"heading":"enumeration-members","content":"The metadata value (integer) is not equal to the guild's configured value (integer; 1)"},{"heading":"enumeration-members","content":"DatetimeGreaterThanOrEqual"},{"heading":"enumeration-members","content":"6"},{"heading":"enumeration-members","content":"The metadata value (ISO8601 string) is greater than or equal to the guild's configured value (integer; days before current date)"},{"heading":"enumeration-members","content":"DatetimeLessThanOrEqual"},{"heading":"enumeration-members","content":"5"},{"heading":"enumeration-members","content":"The metadata value (ISO8601 string) is less than or equal to the guild's configured value (integer; days before current date)"},{"heading":"enumeration-members","content":"IntegerEqual"},{"heading":"enumeration-members","content":"3"},{"heading":"enumeration-members","content":"The metadata value (integer) is equal to the guild's configured value (integer)"},{"heading":"enumeration-members","content":"IntegerGreaterThanOrEqual"},{"heading":"enumeration-members","content":"2"},{"heading":"enumeration-members","content":"The metadata value (integer) is greater than or equal to the guild's configured value (integer)"},{"heading":"enumeration-members","content":"IntegerLessThanOrEqual"},{"heading":"enumeration-members","content":"1"},{"heading":"enumeration-members","content":"The metadata value (integer) is less than or equal to the guild's configured value (integer)"},{"heading":"enumeration-members","content":"IntegerNotEqual"},{"heading":"enumeration-members","content":"4"},{"heading":"enumeration-members","content":"The metadata value (integer) is not equal to the guild's configured value (integer)"}],"headings":[{"id":"enumeration-members","content":"Enumeration Members"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/linked-roles/api/type-aliases/LinkedRoleCriteria.mdx","data":{"frontmatter":{"title":"LinkedRoleCriteria","index":false},"toc":[{"title":"Type declaration","url":"#type-declaration","depth":2},{"title":"Remarks","url":"#remarks","depth":2}],"structuredData":{"contents":[{"heading":"","content":"LinkedRoleCriteria: object"},{"heading":"","content":"The metadata that you want to check for, and that should show to the end-user on Discord."},{"heading":"type-declaration","content":"Name"},{"heading":"type-declaration","content":"Type"},{"heading":"type-declaration","content":"Description"},{"heading":"type-declaration","content":"description"},{"heading":"type-declaration","content":"string"},{"heading":"type-declaration","content":"A description of the metadata."},{"heading":"type-declaration","content":"key"},{"heading":"type-declaration","content":"string"},{"heading":"type-declaration","content":"The key of the metadata. This is only used on the code side, and is not seen by the end user."},{"heading":"type-declaration","content":"name"},{"heading":"type-declaration","content":"string"},{"heading":"type-declaration","content":"The name of the metadata. This is what the end user will see."},{"heading":"type-declaration","content":"type"},{"heading":"type-declaration","content":"ApplicationRoleConnectionMetadataType"},{"heading":"type-declaration","content":"The type of metadata that you want to check for."},{"heading":"remarks","content":"You can only have 5 metadata per application, and they apply across all guilds your app is in."}],"headings":[{"id":"type-declaration","content":"Type declaration"},{"id":"remarks","content":"Remarks"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/linked-roles/api/type-aliases/LinkedRolesOptions.mdx","data":{"frontmatter":{"title":"LinkedRolesOptions","index":false},"toc":[{"title":"Type declaration","url":"#type-declaration","depth":2}],"structuredData":{"contents":[{"heading":"","content":"LinkedRolesOptions: object"},{"heading":"","content":"The options for the linked roles package"},{"heading":"type-declaration","content":"Name"},{"heading":"type-declaration","content":"Type"},{"heading":"type-declaration","content":"Description"},{"heading":"type-declaration","content":"baseUrl"},{"heading":"type-declaration","content":"string"},{"heading":"type-declaration","content":"The base URL of where you are hosting your bot. This is used for redirect URLs to and from Discord's OAuth2 flow."},{"heading":"type-declaration","content":"clientSecret"},{"heading":"type-declaration","content":"string"},{"heading":"type-declaration","content":"The client secret for the bot"},{"heading":"type-declaration","content":"metadata"},{"heading":"type-declaration","content":"LinkedRoleCriteria[]"},{"heading":"type-declaration","content":"The metadata that you want to check for, and that should show to the end-user on Discord."},{"heading":"type-declaration","content":"metadataCheckers"},{"heading":"type-declaration","content":"object"},{"heading":"type-declaration","content":"The functions that you want to use to check the metadata. Remarks If you are checking a boolean, you should return true or false. If you are checking an integer, you should return a number that is safe to use as an integer. If you are checking a datetime, you should return a Date.now() timestamp."}],"headings":[{"id":"type-declaration","content":"Type declaration"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/request/api/classes/BaseError.mdx","data":{"frontmatter":{"title":"BaseError","index":false},"toc":[{"title":"Extends","url":"#extends","depth":2},{"title":"Extended by","url":"#extended-by","depth":2},{"title":"Constructors","url":"#constructors","depth":2},{"title":"new BaseError()","url":"#new-baseerror","depth":3},{"title":"Parameters","url":"#parameters","depth":4},{"title":"Returns","url":"#returns","depth":4},{"title":"Inherited from","url":"#inherited-from","depth":4},{"title":"new BaseError()","url":"#new-baseerror-1","depth":3},{"title":"Parameters","url":"#parameters-1","depth":4},{"title":"Returns","url":"#returns-1","depth":4},{"title":"Inherited from","url":"#inherited-from-1","depth":4},{"title":"Properties","url":"#properties","depth":2}],"structuredData":{"contents":[{"heading":"extends","content":"Error"},{"heading":"extended-by","content":"DiscordError"},{"heading":"new-baseerror","content":"new BaseError(message?): BaseError"},{"heading":"parameters","content":"Parameter"},{"heading":"parameters","content":"Type"},{"heading":"parameters","content":"message?"},{"heading":"parameters","content":"string"},{"heading":"returns","content":"BaseError"},{"heading":"inherited-from","content":"Error.constructor"},{"heading":"new-baseerror-1","content":"new BaseError(message?, options?): BaseError"},{"heading":"parameters-1","content":"Parameter"},{"heading":"parameters-1","content":"Type"},{"heading":"parameters-1","content":"message?"},{"heading":"parameters-1","content":"string"},{"heading":"parameters-1","content":"options?"},{"heading":"parameters-1","content":"ErrorOptions"},{"heading":"returns-1","content":"BaseError"},{"heading":"inherited-from-1","content":"Error.constructor"},{"heading":"properties","content":"Property"},{"heading":"properties","content":"Type"},{"heading":"properties","content":"Inherited from"},{"heading":"properties","content":"cause?"},{"heading":"properties","content":"unknown"},{"heading":"properties","content":"Error.cause"},{"heading":"properties","content":"message"},{"heading":"properties","content":"string"},{"heading":"properties","content":"Error.message"},{"heading":"properties","content":"name"},{"heading":"properties","content":"string"},{"heading":"properties","content":"Error.name"},{"heading":"properties","content":"stack?"},{"heading":"properties","content":"string"},{"heading":"properties","content":"Error.stack"}],"headings":[{"id":"extends","content":"Extends"},{"id":"extended-by","content":"Extended by"},{"id":"constructors","content":"Constructors"},{"id":"new-baseerror","content":"new BaseError()"},{"id":"parameters","content":"Parameters"},{"id":"returns","content":"Returns"},{"id":"inherited-from","content":"Inherited from"},{"id":"new-baseerror-1","content":"new BaseError()"},{"id":"parameters-1","content":"Parameters"},{"id":"returns-1","content":"Returns"},{"id":"inherited-from-1","content":"Inherited from"},{"id":"properties","content":"Properties"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/request/api/classes/DiscordError.mdx","data":{"frontmatter":{"title":"DiscordError","index":false},"toc":[{"title":"Extends","url":"#extends","depth":2},{"title":"Extended by","url":"#extended-by","depth":2},{"title":"Constructors","url":"#constructors","depth":2},{"title":"new DiscordError()","url":"#new-discorderror","depth":3},{"title":"Parameters","url":"#parameters","depth":4},{"title":"Returns","url":"#returns","depth":4},{"title":"Overrides","url":"#overrides","depth":4},{"title":"Properties","url":"#properties","depth":2}],"structuredData":{"contents":[{"heading":"extends","content":"BaseError"},{"heading":"extended-by","content":"RateLimitError"},{"heading":"new-discorderror","content":"new DiscordError(response, body): DiscordError"},{"heading":"parameters","content":"Parameter"},{"heading":"parameters","content":"Type"},{"heading":"parameters","content":"response"},{"heading":"parameters","content":"Response"},{"heading":"parameters","content":"body"},{"heading":"parameters","content":"DiscordRawError"},{"heading":"returns","content":"DiscordError"},{"heading":"overrides","content":"BaseError.constructor"},{"heading":"properties","content":"Property"},{"heading":"properties","content":"Type"},{"heading":"properties","content":"Description"},{"heading":"properties","content":"Inherited from"},{"heading":"properties","content":"cause?"},{"heading":"properties","content":"unknown"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseError.cause"},{"heading":"properties","content":"discordCode?"},{"heading":"properties","content":"number"},{"heading":"properties","content":"The Discord error code See https://discord.com/developers/docs/topics/opcodes-and-status-codes#json"},{"heading":"properties","content":"-"},{"heading":"properties","content":"errors"},{"heading":"properties","content":"TransformedError[]"},{"heading":"properties","content":"An array of the errors that were returned by Discord"},{"heading":"properties","content":"-"},{"heading":"properties","content":"message"},{"heading":"properties","content":"string"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseError.message"},{"heading":"properties","content":"name"},{"heading":"properties","content":"string"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseError.name"},{"heading":"properties","content":"rawBody"},{"heading":"properties","content":"DiscordRawError"},{"heading":"properties","content":"Internal The raw body of the error from Discord"},{"heading":"properties","content":"-"},{"heading":"properties","content":"stack?"},{"heading":"properties","content":"string"},{"heading":"properties","content":"-"},{"heading":"properties","content":"BaseError.stack"},{"heading":"properties","content":"status"},{"heading":"properties","content":"number"},{"heading":"properties","content":"The HTTP status code of the response from Discord See https://discord.com/developers/docs/topics/opcodes-and-status-codes#http"},{"heading":"properties","content":"-"}],"headings":[{"id":"extends","content":"Extends"},{"id":"extended-by","content":"Extended by"},{"id":"constructors","content":"Constructors"},{"id":"new-discorderror","content":"new DiscordError()"},{"id":"parameters","content":"Parameters"},{"id":"returns","content":"Returns"},{"id":"overrides","content":"Overrides"},{"id":"properties","content":"Properties"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/request/api/classes/RateLimitError.mdx","data":{"frontmatter":{"title":"RateLimitError","index":false},"toc":[{"title":"Extends","url":"#extends","depth":2},{"title":"Constructors","url":"#constructors","depth":2},{"title":"new RateLimitError()","url":"#new-ratelimiterror","depth":3},{"title":"Parameters","url":"#parameters","depth":4},{"title":"Returns","url":"#returns","depth":4},{"title":"Overrides","url":"#overrides","depth":4},{"title":"Properties","url":"#properties","depth":2}],"structuredData":{"contents":[{"heading":"","content":"A RateLimitError is thrown when the bot is rate limited by Discord, and you don't have requests set to queue."},{"heading":"extends","content":"DiscordError"},{"heading":"new-ratelimiterror","content":"new RateLimitError(response, body): RateLimitError"},{"heading":"parameters","content":"Parameter"},{"heading":"parameters","content":"Type"},{"heading":"parameters","content":"response"},{"heading":"parameters","content":"Response"},{"heading":"parameters","content":"body"},{"heading":"parameters","content":"object"},{"heading":"parameters","content":"body.global"},{"heading":"parameters","content":"boolean"},{"heading":"parameters","content":"body.message"},{"heading":"parameters","content":"string"},{"heading":"parameters","content":"body.retry_after"},{"heading":"parameters","content":"number"},{"heading":"returns","content":"RateLimitError"},{"heading":"overrides","content":"DiscordError.constructor"},{"heading":"properties","content":"Property"},{"heading":"properties","content":"Type"},{"heading":"properties","content":"Description"},{"heading":"properties","content":"Inherited from"},{"heading":"properties","content":"bucket"},{"heading":"properties","content":"null | string"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"cause?"},{"heading":"properties","content":"unknown"},{"heading":"properties","content":"-"},{"heading":"properties","content":"DiscordError.cause"},{"heading":"properties","content":"discordCode?"},{"heading":"properties","content":"number"},{"heading":"properties","content":"The Discord error code See https://discord.com/developers/docs/topics/opcodes-and-status-codes#json"},{"heading":"properties","content":"DiscordError.discordCode"},{"heading":"properties","content":"errors"},{"heading":"properties","content":"TransformedError[]"},{"heading":"properties","content":"An array of the errors that were returned by Discord"},{"heading":"properties","content":"DiscordError.errors"},{"heading":"properties","content":"message"},{"heading":"properties","content":"string"},{"heading":"properties","content":"-"},{"heading":"properties","content":"DiscordError.message"},{"heading":"properties","content":"name"},{"heading":"properties","content":"string"},{"heading":"properties","content":"-"},{"heading":"properties","content":"DiscordError.name"},{"heading":"properties","content":"rawBody"},{"heading":"properties","content":"DiscordRawError"},{"heading":"properties","content":"Internal The raw body of the error from Discord"},{"heading":"properties","content":"DiscordError.rawBody"},{"heading":"properties","content":"retryAfter"},{"heading":"properties","content":"number"},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"scope"},{"heading":"properties","content":"\"global\" | \"shared\" | \"user\""},{"heading":"properties","content":"-"},{"heading":"properties","content":"-"},{"heading":"properties","content":"stack?"},{"heading":"properties","content":"string"},{"heading":"properties","content":"-"},{"heading":"properties","content":"DiscordError.stack"},{"heading":"properties","content":"status"},{"heading":"properties","content":"number"},{"heading":"properties","content":"The HTTP status code of the response from Discord See https://discord.com/developers/docs/topics/opcodes-and-status-codes#http"},{"heading":"properties","content":"DiscordError.status"}],"headings":[{"id":"extends","content":"Extends"},{"id":"constructors","content":"Constructors"},{"id":"new-ratelimiterror","content":"new RateLimitError()"},{"id":"parameters","content":"Parameters"},{"id":"returns","content":"Returns"},{"id":"overrides","content":"Overrides"},{"id":"properties","content":"Properties"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/request/api/classes/RequestClient.mdx","data":{"frontmatter":{"title":"RequestClient","index":false},"toc":[{"title":"Constructors","url":"#constructors","depth":2},{"title":"new RequestClient()","url":"#new-requestclient","depth":3},{"title":"Parameters","url":"#parameters","depth":4},{"title":"Returns","url":"#returns","depth":4},{"title":"Properties","url":"#properties","depth":2},{"title":"Methods","url":"#methods","depth":2},{"title":"abortAllRequests()","url":"#abortallrequests","depth":3},{"title":"Returns","url":"#returns-1","depth":4},{"title":"delete()","url":"#delete","depth":3},{"title":"Parameters","url":"#parameters-1","depth":4},{"title":"Returns","url":"#returns-2","depth":4},{"title":"get()","url":"#get","depth":3},{"title":"Parameters","url":"#parameters-2","depth":4},{"title":"Returns","url":"#returns-3","depth":4},{"title":"patch()","url":"#patch","depth":3},{"title":"Parameters","url":"#parameters-3","depth":4},{"title":"Returns","url":"#returns-4","depth":4},{"title":"post()","url":"#post","depth":3},{"title":"Parameters","url":"#parameters-4","depth":4},{"title":"Returns","url":"#returns-5","depth":4},{"title":"put()","url":"#put","depth":3},{"title":"Parameters","url":"#parameters-5","depth":4},{"title":"Returns","url":"#returns-6","depth":4}],"structuredData":{"contents":[{"heading":"","content":"This is the main class that handles making requests to the Discord API.\nIt is used internally by Carbon, and you should not need to use it directly, but feel free to if you feel like living dangerously."},{"heading":"new-requestclient","content":"new RequestClient(token, options?): RequestClient"},{"heading":"parameters","content":"Parameter"},{"heading":"parameters","content":"Type"},{"heading":"parameters","content":"token"},{"heading":"parameters","content":"string"},{"heading":"parameters","content":"options?"},{"heading":"parameters","content":"RequestClientOptions"},{"heading":"returns","content":"RequestClient"},{"heading":"properties","content":"Property"},{"heading":"properties","content":"Modifier"},{"heading":"properties","content":"Type"},{"heading":"properties","content":"Default value"},{"heading":"properties","content":"Description"},{"heading":"properties","content":"options"},{"heading":"properties","content":"readonly"},{"heading":"properties","content":"RequestClientOptions"},{"heading":"properties","content":"undefined"},{"heading":"properties","content":"The options used to initialize the client"},{"heading":"properties","content":"queue"},{"heading":"properties","content":"protected"},{"heading":"properties","content":"QueuedRequest[]"},{"heading":"properties","content":"[]"},{"heading":"properties","content":"-"},{"heading":"abortallrequests","content":"abortAllRequests(): void"},{"heading":"returns-1","content":"void"},{"heading":"delete","content":"delete(path, data?): Promise<unknown>"},{"heading":"parameters-1","content":"Parameter"},{"heading":"parameters-1","content":"Type"},{"heading":"parameters-1","content":"path"},{"heading":"parameters-1","content":"string"},{"heading":"parameters-1","content":"data?"},{"heading":"parameters-1","content":"RequestData"},{"heading":"returns-2","content":"Promise<unknown>"},{"heading":"get","content":"get(path): Promise<unknown>"},{"heading":"parameters-2","content":"Parameter"},{"heading":"parameters-2","content":"Type"},{"heading":"parameters-2","content":"path"},{"heading":"parameters-2","content":"string"},{"heading":"returns-3","content":"Promise<unknown>"},{"heading":"patch","content":"patch(path, data?): Promise<unknown>"},{"heading":"parameters-3","content":"Parameter"},{"heading":"parameters-3","content":"Type"},{"heading":"parameters-3","content":"path"},{"heading":"parameters-3","content":"string"},{"heading":"parameters-3","content":"data?"},{"heading":"parameters-3","content":"RequestData"},{"heading":"returns-4","content":"Promise<unknown>"},{"heading":"post","content":"post(path, data?): Promise<unknown>"},{"heading":"parameters-4","content":"Parameter"},{"heading":"parameters-4","content":"Type"},{"heading":"parameters-4","content":"path"},{"heading":"parameters-4","content":"string"},{"heading":"parameters-4","content":"data?"},{"heading":"parameters-4","content":"RequestData"},{"heading":"returns-5","content":"Promise<unknown>"},{"heading":"put","content":"put(path, data?): Promise<unknown>"},{"heading":"parameters-5","content":"Parameter"},{"heading":"parameters-5","content":"Type"},{"heading":"parameters-5","content":"path"},{"heading":"parameters-5","content":"string"},{"heading":"parameters-5","content":"data?"},{"heading":"parameters-5","content":"RequestData"},{"heading":"returns-6","content":"Promise<unknown>"}],"headings":[{"id":"constructors","content":"Constructors"},{"id":"new-requestclient","content":"new RequestClient()"},{"id":"parameters","content":"Parameters"},{"id":"returns","content":"Returns"},{"id":"properties","content":"Properties"},{"id":"methods","content":"Methods"},{"id":"abortallrequests","content":"abortAllRequests()"},{"id":"returns-1","content":"Returns"},{"id":"delete","content":"delete()"},{"id":"parameters-1","content":"Parameters"},{"id":"returns-2","content":"Returns"},{"id":"get","content":"get()"},{"id":"parameters-2","content":"Parameters"},{"id":"returns-3","content":"Returns"},{"id":"patch","content":"patch()"},{"id":"parameters-3","content":"Parameters"},{"id":"returns-4","content":"Returns"},{"id":"post","content":"post()"},{"id":"parameters-4","content":"Parameters"},{"id":"returns-5","content":"Returns"},{"id":"put","content":"put()"},{"id":"parameters-5","content":"Parameters"},{"id":"returns-6","content":"Returns"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/request/api/type-aliases/Attachment.mdx","data":{"frontmatter":{"title":"Attachment","index":false},"toc":[{"title":"Type declaration","url":"#type-declaration","depth":2}],"structuredData":{"contents":[{"heading":"","content":"Attachment: object"},{"heading":"type-declaration","content":"Name"},{"heading":"type-declaration","content":"Type"},{"heading":"type-declaration","content":"data"},{"heading":"type-declaration","content":"Blob"},{"heading":"type-declaration","content":"id"},{"heading":"type-declaration","content":"string"},{"heading":"type-declaration","content":"name"},{"heading":"type-declaration","content":"string"}],"headings":[{"id":"type-declaration","content":"Type declaration"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/request/api/type-aliases/DiscordRawError.mdx","data":{"frontmatter":{"title":"DiscordRawError","index":false},"toc":[{"title":"Type declaration","url":"#type-declaration","depth":2}],"structuredData":{"contents":[{"heading":"","content":"DiscordRawError: object"},{"heading":"type-declaration","content":"Name"},{"heading":"type-declaration","content":"Type"},{"heading":"type-declaration","content":"code"},{"heading":"type-declaration","content":"number"},{"heading":"type-declaration","content":"errors"},{"heading":"type-declaration","content":"object"},{"heading":"type-declaration","content":"message"},{"heading":"type-declaration","content":"string"}],"headings":[{"id":"type-declaration","content":"Type declaration"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/request/api/type-aliases/QueuedRequest.mdx","data":{"frontmatter":{"title":"QueuedRequest","index":false},"toc":[{"title":"Type declaration","url":"#type-declaration","depth":2}],"structuredData":{"contents":[{"heading":"","content":"QueuedRequest: object"},{"heading":"type-declaration","content":"Name"},{"heading":"type-declaration","content":"Type"},{"heading":"type-declaration","content":"data"},{"heading":"type-declaration","content":"RequestData"},{"heading":"type-declaration","content":"method"},{"heading":"type-declaration","content":"string"},{"heading":"type-declaration","content":"path"},{"heading":"type-declaration","content":"string"},{"heading":"type-declaration","content":"reject"},{"heading":"type-declaration","content":"(reason?) => void"},{"heading":"type-declaration","content":"resolve"},{"heading":"type-declaration","content":"(value?) => void"}],"headings":[{"id":"type-declaration","content":"Type declaration"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/request/api/type-aliases/RequestClientOptions.mdx","data":{"frontmatter":{"title":"RequestClientOptions","index":false},"toc":[{"title":"Type declaration","url":"#type-declaration","depth":2}],"structuredData":{"contents":[{"heading":"","content":"RequestClientOptions: object"},{"heading":"","content":"The options used to initialize the RequestClient"},{"heading":"type-declaration","content":"Name"},{"heading":"type-declaration","content":"Type"},{"heading":"type-declaration","content":"Description"},{"heading":"type-declaration","content":"apiVersion"},{"heading":"type-declaration","content":"number"},{"heading":"type-declaration","content":"The version of the API to use. Default 10"},{"heading":"type-declaration","content":"baseUrl"},{"heading":"type-declaration","content":"string"},{"heading":"type-declaration","content":"The base URL of the API. Default https://discord.com/api"},{"heading":"type-declaration","content":"queueRequests"},{"heading":"type-declaration","content":"boolean"},{"heading":"type-declaration","content":"Whether or not to queue requests if you are rate limited. If this is true, requests will be queued and wait for the ratelimit to clear. If this is false, requests will be made immediately and will throw a RateLimitError if you are rate limited. Default true"},{"heading":"type-declaration","content":"timeout"},{"heading":"type-declaration","content":"number"},{"heading":"type-declaration","content":"The timeout for requests. Default 15000"},{"heading":"type-declaration","content":"tokenHeader"},{"heading":"type-declaration","content":"\"Bot\" | \"Bearer\""},{"heading":"type-declaration","content":"The header used to send the token in the request. This should generally always be \"Bot\" unless you are working with OAuth. Default \"Bot\""},{"heading":"type-declaration","content":"userAgent"},{"heading":"type-declaration","content":"string"},{"heading":"type-declaration","content":"The user agent to use when making requests. Default DiscordBot (https://github.com/buape/carbon, v0.0.0)"}],"headings":[{"id":"type-declaration","content":"Type declaration"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/request/api/type-aliases/RequestData.mdx","data":{"frontmatter":{"title":"RequestData","index":false},"toc":[{"title":"Type declaration","url":"#type-declaration","depth":2}],"structuredData":{"contents":[{"heading":"","content":"RequestData: object"},{"heading":"type-declaration","content":"Name"},{"heading":"type-declaration","content":"Type"},{"heading":"type-declaration","content":"body"},{"heading":"type-declaration","content":"unknown"},{"heading":"type-declaration","content":"files"},{"heading":"type-declaration","content":"Attachment[]"},{"heading":"type-declaration","content":"rawBody"},{"heading":"type-declaration","content":"boolean"}],"headings":[{"id":"type-declaration","content":"Type declaration"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/request/api/functions/errorMapper.mdx","data":{"frontmatter":{"title":"errorMapper","index":false},"toc":[{"title":"Parameters","url":"#parameters","depth":2},{"title":"Returns","url":"#returns","depth":2}],"structuredData":{"contents":[{"heading":"","content":"errorMapper(data?): TransformedError[]"},{"heading":"parameters","content":"Parameter"},{"heading":"parameters","content":"Type"},{"heading":"parameters","content":"data?"},{"heading":"parameters","content":"DiscordRawError"},{"heading":"returns","content":"TransformedError[]"}],"headings":[{"id":"parameters","content":"Parameters"},{"id":"returns","content":"Returns"}]}},"collection":"docs"},{"path":"/Users/shadow/Projects/carbon/website/content/request/api/interfaces/TransformedError.mdx","data":{"frontmatter":{"title":"TransformedError","index":false},"toc":[{"title":"Properties","url":"#properties","depth":2}],"structuredData":{"contents":[{"heading":"properties","content":"Property"},{"heading":"properties","content":"Type"},{"heading":"properties","content":"code"},{"heading":"properties","content":"string"},{"heading":"properties","content":"location?"},{"heading":"properties","content":"string"},{"heading":"properties","content":"message"},{"heading":"properties","content":"string"}],"headings":[{"id":"properties","content":"Properties"}]}},"collection":"docs"}]}